--
-- PostgreSQL database dump
--

-- Dumped from database version 16.3 (Ubuntu 16.3-0ubuntu0.24.04.1)
-- Dumped by pg_dump version 16.3 (Ubuntu 16.3-0ubuntu0.24.04.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: moon
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO moon;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: moon
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: moon
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO moon;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: moon
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: moon
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO moon;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: moon
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: moon
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE public.auth_user OWNER TO moon;

--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: moon
--

CREATE TABLE public.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.auth_user_groups OWNER TO moon;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: moon
--

ALTER TABLE public.auth_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: moon
--

ALTER TABLE public.auth_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: moon
--

CREATE TABLE public.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_user_user_permissions OWNER TO moon;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: moon
--

ALTER TABLE public.auth_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: aws_aws; Type: TABLE; Schema: public; Owner: moon
--

CREATE TABLE public.aws_aws (
    id bigint NOT NULL,
    question_text text NOT NULL,
    option_a character varying(255) NOT NULL,
    option_b character varying(255) NOT NULL,
    option_c character varying(255) NOT NULL,
    option_d character varying(255) NOT NULL,
    correct_answer character varying(100) NOT NULL,
    question_text_last_line text NOT NULL
);


ALTER TABLE public.aws_aws OWNER TO moon;

--
-- Name: aws_aws_id_seq; Type: SEQUENCE; Schema: public; Owner: moon
--

ALTER TABLE public.aws_aws ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.aws_aws_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: moon
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO moon;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: moon
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: moon
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO moon;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: moon
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: moon
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO moon;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: moon
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: moon
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO moon;

--
-- Name: linux_pdf1; Type: TABLE; Schema: public; Owner: moon
--

CREATE TABLE public.linux_pdf1 (
    id bigint NOT NULL,
    col1 integer NOT NULL,
    col2 integer NOT NULL
);


ALTER TABLE public.linux_pdf1 OWNER TO moon;

--
-- Name: linux_pdf2; Type: TABLE; Schema: public; Owner: moon
--

CREATE TABLE public.linux_pdf2 (
    id bigint NOT NULL,
    col1 integer NOT NULL,
    col3 integer NOT NULL
);


ALTER TABLE public.linux_pdf2 OWNER TO moon;

--
-- Name: linux_pdf3; Type: TABLE; Schema: public; Owner: moon
--

CREATE TABLE public.linux_pdf3 (
    id bigint NOT NULL,
    col1 integer NOT NULL,
    col4 integer NOT NULL
);


ALTER TABLE public.linux_pdf3 OWNER TO moon;

--
-- Name: linux_pdf4; Type: TABLE; Schema: public; Owner: moon
--

CREATE TABLE public.linux_pdf4 (
    id bigint NOT NULL,
    col1 integer NOT NULL,
    col5 integer NOT NULL
);


ALTER TABLE public.linux_pdf4 OWNER TO moon;

--
-- Name: linux_table12_id_seq; Type: SEQUENCE; Schema: public; Owner: moon
--

ALTER TABLE public.linux_pdf3 ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.linux_table12_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: linux_table13_id_seq; Type: SEQUENCE; Schema: public; Owner: moon
--

ALTER TABLE public.linux_pdf1 ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.linux_table13_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: linux_table14_id_seq; Type: SEQUENCE; Schema: public; Owner: moon
--

ALTER TABLE public.linux_pdf4 ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.linux_table14_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: linux_table15_id_seq; Type: SEQUENCE; Schema: public; Owner: moon
--

ALTER TABLE public.linux_pdf2 ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.linux_table15_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: nca_nca; Type: TABLE; Schema: public; Owner: moon
--

CREATE TABLE public.nca_nca (
    id bigint NOT NULL,
    question_text character varying(1000) NOT NULL,
    choice_a character varying(500) NOT NULL,
    choice_b character varying(500) NOT NULL,
    choice_c character varying(500) NOT NULL,
    choice_d character varying(500) NOT NULL,
    correct_answer character varying(100) NOT NULL
);


ALTER TABLE public.nca_nca OWNER TO moon;

--
-- Name: nca_nca_id_seq; Type: SEQUENCE; Schema: public; Owner: moon
--

ALTER TABLE public.nca_nca ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.nca_nca_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: moon
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: moon
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: moon
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add user	4	add_user
14	Can change user	4	change_user
15	Can delete user	4	delete_user
16	Can view user	4	view_user
17	Can add content type	5	add_contenttype
18	Can change content type	5	change_contenttype
19	Can delete content type	5	delete_contenttype
20	Can view content type	5	view_contenttype
21	Can add session	6	add_session
22	Can change session	6	change_session
23	Can delete session	6	delete_session
24	Can view session	6	view_session
25	Can add pd f1	7	add_pdf1
26	Can change pd f1	7	change_pdf1
27	Can delete pd f1	7	delete_pdf1
28	Can view pd f1	7	view_pdf1
29	Can add pd f2	8	add_pdf2
30	Can change pd f2	8	change_pdf2
31	Can delete pd f2	8	delete_pdf2
32	Can view pd f2	8	view_pdf2
33	Can add pd f3	9	add_pdf3
34	Can change pd f3	9	change_pdf3
35	Can delete pd f3	9	delete_pdf3
36	Can view pd f3	9	view_pdf3
37	Can add pd f4	10	add_pdf4
38	Can change pd f4	10	change_pdf4
39	Can delete pd f4	10	delete_pdf4
40	Can view pd f4	10	view_pdf4
41	Can add nca	11	add_nca
42	Can change nca	11	change_nca
43	Can delete nca	11	delete_nca
44	Can view nca	11	view_nca
45	Can add aws	12	add_aws
46	Can change aws	12	change_aws
47	Can delete aws	12	delete_aws
48	Can view aws	12	view_aws
\.


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: public; Owner: moon
--

COPY public.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;
1	pbkdf2_sha256$600000$dyBIrtpBehswBnrG0StkxZ$sKEJHsSRP1LgVpGxVhp4Mo8WbnAdX9JbZPZ1fqiNmIQ=	2024-07-10 14:33:49.186501+09	t	moon				t	t	2024-07-08 11:52:56.113845+09
\.


--
-- Data for Name: auth_user_groups; Type: TABLE DATA; Schema: public; Owner: moon
--

COPY public.auth_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: auth_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: moon
--

COPY public.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: aws_aws; Type: TABLE DATA; Schema: public; Owner: moon
--

COPY public.aws_aws (id, question_text, option_a, option_b, option_c, option_d, correct_answer, question_text_last_line) FROM stdin;
1354	Q1. 전자 상거래 회사는 AWS 클라우드에서 분석 애플리케이션을 호스팅합니다. 애플리케이션은 매달 약 300MB의 데이터를 생성합니다. 데이터는 JSON 형식으로 저장됩니다. 회사는 데이터를 백업하기 위해 재해 복구 솔루션을 평가하고 있습니다. 데이터는 필요한 경우 밀리초 단위로 액세스할 수 있어야 하며 데이터는 30 일 동안 보관해야 합니다. \n\n어떤 솔루션이 이러한 요구 사항을 가장 비용 효율적으로 충족합니까?	Amazon OpenSearch Service(Amazon Elasticsearch Service)	아마존 S3 빙하(Amazon S3 Glacier)	아마존 S3 표준(Amazon S3 Standard)	PostgreSQL 용 Amazon RDS	C	
1355	Q2. 회사는 AWS 에서 호스팅되는 서비스 솔루션으로 고성능 컴퓨팅(HPC) 워크로드를 구축할 계획입니다. 16 개의 Amazon EC2 Linux 인스턴스 그룹에는 노드 간 통신에 가장 낮은 지연 시간이 필요합니다. 인스턴스에는 고성능 스토리지를 위한 공유 블록 장치 볼륨도 필요합니다. \n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	클러스터 배치 그룹을 사용합니다. Amazon EBS 다중 연결을 사용하여 단일 프로비저닝된 IOPS SSD Amazon Elastic Block Store(Amazon EBS) 볼륨을 모든 인스턴스에 연결합니다.	클러스터 배치 그룹을 사용합니다. Amazon Elastic File System(Amazon EFS)을 사용하여 인스턴스 간에 공유 파일 시스템을 생성합니다.	파티션 배치 그룹을 사용합니다. Amazon Elastic File System(Amazon EFS)을 사용하여 인스턴스 간에 공유 파일 시스템을 생성합니다.	스프레드 배치 그룹을 사용합니다. Amazon EBS 다중 연결을 사용하여 단일 프로비저닝된 IOPS SSD Amazon Elastic Block Store(Amazon EBS) 볼륨을 모든 인스턴스에 연결합니다.	A	
1356	Q3. 회사는 동일한 AWS 리전에 있는 Amazon S3 버킷에서 사진을 자주 업로드 및 다운로드해야 하는 사진 처리 애플리케이션을 실행합니다. 솔루션 설계자는 데이터 전송 비용이 증가하는 것을 발견하고 이러한 비용을 줄이기 위한 솔루션을 구현해야 합니다. \n\n솔루션 아키텍트가 이 요구 사항을 충족할 수 있습니까?	Amazon API Gateway 를 퍼블릭 서브넷에 배포하고 이를 통해 S3 호출을 라우팅하도록 라우팅 테이블을 조정합니다.	NAT 게이트웨이를 퍼블릭 서브넷에 배포하고 S3 버킷에 대한 액세스를 허용하는 엔드포인트 정책을 연결합니다.	애플리케이션을 퍼블릭 서브넷에 배포하고 S3 버킷에 액세스하기 위해 인터넷 게이트웨이를 통해 라우팅하도록 허용	S3 VPC 게이트웨이 엔드포인트를 VPC 에 배포하고 S3 버킷에 대한 액세스를 허용하는 엔드포인트 정책을 연결합니다.	D	
1357	Q4. 회사는 Application Load Balancer 뒤의 Amazon EC2 온디맨드 인스턴스 그룹에서 프로덕션 환경에서 상태비저장 웹 애플리케이션을 실행합니다. 매일 8 시간 동안 애플리케이션 사용량이 많습니다. 응용 프로그램 사용량은 보통이고 밤새 안정적입니다. 주말에는 애플리케이션 사용량이 적습니다. 이 회사는 애플리케이션의 가용성에 영향을 주지 않으면서 EC2 비용을 최소화하려고 합니다. \n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	전체 워크로드에 대해 스팟 인스턴스를 사용합니다.	기본 사용량 수준에 대해 예약 인스턴스를 사용합니다. 애플리케이션에 필요한 추가 용량에 대해 스팟 인스턴스를 사용합니다.	기준 사용 수준에 대해 온디맨드 인스턴스를 사용합니다. 애플리케이션에 필요한 추가 용량에 대해 스팟 인스턴스를 사용합니다.	기본 사용량 수준에 대해 전용 인스턴스를 사용합니다. 애플리케이션에 필요한 추가 용량에 대해 온디맨드 인스턴스를 사용합니다.	B	
1358	Q5. 회사의 HTTP 애플리케이션은 NLB(Network Load Balancer) 뒤에 있습니다. NLB 의 대상 그룹은 웹 서비스를 실행하는 여러 EC2 인스턴스와 함께 Amazon EC2 Auto Scaling 그룹을 사용하도록 구성됩니다. 회사는 NLB가 애플리케이션에 대한 HTTP 오류를 감지하지 못한다는 것을 알게 되었습니다. 이러한 오류는 웹 서비스를 실행하는 EC2 인스턴스를 수동으로 다시 시작해야 합니다. 회사는 사용자 정의 스크립트나 코드를 작성하지 않고 애플리케이션의 가용성을 개선해야 합니다. \n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?	NLB 에서 HTTP 상태 확인을 활성화하고 회사 응용 프로그램의 URL 을 제공합니다.	EC2 인스턴스에 cron 작업을 추가하여 1 분에 한 번씩 로컬 애플리케이션의 로그를 확인합니다. HTTP 오류가 감지되면 애플리케이션이 다시 시작됩니다.	NLB 를 Application Load Balancer 로 교체합니다. 회사 애플리케이션의 URL 을 제공하여 HTTP 상태 확인을 활성화합니다. 비정상 인스턴스를 교체하도록 Auto Scaling 작업을 구성합니다.	NLB 에 대한 UnhealthyHostCount 지표를 모니터링하는 Amazon CloudWatch 경보를 생성합니다. 경보가 ALARM 상태일 때 비정상 인스턴스를 교체하도록 Auto Scaling 작업을 구성합니다.	C	
1359	Q6. 회사에 들어오는 메시지를 수집하는 응용 프로그램이 있습니다. 그런 다음 이러한 메시지는 수십 개의 다른 애플리케이션과 마이크로서비스에서 빠르게 사용됩니다. 메시지 수는 매우 다양하며 때로는 초당 최대 100,000 개까지 급증합니다. 이 회사는 솔루션을 분리하고 확장성을 높이고자 합니다. \n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	Amazon Kinesis Data Analytics 에 대한 메시지를 유지합니다. 모든 응용 프로그램은 메시지를 읽고 처리합니다.	CPU 지표를 기반으로 EC2 인스턴스 수를 조정하는 Auto Scaling 그룹의 Amazon EC2 인스턴스에 애플리케이션을 배포합니다.	단일 샤드를 사용하여 Amazon Kinesis Data Streams 에 메시지를 씁니다. 모든 애플리케이션은 스트림에서 읽고 메시지를 처리합니다.	하나 이상의 Amazon Simple Queue Service(Amazon SQS) 구독이 있는 Amazon Simple Notification Service(Amazon SNS) 주제에 메시지를 게시합니다. 그러면 모든 애플리케이션이 대기열의 메시지를 처리합니다.	D	
1360	Q7. 회사에서 응용 프로그램을 설계하고 있습니다. 애플리케이션은 AWS Lambda 함수를 사용하여 Amazon API Gateway 를 통해 정보를 수신하고 Amazon Aurora PostgreSQL 데이터베이스에 정보를 저장합니다. 개념 증명 단계에서 회사는 데이터베이스에 로드해야 하는 대용량 데이터를 처리하기 위해 Lambda 할당량을 크게 늘려야 합니다. \n\n솔루션 설계자는 확장성을 개선하고 구성 노력을 최소화하기 위해 새로운 설계를 권장해야 합니다. 어떤 솔루션이 이러한 요구 사항을 충족합니까?	Lambda 함수 코드를 Amazon EC2 인스턴스에서 실행되는 Apache Tomcat 코드로 리팩터링합니다. 네이티브 JDBC(Java Database Connectivity) 드라이버를 사용하여 데이터베이스를 연결합니다.	플랫폼을 Aurora 에서 Amazon DynamoDB 로 변경합니다. DynamoDB Accelerator(DAX) 클러스터를 프로비저닝합니다. DAX 클라이언트 SDK 를 사용하여 DAX 클러스터에서 기존 DynamoDB API 호출을 가리킵니다.	두 개의 Lambda 함수를 설정합니다. 정보를 수신할 하나의 기능을 구성하십시오. 정보를 데이터베이스에 로드하도록 다른 기능을 구성하십시오. Amazon Simple Notification Service(Amazon SNS)를 사용하여 Lambda 함수를 통합합니다.	두 개의 Lambda 함수를 설정합니다. 정보를 수신할 하나의 기능을 구성하십시오. 정보를 데이터베이스에 로드하도록 다른 기능을 구성하십시오. Amazon Simple Queue Service(Amazon SQS) 대기열을 사용하여 Lambda 함수를 통합합니다.	D	
1361	Q8. 회사는 Amazon API Gateway API 에 의해 호출되는 AWS Lambda 함수에서 애플리케이션을 호스팅합니다. Lambda 함수는 고객 데이터를 Amazon Aurora MySQL 데이터베이스에 저장합니다. 회사에서 데이터베이스를 업그레이드할 때마다 Lambda 함수는 업그레이드가 완료될 때까지 데이터베이스 연결을 설정하지 못합니다. 그 결과 일부 이벤트에 대한 고객 데이터가 기록되지 않습니다. 솔루션 설계자는 데이터베이스 업그레이드 중에 생성되는 고객 데이터를 저장하는 솔루션을 설계해야 합니다. \n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	Lambda 함수와 데이터베이스 사이에 위치하도록 Amazon RDS 프록시를 프로비저닝합니다. RDS 프록시에 연결하도록 Lambda 함수를 구성합니다.	Lambda 함수의 실행 시간을 최대로 늘립니다. 데이터베이스에 고객 데이터를 저장하는 코드에서 재시도 메커니즘을 만듭니다.	고객 데이터를 Lambda 로컬 스토리지에 유지합니다. 고객 데이터를 데이터베이스에 저장하기 위해 로컬 스토리지를 스캔하도록 새로운 Lambda 함수를 구성합니다.	Amazon Simple Queue Service(Amazon SQS) FIFO 대기열에 고객 데이터를 저장합니다. 대기열을 폴링하고 고객 데이터를 데이터베이스에 저장하는 새 Lambda 함수를 생성합니다.	D	
1362	Q10. 회사는 재무 위험 모델링을 위해 AWS 에서 고성능 컴퓨팅(HPC) 인프라를 사용하려고 합니다. 회사의 HPC 워크로드는 Linux 에서 실행됩니다. 각 HPC 워크플로는 수백 개의 AmazonEC2 스팟 인스턴스에서 실행되고, 수명이 짧으며, 궁극적으로 분석 및 장기적 미래 사용을 위해 영구 스토리지에 저장되는 수천 개의 출력 파일을 생성합니다. 이 회사는 온프레미스 데이터를 장기 영구 스토리지에 복사하여 모든 EC2 인스턴스에서 데이터를 처리할 수 있도록 하는 클라우드 스토리지 솔루션을 찾고 있습니다. 솔루션은 또한 데이터 세트 및 출력 파일을 읽고 쓰기 위해 영구 저장소와 통합되는 고성능 파일 시스템이어야 합니다.\n\n이러한 요구 사항을 충족하는 AWS 서비스 조합은 무엇입니까?	Amazon S3 와 통합된 Lustre 용 Amazon FSx.	Amazon S3 와 통합된 Windows 파일 서버용 Amazon FSx.	Amazon Elastic Block Store(Amazon EBS)와 통합된 Amazon S3 Glacier.	Amazon Elastic Block Store(Amazon EBS) 범용 SSD(gp2) 볼륨과 통합된 VPC 엔드포인트가 있는 Amazon S3 버킷.	A	
1363	Q11. 회사에는 매일 동시에 실행되는 AWS Glue 추출, 변환 및 로드(ETL) 작업이 있습니다. 작업은 Amazon S3 버킷에 있는 XML 데이터를 처리합니다. S3 버킷에는 매일 새 데이터가 추가됩니다. 솔루션 설계자는 각 실행 중에 AWS Glue 가 모든 데이터를 처리하고 있음을 확인합니다.\n\n솔루션 설계자는 AWS Glue 가 오래된 데이터를 재처리하지 못하도록 어떻게 해야 합니까?	작업 북마크를 사용하도록 작업을 편집합니다.	작업을 편집하여 데이터 처리 후 데이터 삭제	NumberOfWorkers 필드를 1 로 설정하여 작업을 편집합니다.	FindMatches 기계 학습(ML) 변환을 사용합니다.	A	
1364	Q12. 회사는 AWS 에서 다중 계층 애플리케이션을 호스팅합니다. 규정 준수, 거버넌스, 감사 및 보안을 위해 회사는 AWS 리소스 및 이러한 리소스에 대한 API 호출 기록을 기록합니다. \n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?	AWS CloudTrail 을 사용하여 구성 변경을 추적하고 AWS Config 를 사용하여 API 호출을 기록하십시오.	AWS Config 를 사용하여 구성 변경을 추적하고 AWS CloudTrail 을 사용하여 API 호출을 기록합니다.	AWS Config 를 사용하여 구성 변경을 추적하고 Amazon CloudWatch 를 사용하여 API 호출을 기록합니다.	AWS CloudTrail 을 사용하여 구성 변경을 추적하고 Amazon CloudWatch 를 사용하여 API 호출을 기록합니다.	B	
1365	Q13. 회사의 응용 프로그램에 성능 문제가 있습니다. 애플리케이션은 스테이트풀(Stateful)이며 Amazon EC2 인스턴스에서 m-메모리 작업을 완료해야 합니다. 이 회사는 AWS CloudFormation 을 사용하여 인프라를 배포하고 M5 EC2 인스턴스 제품군을 사용했습니다. 트래픽이 증가함에 따라 애플리케이션 성능이 저하됨 사용자가 애플리케이션에 액세스를 시도할 때 지연을 보고합니다.\n\n어떤 솔루션이 운영상 가장 효율적인 방식으로 이러한 문제를 해결할 것입니까?	EC2 인스턴스를 Auto Scaling 그룹에서 실행되는 T3 EC2 인스턴스로 교체합니다. AWS Management 콘솔을 사용하여 변경했습니다.	Auto Scaling 그룹에서 EC2 인스턴스를 실행하도록 CloudFormation 템플릿을 수정합니다. 증가가 필요한 경우 Auto Scaling 그룹의 원하는 용량과 최대 용량을 수동으로 늘립니다.	CloudFormation 템플릿을 수정합니다. EC2 인스턴스를 R5 EC2 인스턴스로 교체합니다. Amazon CloudWatch 내장 EC2 메모리 지표를 사용하여 향후 용량 계획을 위한 애플리케이션 성능을 추적합니다.	CloudFormation 템플릿을 수정합니다. EC2 인스턴스를 R5 EC2 인스턴스로 교체합니다. EC2 인스턴스에 Amazon CloudWatch 에이전트를 배포하여 향후 용량 계획을 위한 사용자 지정 애플리케이션 지연 측정치를 생성합니다.	D	
1366	Q14. 회사는 Application Load Balancer 뒤의 Amazon EC2 인스턴스에서 전자 상거래 애플리케이션을 실행합니다. 인스턴스는 여러 가용 영역에 걸쳐 Amazon EC2 Auto Scaling 그룹에서 실행됩니다. Auto Scaling 그룹은 CPU 사용률 메트릭을 기반으로 확장됩니다. 전자 상거래 애플리케이션은 대규모 EC2 인스턴스에서 호스팅되는 MySQL 8.0 데이터베이스에 트랜잭션 데이터를 저장합니다. 애플리케이션 로드가 증가하면 데이터베이스의 성능이 빠르게 저하됩니다. 애플리케이션은 쓰기 트랜잭션보다 더 많은 읽기 요청을 처리합니다. 이 회사는 고가용성을 유지하면서 예측할 수 없는 읽기 워크로드의 수요를 충족하도록 데이터베이스를 자동으로 확장하는 솔루션을 원합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	리더 및 컴퓨팅 기능을 위해 단일 노드와 함께 Amazon Redshift 를 사용하십시오.	단일 AZ 배포와 함께 Amazon RDS 사용 다른 가용 영역에 리더 인스턴스를 추가하도록 Amazon RDS를 구성합니다.	다중 AZ 배포와 함께 Amazon Aurora 를 사용합니다. Aurora 복제본을 사용하여 Aurora Auto Scaling을 구성합니다.	EC2 스팟 인스턴스와 함께 Memcached 용 Amazon ElastiCache 를 사용합니다.	C	
1367	Q16. 회사에서 Amazon S3 에 기밀 데이터를 저장할 준비를 하고 있습니다. 규정 준수를 위해 미사용 데이터를 암호화해야 합니다. 암호화 키 사용은 감사 목적으로 기록되어야 합니다. 키는 매년 순환해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족하고 운영상 가장 효율적입니까?	고객 제공 키를 사용한 서버 측 암호화(SSE-C)	Amazon S3 관리형 키를 사용한 서버 측 암호화(SSE-S3)	수동 교체가 있는 AWS KMS(SSE-KMS) 고객 마스터 키(CMK)를 사용한 서버 측 암호화	자동 교체 기능이 있는 AWS KMS(SSE-KMS) 고객 마스터 키(CMK)를 사용한 서버 측 암호화	D	
1368	Q18. 텔레마케팅 회사는 AWS 에서 고객 콜 센터 기능을 설계하고 있습니다. 회사는 다중 화자 인식을 제공하고 스크립트 파일을 생성하는 솔루션이 필요합니다. 회사는 스크립트 파일을 쿼리하여 비즈니스 패턴을 분석하려고 합니다. 스크립트 파일은 규정 준수 감사를 위해 7 년 동안 보관해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	다중 화자 인식을 위해 Amazon Rekognition 을 사용합니다. Amazon S3 에 기록 파일 저장 기록 파일 분석을 위해 기계 학습 모델을 사용합니다.	다중 화자 인식을 위해 Amazon Transcribe 를 사용합니다. 스크립트 파일 분석을 위해 Amazon Athena 를 사용하십시오.	Amazon Translate 를 다중 화자 인식을 위해 사용합니다. Amazon Redshift 에 스크립트 파일을 저장합니다. SQL 쿼리로 스크립트 파일 분석을 사용합니다.	다중 화자 인식을 위해 Amazon Rekognition 을 사용합니다. Amazon S3 에 스크립트 파일을 저장합니다. 스크립트 파일 분석에 Amazon Textract 를 사용하십시오.	B	
1369	Q19. 회사는 데이터 센터에서 SMB 파일 서버를 실행하고 있습니다. 파일 서버는 파일이 생성된 후 처음 며칠 동안 자주 액세스하는 대용량 파일을 저장합니다. 7 일이 지나면 파일에 거의 액세스하지 않습니다. 총 데이터 크기가 증가하고 있으며 회사의 총 저장 용량에 가깝습니다. 솔루션 설계자는 가장 최근에 액세스한 파일에 대한 저지연 액세스를 잃지 않으면서 회사의 사용 가능한 저장 공간을 늘려야 합니다. 솔루션 설계자는 향후 스토리지 문제를 방지하기 위해 파일 수명 주기 관리도 제공해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	AWS DataSync 를 사용하여 SMB 파일 서버에서 AWS 로 7 일이 지난 데이터를 복사합니다.	Amazon S3 파일 게이트웨이를 생성하여 회사의 스토리지 공간을 확장합니다. S3 수명 주기 정책을 생성하여 7 일 후에 데이터를 S3 Glacier Deep Archive 로 전환합니다.	Windows 파일 서버용 Amazon FSx 파일 시스템을 생성하여 회사의 저장 공간을 확장합니다.	각 사용자의 컴퓨터에 유틸리티를 설치하여 Amazon S3 에 액세스합니다. S3 수명 주기 정책을 생성하여 7 일 후 데이터를 S3 Glacier Flexible Retrieval 로 전환합니다.	B	
1370	Q20. 한 회사에서 Amazon S3 버킷을 스토리지로 사용할 파일 공유 애플리케이션을 개발 중입니다. 회사는 Amazon CloudFront 배포를 통해 모든 파일을 제공하려고 합니다. 회사는 S3 URL 에 대한 직접 탐색을 통해 파일에 액세스하는 것을 원하지 않습니다.\n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?	각 S3 버킷에 대한 개별 정책을 작성하여 CloudFront 액세스에 대해서만 읽기 권한을 부여합니다.	IAM 사용자를 생성합니다. 사용자에게 S3 버킷의 객체에 대한 읽기 권한을 부여합니다. 사용자를 CloudFront 에 할당합니다.	CloudFront 배포 ID 를 보안 주체로 할당하고 대상 S3 버킷을 Amazon 리소스 이름(ARN)으로 할당하는 S3 버킷 정책을 작성합니다.	원본 액세스 ID(OAI)를 생성합니다. CloudFront 배포에 OAI 를 할당합니다. OAI 만 읽기 권한을 갖도록 S3 버킷 권한을 구성합니다.	D	
1371	Q21. 회사는 보고를 위해 50TB 의 데이터를 사용합니다. 회사는 이 데이터를 온프레미스에서 AWS 로 이동하려고 합니다. 회사 데이터 센터의 사용자 지정 애플리케이션은 매주 데이터 변환 작업을 실행합니다. 회사는 데이터 이전이 완료되고 가능한 한 빨리 이전 프로세스를 시작해야 할 때까지 응용 프로그램을 일시 중지할 계획입니다. 데이터 센터에는 추가 워크로드에 사용할 수 있는 네트워크 대역폭이 없습니다. 솔루션 설계자는 데이터를 전송하고 AWS 클라우드에서 계속 실행되도록 변환 작업을 구성해야 합니다.\n\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?	AWS DataSync 를 사용하여 데이터를 이동하십시오. AWS Glue 를 사용하여 사용자 지정 변환 작업을 생성합니다.	데이터를 이동할 AWS Snowcone 디바이스를 주문합니다. 장치에 변환 응용 프로그램을 배포합니다.	AWS Snowball Edge Storage Optimized 디바이스를 주문합니다. 데이터를 장치에 복사합니다. AWS Glue를 사용하여 사용자 지정 변환 작업을 생성합니다.	Amazon EC2 컴퓨팅을 포함하는 AWS Snowball Edge Storage Optimized 디바이스를 주문합니다. 데이터를 장치에 복사합니다. AWS 에서 새 EC2 인스턴스를 생성하여 변환 애플리케이션을 실행합니다.	C	
1372	Q22. 회사는 AWS 에서 인프라를 실행하고 문서 관리 애플리케이션에 대해 700,000 명의 등록된 사용자 기반을 보유하고 있습니다. 회사는 큰 .pdf 파일을 .jpg 이미지 파일로 변환하는 제품을 만들려고 합니다. .pdf 파일의 크기는 평균 5MB 입니다. 회사는 원본 파일과 변환 파일을 보관해야 합니다. 솔루션 설계자는 시간이 지남에 따라 빠르게 증가할 수요를 수용할 수 있는 확장 가능한 솔루션을 설계해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 가장 비용 효율적으로 충족합니까?	pdf 파일을 Amazon S3 에 저장합니다. AWS Lambda 함수를 호출하여 파일을 .jpg 형식으로 변환하고 Amazon S3 에 다시 저장하도록 S3 PUT 이벤트를 구성합니다.	pdf 파일을 Amazon DynamoDB 에 저장합니다. DynamoDB 스트림 기능을 사용하여 AWS Lambda 함수를 호출하여 파일을 jpg 형식으로 변환하고 DynamoDB 에 다시 저장합니다.	pdf 파일을 Amazon EC2 인스턴스가 포함된 AWS Elastic Beanstalk 애플리케이션에 업로드합니다. Amazon Elastic Block Store(Amazon EBS) 스토리지 및 Auto Scaling 그룹. EC2 인스턴스의 프로그램을 사용하여 파일을 jpg 형식으로 변환 EBS 스토어에 pdf 파일과 jpg 파일을 저장합니다.	Amazon EC2 인스턴스 Amazon Elastic File System(Amazon EFS) 스토리지 및 Auto Scaling 그룹이 포함된 AWS Elastic Beanstalk 애플리케이션에 PDF 파일을 업로드합니다. EC2 인스턴스의 프로그램을 사용하여 파일을 jpg 형식으로 변환 EBS 스토어에 pdf 파일과 jpg 파일을 저장합니다.	A	
1373	Q23. 회사는 웹 사이트에서 검색 가능한 항목 저장소를 유지 관리합니다. 데이터는 천만 개 이상의 행이 포함된 Amazon RDS for MySQL 데이터베이스 테이블에 저장됩니다. 데이터베이스에는 2TB 의 범용 SSD(gp2) 스토리지가 있습니다. 회사 웹 사이트를 통해 이 데이터에 대한 수백만 건의 업데이트가 매일 있습니다. 회사는 일부 작업이 10 초 이상 걸리는 것을 발견하고 데이터베이스 스토리지 성능이 병목 현상이라고 판단했습니다.\n\n어떤 솔루션이 성능 문제를 해결합니까?	스토리지 유형을 프로비저닝된 IOPS SSD(io1)로 변경합니다.	인스턴스를 메모리 최적화 인스턴스 클래스로 변경합니다.	인스턴스를 버스트 가능한 성능 DB 인스턴스 클래스로 변경합니다.	MySQL 기본 비동기 복제로 다중 AZ RDS 읽기 전용 복제본을 활성화합니다.	A	
1374	Q24. 회사는 최근 웹 공격으로 인해 공개 웹 응용 프로그램의 보안에 대해 우려하고 있습니다. 애플리케이션은 ALB(Application Load Balancer)를 사용합니다. 솔루션 설계자는 애플리케이션에 대한 DDoS 공격의 위험을 줄여야 합니다.\n\n솔루션 설계자는 이 요구 사항을 충족하기 위해 무엇을 해야 합니까?	ALB 에 Amazon Inspector 에이전트를 추가합니다.	공격을 방지하도록 Amazon Macie 를 구성합니다.	공격을 방지하기 위해 AWS Shield Advanced 를 활성화합니다.	ALB 를 모니터링하도록 Amazon GuardDuty 를 구성합니다.	C	
1375	Q26. 회사는 AWS Organizations 를 사용하여 여러 부서의 여러 AWS 계정을 관리합니다. 관리 계정에는 프로젝트 보고서가 포함된 Amazon S3 버킷이 있습니다. 회사는 이 S3 버킷에 대한 액세스를 AWS Organizations 의 조직 내 계정 사용자로만 제한하려고 합니다.\n\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?	S3 버킷 정책에 조직 ID 에 대한 참조와 함께 aws:PrincipalOrgID 전역 조건 키를 추가합니다.	각 부서에 대한 조직 단위(OU)를 만듭니다. aws:PrincipalOrgPaths 전역 조건 키를 S3 버킷 정책에 추가합니다.	AWS CloudTrail 을 사용하여 CreateAccount, InviteAccountToOrganization, LeaveOrganization 및 RemoveAccountFromOrganization 이벤트를 모니터링합니다. 그에 따라 S3 버킷 정책을 업데이트합니다.	S3 버킷에 액세스해야 하는 각 사용자에 태그를 지정합니다. aws:PrincipalTag 전역 조건 키를 S3 버킷 정책에 추가합니다.	A	
1376	Q28. 회사에는 ALB(Application Load Balancer) 뒤의 단일 가용 영역에 있는 Amazon EC2 Auto Scaling 그룹에서 6 개의 프런트 엔드 웹 서버를 실행하는 다중 계층 애플리케이션이 있습니다. 솔루션 설계자는 애플리케이션을 수정하지 않고도 고가용성을 위해 인프라를 수정해야 합니다.\n\n솔루션 설계자는 고가용성을 제공하는 어떤 아키텍처를 선택해야 합니까?	두 리전에서 각각 3 개의 인스턴스를 사용하는 Auto Scaling 그룹을 생성합니다.	2 개의 가용 영역 각각에서 3 개의 인스턴스를 사용하도록 Auto Scaling 그룹을 수정합니다.	다른 리전에서 더 많은 인스턴스를 빠르게 생성하는 데 사용할 수 있는 Auto Scaling 템플릿을 생성합니다.	라운드 로빈 구성에서 Amazon EC2 인스턴스 앞의 ALB 를 변경하여 웹 계층에 대한 트래픽 균형을 조정합니다.	B	
1377	Q29. 한 회사에 Amazon RDS 의 데이터베이스에 목록을 저장하는 자동차 판매 웹사이트가 있습니다. 자동차가 판매되면 웹사이트에서 목록을 제거해야 하고 데이터를 여러 대상 시스템으로 보내야 합니다. \n\n솔루션 아키텍트는 어떤 디자인을 추천해야 할까요?	RDS 이벤트 알림을 구독하고 여러 Amazon Simple Notification Service(Amazon)에 팬아웃된 Amazon Simple Queue Service(Amazon SQS) 대기열을 보냅니다. SNS) 주제 AWS Lambda 함수를 사용하여 대상을 업데이트합니다.	Amazon RDS 의 데이터베이스가 Amazon Simple Queue Service(Amazon SQS) 대기열로 정보를 전송하도록 업데이트될 때 트리거되는 AWS Lambda 함수 생성 대상이 소비하도록 합니다.	Amazon RDS 의 데이터베이스가 대상이 사용할 Amazon Simple Queue Service(Amazon SQS) FIFO 대기열로 정보를 보내도록 업데이트될 때 트리거되는 AWS Lambda 함수를 생성합니다.	RDS 이벤트 알림을 구독하고 여러 Amazon Simple Queue Service(Amazon SQS)로 팬아웃된 Amazon Simple Notification Service(Amazon SNS) 주제를 보냅니다. 대기열 AWS Lambda 함수를 사용하여 대상을 업데이트합니다.	D	
1378	Q30. 회사는 Amazon EC2 인스턴스에서 Amazon S3 버킷으로 데이터를 이동해야 합니다. 회사는 API 호출과 데이터가 공용 인터넷 경로를 통해 라우팅되지 않도록 해야 합니다. EC2 인스턴스만 S3 버킷에 데이터를 업로드할 수 있는 액세스 권한이 있습니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	EC2 인스턴스가 있는 서브넷에서 Amazon S3 에 대한 인터페이스 VPC 엔드포인트를 생성합니다. EC2 인스턴스의 IAM 역할만 액세스할 수 있도록 리소스 정책을 S3 버킷에 연결합니다.	EC2 인스턴스가 있는 가용 영역에서 Amazon S3 용 게이트웨이 VPC 엔드포인트를 생성합니다. 적절한 보안 그룹을 끝점에 연결합니다. EC2 인스턴스의 IAM 역할만 액세스할 수 있도록 S3 버킷에 리소스 정책을 연결합니다.	EC2 인스턴스 내부에서 nslookup 도구를 실행하여 S3 버킷의 서비스 API 엔드포인트의 프라이빗 IP 주소를 얻습니다. VPC 라우팅 테이블에 경로를 생성하여 EC2 인스턴스에 S3 버킷에 대한 액세스 권한을 제공합니다. EC2 인스턴스의 IAM 역할만 액세스할 수 있도록 리소스 정책을 S3 버킷에 연결합니다.	AWS 에서 제공하는 공개적으로 사용 가능한 ip-ranges.json 타일을 사용하여 S3 버킷의 서비스 API 엔드포인트의 프라이빗 IP 주소를 얻습니다. VPC 라우팅 테이블에 경로를 생성하여 EC2 인스턴스에 S3 버킷에 대한 액세스 권한을 제공합니다. EC2 인스턴스의 IAM 역할만 액세스할 수 있도록 리소스 정책을 S3 버킷에 연결합니다.	B	
1379	Q31. 회사에서 새 애플리케이션을 시작하고 Amazon CloudWatch 대시보드에 애플리케이션 지표를 표시합니다. 회사의 제품 관리자는 이 대시보드에 주기적으로 액세스해야 합니다. 제품 관리자에게 AWS 계정이 없습니다. 솔루션 설계자는 최소 권한 원칙에 따라 제품 관리자에게 액세스 권한을 제공해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	CloudWatch 콘솔에서 대시보드를 공유합니다. 제품 관리자의 이메일 주소를 입력하고 공유 단계를 완료합니다. 대시보드에 대한 공유 가능한 링크를 제품 관리자에게 제공하십시오.	특히 제품 관리자를 위한 IAM 사용자를 생성합니다. CloudWatch 읽기 전용 액세스 관리형 정책을 사용자에게 연결합니다. 새 로그인 자격 증명을 제품 관리자와 공유합니다. 올바른 대시보드의 브라우저 URL 을 제품 관리자와 공유하십시오.	회사 직원을 위한 IAM 사용자를 생성하고 View Only Access AWS 관리형 정책을 IAM 사용자에게 연결합니다. 새 로그인 자격 증명을 제품 관리자와 공유하십시오. 제품 관리자에게 CloudWatch 콘솔로 이동하여 대시보드 섹션에서 이름으로 대시보드를 찾으라고 요청합니다.	퍼블릭 서브넷에 배스천 서버를 배포합니다. 제품 관리자가 대시보드에 액세스해야 하는 경우 서버를 시작하고 RDP 자격 증명을 공유합니다. 배스천 서버에서 대시보드를 볼 수 있는 적절한 권한이 있는 캐시된 AWS 자격 증명으로 대시보드 URL 을 열도록 브라우저가 구성되어 있는지 확인합니다.	A	
1380	Q33. 회사는 Application Load Balancer 뒤의 Amazon EC2 인스턴스에서 비즈니스 크리티컬 웹 애플리케이션을 실행하고 있습니다. EC2 인스턴스는 Auto Scaling 그룹에 있습니다. 애플리케이션은 단일 가용 영역에 배포된 Amazon Aurora PostgreSQL 데이터베이스를 사용합니다. 회사는 다운타임과 데이터 손실을 최소화하면서 애플리케이션의 고가용성을 원합니다.\n\n최소한의 운영 노력으로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?	EC2 인스턴스를 다른 AWS 리전에 배치합니다. Amazon Route 53 상태 확인을 사용하여 트래픽을 리디렉션합니다. Aurora PostgreSQL 교차 리전 복제를 사용합니다.	여러 가용 영역을 사용하도록 Auto Scaling 그룹을 구성합니다. 데이터베이스를 다중 AZ 로 구성합니다. 데이터베이스에 대한 Amazon RDS 프록시 인스턴스를 구성합니다.	하나의 가용 영역을 사용하도록 Auto Scaling 그룹을 구성합니다. 데이터베이스의 시간별 스냅샷을 생성합니다. 장애가 발생한 경우 스냅샷에서 데이터베이스를 복구합니다.	여러 AWS 리전을 사용하도록 Auto Scaling 그룹을 구성합니다. 애플리케이션의 데이터를 Amazon S3 에 씁니다. S3 이벤트 알림을 사용하여 AWS Lambda 함수를 시작하여 데이터베이스에 데이터를 씁니다.	B	
1381	Q34. 회사는 AWS 에서 온라인 마켓플레이스 웹 애플리케이션을 실행합니다. 이 애플리케이션은 피크 시간에 수십만 명의 사용자에게 서비스를 제공합니다. 이 회사는 수백만 건의 금융 거래 세부 정보를 다른 여러 내부 애플리케이션과 공유할 수 있는 확장 가능한 거의 실시간 솔루션이 필요합니다. 또한 지연 시간이 짧은 검색을 위해 문서 데이터베이스에 저장하기 전에 민감한 데이터를 제거하기 위해 트랜잭션을 처리해야 합니다.\n\n이러한 요구 사항을 충족하기 위해 솔루션 설계자는 무엇을 권장해야 합니까?	트랜잭션 데이터를 Amazon DynamoDB 에 저장합니다. 쓰기 시 모든 트랜잭션에서 민감한 데이터를 제거하도록 DynamoDB 에서 규칙을 설정합니다. DynamoDB 스트림을 사용하여 다른 애플리케이션과 트랜잭션 데이터를 공유합니다.	트랜잭션 데이터를 Amazon Kinesis Data Firehose 로 스트리밍하여 Amazon DynamoDB 및 Amazon S3 에 데이터를 저장합니다. Kinesis Data Firehose 와 AWS Lambda 통합을 사용하여 민감한 데이터를 제거하십시오. 다른 애플리케이션은 Amazon S3 에 저장된 데이터를 사용할 수 있습니다.	트랜잭션 데이터를 Amazon Kinesis Data Streams 로 스트리밍합니다. AWS Lambda 통합을 사용하여 모든 트랜잭션에서 민감한 데이터를 제거한 다음 Amazon DynamoDB 에 트랜잭션 데이터를 저장합니다. 다른 애플리케이션은 Kinesis 데이터 스트림의 트랜잭션 데이터를 사용할 수 있습니다.	일괄 처리된 트랜잭션 데이터를 Amazon S3에 파일로 저장합니다. Amazon S3에서 파일을 업데이트하기 전에 AWS Lambda 를 사용하여 모든 파일을 처리하고 민감한 데이터를 제거하십시오. 그러면 Lambda 함수가 Amazon DynamoDB 에 데이터를 저장합니다. 다른 애플리케이션은 Amazon S3 에 저장된 트랜잭션 파일을 사용할 수 있습니다.	C	
1382	Q39. 회사에서 동일한 AWS 리전의 테스트 환경에 대량의 프로덕션 데이터를 복제하는 기능을 개선하려고 합니다. 데이터는 Amazon Elastic Block Store(Amazon EBS) 볼륨의 Amazon EC2 인스턴스에 저장됩니다. 복제된 데이터를 수정해도 프로덕션 환경에 영향을 주지 않아야 합니다. 이 데이터에 액세스하는 소프트웨어는 일관되게 높은 I/O 성능을 요구합니다. 솔루션 설계자는 프로덕션 데이터를 테스트 환경에 복제하는 데 필요한 시간을 최소화해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	프로덕션 EBS 볼륨의 EBS 스냅샷을 만듭니다. 테스트 환경의 EC2 인스턴스 스토어 볼륨에 스냅샷을 복원합니다.	EBS 다중 연결 기능을 사용하도록 프로덕션 EBS 볼륨을 구성합니다. 프로덕션 EBS 볼륨의 EBS 스냅샷을 만듭니다. 테스트 환경의 EC2 인스턴스에 프로덕션 EBS 볼륨을 연결합니다.	프로덕션 EBS 볼륨의 EBS 스냅샷을 만듭니다. 새 EBS 볼륨을 생성하고 초기화합니다. 프로덕션 EBS 스냅샷에서 볼륨을 복원하기 전에 테스트 환경의 EC2 인스턴스에 새 EBS 볼륨을 연결합니다.	프로덕션 EBS 볼륨의 EBS 스냅샷을 만듭니다. EBS 스냅샷에서 EBS 빠른 스냅샷 복원 기능을 켭니다. 스냅샷을 새 EBS 볼륨으로 복원합니다. 테스트 환경의 EC2 인스턴스에 새 EBS 볼륨을 연결합니다.	D	
1383	Q40. 회사에는 Microsoft Windows 공유 파일 저장소가 필요한 온프레미스에서 실행되는 대규모 Microsoft SharePoint 배포가 있습니다. 회사는 이 워크로드를 AWS 클라우드로 마이그레이션하기를 원하며 다양한 스토리지 옵션을 고려하고 있습니다. 저장소 솔루션은 액세스 제어를 위해 고가용성 및 Active Directory와 통합되어야 합니다.\n\n이러한 요구 사항을 충족하는 솔루션은 무엇입니까?	Amazon EFS 스토리지를 구성하고 인증을 위해 Active Directory 도메인을 설정합니다.	두 가용 영역의 AWS Storage Gateway 파일 게이트웨이에 SMB 파일 공유를 생성합니다.	Amazon S3 버킷을 생성하고 볼륨으로 탑재하도록 Microsoft Windows Server를 구성합니다.	AWS에서 Windows 파일 서버용 Amazon FSx 파일 시스템을 생성하고 인증을 위해 Active Directory 도메인을 설정합니다.	D	
1384	Q41. 회사에서 애플리케이션을 AWS로 마이그레이션하고 있습니다. 응용 프로그램은 다른 계정에 배포됩니다. 회사는 AWS Organizations를 사용하여 중앙에서 계정을 관리합니다. 회사의 보안 팀은 회사의 모든 계정에 SSO(Single Sign-On) 솔루션이 필요합니다. 회사는 온프레미스에서 사용자 및 그룹을 계속 관리해야 합니다. 자체 관리되는 Microsoft Active Directory.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	AWS SSO 콘솔에서 AWS Single Sign-On(AWS SSO)을 활성화합니다. 단방향 포리스트 트러스트 또는 단방향 도메인 트러스트를 생성하여 Microsoft Active Directory용 AWS Directory Service를 사용하여 회사의 자체 관리형 Microsoft Active Directory를 AWS SSO와 연결합니다.	AWS SSO 콘솔에서 AWS Single Sign-On(AWS SSO)을 활성화합니다. Microsoft Active Directory용 AWS Directory Service를 사용하여 회사의 자체 관리형 Microsoft Active Directory를 AWS SSO와 연결하는 양방향 포리스트 트러스트를 생성합니다.	AWS 디렉터리 서비스를 사용합니다. 회사의 자체 관리 Microsoft Active Directory와 양방향 신뢰 관계를 만드십시오.	ID 공급자(IdP)를 온프레미스에 배포합니다. AWS SSO 콘솔에서 AWS Single Sign-On(AWS SSO)을 활성화합니다.	A	
1385	Q42. 회사에서 SQL 데이터베이스를 사용하여 공개적으로 액세스할 수 있는 영화 데이터를 저장하고 있습니다. 데이터베이스는 Amazon RDS 단일 AZ DB 인스턴스에서 실행됩니다. 스크립트는 매일 임의의 간격으로 쿼리를 실행하여 데이터베이스에 추가된 새 영화의 수를 기록합니다. 스크립트는 업무 시간 동안 최종 합계를 보고해야 합니다. 회사의 개발 팀은 스크립트가 실행 중일 때 데이터베이스 성능이 개발 작업에 적합하지 않다는 것을 알게 되었습니다. 솔루션 설계자는 이 문제를 해결하기 위한 솔루션을 권장해야 합니다.\n\n최소한의 운영 오버헤드로 이 요구 사항을 충족하는 솔루션은 무엇입니까?	DB 인스턴스를 다중 AZ 배포로 수정합니다.	데이터베이스의 읽기 전용 복제본 생성. 읽기 전용 복제본만 쿼리하도록 스크립트를 구성합니다.	개발 팀에게 매일 일과가 끝날 때 데이터베이스의 항목을 수동으로 내보내도록 지시합니다.	Amazon ElastiCache를 사용하여 스크립트가 데이터베이스에 대해 실행하는 일반적인 쿼리를 캐시합니다.	D	
1386	Q43. 회사는 사용자 업로드 문서를 Amazon EBS 볼륨에 저장하는 단일 Amazon EC2 인스턴스를 사용하여 AWS에서 웹 애플리케이션을 호스팅하고 있습니다. 더 나은 확장성과 가용성을 위해 이 회사는 아키텍처를 복제하고 다른 가용 영역에 두 번째 EC2 인스턴스와 EBS 볼륨을 생성하여 Application Load Balancer 뒤에 배치했습니다. 이 변경을 완료한 후 사용자는 웹 사이트를 새로 고칠 때마다 문서의 일부 또는 다른 하위 집합을 볼 수 있지만 모든 문서를 동시에 볼 수는 없다고 보고했습니다.\n\n솔루션 설계자는 사용자가 모든 문서를 한 번에 볼 수 있도록 무엇을 제안해야 합니까?	두 EBS 볼륨에 모든 문서가 포함되도록 데이터를 복사합니다.	사용자를 문서가 있는 서버로 안내하도록 Application Load Balancer를 구성합니다.	두 EBS 볼륨의 데이터를 Amazon EFS로 복사합니다. 새 문서를 Amazon EFS에 저장하도록 애플리케이션을 수정합니다.	두 서버 모두에 요청을 보내도록 Application Load Balancer를 구성합니다. 올바른 서버에서 각 문서를 반환하십시오.	C	
1387	Q44. 솔루션 설계자가 다중 서브넷 VPC 아키텍처를 개발 중입니다. 솔루션은 2개의 가용 영역에 있는 6개의 서브넷으로 구성됩니다. 서브넷은 공용, 사설 및 데이터베이스 전용으로 정의됩니다. 프라이빗 서브넷에서 실행되는 Amazon EC2 인스턴스만 데이터베이스에 액세스할 수 있어야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	퍼블릭 서브넷의 CIDR 블록에 대한 경로를 제외하는 new route table을 생성합니다. 라우팅 테이블을 데이터베이스 서브넷에 연결합니다.	퍼블릭 서브넷의 인스턴스가 사용하는 보안 그룹으로부터의 수신을 거부하는 보안 그룹을 생성합니다. 보안 그룹을 Amazon RDS DB 인스턴스에 연결합니다.	프라이빗 서브넷의 인스턴스가 사용하는 보안 그룹으로부터의 수신을 허용하는 보안 그룹을 생성합니다. 보안 그룹을 Amazon RDS DB 인스턴스에 연결합니다.	퍼블릭 서브넷과 프라이빗 서브넷 사이에 새로운 피어링 연결을 생성합니다. 프라이빗 서브넷과 데이터베이스 서브넷 간에 다른 피어링 연결을 만듭니다.	C	
1388	Q45. 한 회사는 사용자에게 글로벌 속보, 지역 경보 및 날씨 업데이트를 제공하는 웹 기반 포털을 운영합니다. 포털은 정적 콘텐츠와 동적 콘텐츠를 혼합하여 각 사용자에게 개인화된 보기를 제공합니다. 콘텐츠는 ALB(Application Load Balancer) 뒤의 Amazon EC2 인스턴스에서 실행되는 API 서버를 통해 HTTPS를 통해 제공됩니다. 회사는 포털이 이 콘텐츠를 가능한 한 빨리 전 세계 사용자에게 제공하기를 원합니다.\n\n솔루션 설계자는 모든 사용자의 대기 시간을 최소화하도록 애플리케이션을 어떻게 설계해야 합니까?	단일 AWS 리전에 애플리케이션 스택을 배포합니다. Amazon CloudFront를 사용하여 ALB를 오리진으로 지정하여 모든 정적 및 동적 콘텐츠를 제공합니다.	두 AWS 리전에 애플리케이션 스택을 배포합니다. Amazon Route 53 지연 시간 라우팅 정책을 사용하여 가장 가까운 리전의 ALB에서 모든 콘텐츠를 제공합니다.	단일 AWS 리전에 애플리케이션 스택을 배포합니다. Amazon CloudFront를 사용하여 정적 콘텐츠를 제공합니다. ALB에서 직접 동적 콘텐츠를 제공합니다.	두 AWS 리전에 애플리케이션 스택을 배포합니다. Amazon Route 53 지리적 위치 라우팅 정책을 사용하여 가장 가까운 리전에서 ALB의 모든 콘텐츠를 제공합니다.	A	
1389	Q46. 솔루션 설계자는 AWS에 배포되는 새 애플리케이션을 위한 클라우드 아키텍처를 설계하고 있습니다. 처리할 작업 수에 따라 필요에 따라 애플리케이션 노드를 추가 및 제거하면서 프로세스가 병렬로 실행되어야 합니다. 프로세서 응용 프로그램은 상태 비저장입니다. 솔루션 설계자는 응용 프로그램이 느슨하게 연결되어 있고 작업 항목이 영구적으로 저장되어 있는지 확인해야 합니다.\n\n솔루션 설계자는 어떤 디자인을 사용해야 합니까?	처리해야 하는 작업을 보낼 Amazon SNS 주제를 생성합니다. 프로세서 애플리케이션으로 구성된 Amazon 머신 이미지(AMI)를 생성합니다. AMI를 사용하는 시작 구성을 생성합니다. 시작 구성을 사용하여 Auto Scaling 그룹을 생성합니다. CPU 사용량에 따라 노드를 추가 및 제거하도록 Auto Scaling 그룹에 대한 조정 정책을 설정합니다.	처리해야 하는 작업을 보관할 Amazon SQS 대기열을 생성합니다. 프로세서 애플리케이션으로 구성된 Amazon 머신 이미지(AMI)를 생성합니다. AMI를 사용하는 시작 구성을 생성합니다. 시작 구성을 사용하여 Auto Scaling 그룹을 생성합니다. Auto Scaling 그룹의 조정 정책을 설정하여 네트워크 사용량에 따라 노드를 추가 및 제거합니다.	처리해야 하는 작업을 보관할 Amazon SQS 대기열을 생성합니다. 프로세서 애플리케이션으로 구성된 Amazon 머신 이미지(AMI)를 생성합니다. AMI를 사용하는 시작 템플릿을 생성합니다. 시작 템플릿을 사용하여 Auto Scaling 그룹을 생성합니다. SQS 대기열의 항목 수에 따라 노드를 추가 및 제거하도록 Auto Scaling 그룹에 대한 조정 정책을 설정합니다.	처리해야 하는 작업을 보낼 Amazon SNS 주제를 생성합니다. 프로세서 애플리케이션으로 구성된 Amazon 머신 이미지(AMI)를 생성합니다. AMI를 사용하는 시작 템플릿을 생성합니다. 시작 템플릿을 사용하여 Auto Scaling 그룹을 생성합니다. SNS 주제에 게시된 메시지 수에 따라 노드를 추가 및 제거하도록 Auto Scaling 그룹에 대한 조정 정책을 설정합니다.	C	
1390	Q47. 회사는 Amazon EC2 인스턴스 집합에서 프로덕션 애플리케이션을 실행합니다. 애플리케이션은 Amazon SQS 대기열에서 데이터를 읽고 메시지를 병렬로 처리합니다. 메시지 볼륨은 예측할 수 없으며 종종 간헐적인 트래픽이 발생합니다. 이 애플리케이션은 다운타임 없이 지속적으로 메시지를 처리해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 가장 비용 효율적으로 충족합니까?	스팟 인스턴스를 독점적으로 사용하여 필요한 최대 용량을 처리하십시오.	필요한 최대 용량을 처리하기 위해 독점적으로 예약 인스턴스를 사용합니다.	기준 용량으로 예약 인스턴스를 사용하고 추가 용량을 처리하려면 스팟 인스턴스를 사용합니다.	기준 용량으로 예약 인스턴스를 사용하고 추가 용량을 처리하기 위해 온디맨드 인스턴스를 사용합니다.	D	
1391	Q48. 한 회사에서 사용자가 Amazon S3에 작은 파일을 업로드하는 애플리케이션을 설계하고 있습니다. 사용자가 파일을 업로드한 후 데이터를 변환하고 나중에 분석할 수 있도록 데이터를 JSON 형식으로 저장하려면 파일에 일회성 단순 처리가 필요합니다. 각 파일은 업로드 후 최대한 빨리 처리해야 합니다. 수요는 다양할 것입니다. 어떤 날에는 사용자가 많은 수의 파일을 업로드합니다. 다른 날에는 사용자가 몇 개의 파일을 업로드하거나 파일을 업로드하지 않습니다.\n\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?	Amazon S3에서 텍스트 파일을 읽도록 Amazon EMR을 구성합니다. 처리 스크립트를 실행하여 데이터를 변환합니다. 결과 JSON 파일을 Amazon Aurora DB 클러스터에 저장합니다.	Amazon SQS(Amazon Simple Queue Service) 대기열에 이벤트 알림을 보내도록 Amazon S3를 구성합니다. Amazon EC2 인스턴스를 사용하여 대기열에서 읽고 데이터를 처리합니다. 결과 JSON 파일을 Amazon DynamoDB에 저장합니다.	이벤트 알림을 Amazon Simple Queue Service(Amazon SQS) 대기열로 보내도록 Amazon S3를 구성합니다. AWS Lambda 함수를 사용하여 대기열에서 읽고 데이터를 처리합니다. 결과 JSON 파일을 Amazon DynamoDB에 저장합니다.	새 파일이 업로드될 때 Amazon Kinesis Data Streams에 이벤트를 보내도록 Amazon EventBridge(Amazon CloudWatch Events)를 구성합니다. AWS Lambda 함수를 사용하여 스트림에서 이벤트를 소비하고 데이터를 처리합니다. 결과 JSON 파일을 Amazon Aurora DB 클러스터에 저장합니다.	C	
1392	Q49. 회사에서 3계층 웹 응용 프로그램을 사용하여 신입 직원에게 교육을 제공합니다. 애플리케이션은 매일 12시간 동안만 액세스됩니다. 회사는 Amazon RDS for MySQL DB 인스턴스를 사용하여 정보를 저장하고 비용을 최소화하려고 합니다.\n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?	AWS Systems Manager Session Manager에 대한 IAM 정책을 구성합니다. 정책에 대한 IAM 역할을 생성합니다. 역할의 신뢰 관계를 업데이트합니다. DB 인스턴스에 대한 자동 시작 및 중지를 설정합니다.	DB 인스턴스가 중지될 때 사용자가 캐시의 데이터에 액세스할 수 있는 기능을 제공하는 Redis용 Amazon ElastiCache 캐시 클러스터를 생성합니다. DB 인스턴스가 시작된 후 캐시를 무효화합니다.	Amazon EC2 인스턴스를 시작합니다. Amazon RDS에 대한 액세스 권한을 부여하는 IAM 역할을 생성합니다. 역할을 EC2 인스턴스에 연결합니다. 원하는 일정에 따라 EC2 인스턴스를 시작 및 중지하도록 크론 작업을 구성합니다.	AWS Lambda 함수를 생성하여 DB 인스턴스를 시작 및 중지합니다. Amazon EventBridge(Amazon CloudWatch Events) 예약 규칙을 생성하여 Lambda 함수를 호출합니다. 규칙에 대한 이벤트 대상으로 Lambda 함수를 구성합니다.	D	
1393	Q50. 솔루션 설계자는 회사의 스토리지 비용을 줄이기 위한 솔루션을 구현해야 합니다. 회사의 모든 데이터는 Amazon S3 Standard 스토리지 클래스에 있습니다. 회사는 모든 데이터를 최소 25년 동안 보관해야 합니다. 최근 2년 동안의 데이터는 가용성이 높고 즉시 검색할 수 있어야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	객체를 즉시 S3 Glacier Deep Archive로 전환하도록 S3 수명 주기 정책을 설정합니다.	2년 후에 객체를 S3 Glacier Deep Archive로 전환하도록 S3 수명 주기 정책을 설정합니다.	S3 Intelligent-Tiering을 사용합니다. 데이터가 S3 Glacier Deep Archive에 보관되도록 보관 옵션을 활성화합니다.	S3 수명 주기 정책을 설정하여 객체를 S3 One Zone-Infrequent Access(S3 One Zone-IA)로 즉시 전환하고 2년 후에는 S3 Glacier Deep Archive로 전환합니다.	B	
1394	Q52. 빠르게 성장하는 전자 상거래 회사는 단일 AWS 리전에서 워크로드를 실행하고 있습니다. 솔루션 설계자는 다른 AWS 리전을 포함하는 재해 복구(DR) 전략을 생성해야 합니다. 회사는 데이터베이스가 DR 지역에서 가능한 가장 짧은 대기 시간으로 최신 상태가 되기를 원합니다. DR 지역의 나머지 인프라는 감소된 용량으로 실행되어야 하며 필요에 따라 확장할 수 있어야 합니다.\n\n가장 낮은 RTO(복구 시간 목표)로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?	파일럿 라이트 배포와 함께 Amazon Aurora 글로벌 데이터베이스를 사용합니다.	웜 스탠바이 배포와 함께 Amazon Aurora 글로벌 데이터베이스를 사용합니다.	파일럿 라이트 배포와 함께 Amazon RDS 다중 AZ DB 인스턴스를 사용합니다.	웜 대기 배포와 함께 Amazon RDS 다중 AZ DB 인스턴스를 사용합니다.	B	
1395	Q53. 회사에 사용자가 웹 인터페이스 또는 모바일 앱을 통해 문서를 업로드하는 프로덕션 웹 애플리케이션이 있습니다. 새로운 규정 요구 사항에 따라 새 문서는 저장된 후에 수정하거나 삭제할 수 없습니다.\n\n솔루션 설계자는 이 요구 사항을 충족하기 위해 무엇을 해야 합니까?	업로드된 문서를 S3 버전 관리 및 S3 객체 잠금이 활성화된 Amazon S3 버킷에 저장합니다.	업로드된 문서를 Amazon S3 버킷에 저장합니다. 문서를 주기적으로 보관하도록 S3 수명 주기 정책을 구성합니다.	업로드된 문서를 S3 버전 관리가 활성화된 Amazon S3 버킷에 저장합니다. 모든 액세스를 읽기 전용으로 제한하도록 ACL을 구성합니다.	업로드된 문서를 Amazon Elastic File System(Amazon EFS) 볼륨에 저장합니다. 읽기 전용 모드에서 볼륨을 마운트하여 데이터에 액세스합니다.	A	
1396	Q54. 회사에 VPC의 Amazon EC2 인스턴스에서 실행되는 애플리케이션이 있습니다. 애플리케이션 중 하나는 Amazon S3 API를 호출하여 객체를 저장하고 읽어야 합니다. 회사의 보안 정책은 응용 프로그램의 인터넷 바인딩 트래픽을 제한합니다.\n\n이러한 요구 사항을 충족하고 보안을 유지하는 작업은 무엇입니까?	S3 인터페이스 끝점을 구성합니다.	S3 게이트웨이 엔드포인트를 구성합니다.	프라이빗 서브넷에 S3 버킷을 생성합니다.	EC2 인스턴스와 동일한 리전에 S3 버킷을 생성합니다.	B	
1397	Q55. AWS에서 웹 애플리케이션을 호스팅하는 회사는 모든 Amazon EC2 인스턴스, Amazon RDS DB 인스턴스 및 Amazon Redshift 클러스터가 태그로 구성되었는지 확인하려고 합니다. 회사는 이 검사를 구성하고 운영하는 노력을 최소화하기를 원합니다.\n\n솔루션 설계자는 이를 달성하기 위해 무엇을 해야 합니까?	AWS Config 규칙을 사용하여 적절하게 태그가 지정되지 않은 리소스를 정의하고 감지합니다.	비용 탐색기를 사용하여 제대로 태그가 지정되지 않은 리소스를 표시합니다. 해당 리소스에 수동으로 태그를 지정합니다.	적절한 태그 할당을 위해 모든 리소스를 확인하는 API 호출을 작성합니다. EC2 인스턴스에서 주기적으로 코드를 실행합니다.	적절한 태그 할당을 위해 모든 리소스를 확인하는 API 호출을 작성합니다. Amazon CloudWatch를 통해 AWS Lambda 함수를 예약하여 코드를 주기적으로 실행합니다.	A	
1398	Q56. 회사에 1,000개의 Amazon EC2 Linux 인스턴스에서 실행되는 프로덕션 워크로드가 있습니다. 워크로드는 타사 소프트웨어에 의해 구동됩니다. 회사는 중요한 보안 취약성을 수정하기 위해 가능한 한 빨리 모든 EC2 인스턴스에서 타사 소프트웨어를 패치해야 합니다.\n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?	AWS Lambda 함수를 생성하여 모든 EC2 인스턴스에 패치를 적용합니다.	모든 EC2 인스턴스에 패치를 적용하도록 AWS Systems Manager Patch Manager를 구성합니다.	AWS Systems Manager 유지 관리 기간을 예약하여 모든 EC2 인스턴스에 패치를 적용합니다.	AWS Systems Manager Run Command를 사용하여 모든 EC2 인스턴스에 패치를 적용하는 사용자 지정 명령을 실행합니다.	D	
1399	Q57. 회사는 온프레미스에서 Oracle 데이터베이스를 실행합니다. 회사는 AWS로 마이그레이션하는 과정에서 데이터베이스를 사용 가능한 최신 버전으로 업그레이드하려고 합니다. 회사는 또한 데이터베이스에 대한 재해 복구(DR)를 설정하려고 합니다. 회사는 정상 운영 및 DR 설정을 위한 운영 오버헤드를 최소화해야 합니다. 회사는 또한 데이터베이스의 기본 운영 체제에 대한 액세스를 유지 관리해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	Oracle 데이터베이스를 Amazon EC2 인스턴스로 마이그레이션합니다. 다른 AWS 리전으로 데이터베이스 복제를 설정합니다.	Oracle 데이터베이스를 Oracle용 Amazon RDS로 마이그레이션합니다. 교차 리전 자동 백업을 활성화하여 다른 AWS 리전에 스냅샷을 복제합니다.	Oracle 데이터베이스를 Oracle용 Amazon RDS Custom으로 마이그레이션합니다. 다른 AWS 리전의 데이터베이스에 대한 읽기 전용 복제본을 생성합니다.	Oracle 데이터베이스를 Oracle용 Amazon RDS로 마이그레이션합니다. 다른 가용 영역에 대기 데이터베이스를 생성합니다.	C	
1400	Q58. 회사에서 데이터를 Amazon S3 버킷으로 이동할 계획입니다. 데이터는 S3 버킷에 저장될 때 암호화되어야 합니다. 또한 암호화 키는 매년 자동으로 교체되어야 합니다.\n\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?	데이터를 S3 버킷으로 이동합니다. Amazon S3 관리형 암호화 키(SSE-S3)로 서버 측 암호화를 사용합니다. SSE-S3 암호화 키의 기본 제공 키 회전 동작을 사용합니다.	AWS Key Management Service(AWS KMS) 고객 관리형 키를 생성합니다. 자동 키 회전을 활성화합니다. 고객 관리형 KMS 키를 사용하도록 S3 버킷의 기본 암호화 동작을 설정합니다. 데이터를 S3 버킷으로 이동합니다.	AWS Key Management Service(AWS KMS) 고객 관리형 키를 생성합니다. 고객 관리형 KMS 키를 사용하도록 S3 버킷의 기본 암호화 동작을 설정합니다. 데이터를 S3 버킷으로 이동합니다. 매년 KMS 키 수동 순환	데이터를 S3 버킷으로 이동하기 전에 고객 키 자료로 데이터를 암호화합니다. 키 구성 요소 없이 AWS Key Management Service(AWS KMS) 키를 생성합니다. 고객 키 자료를 KMS 키로 가져옵니다. 자동 키 회전을 활성화합니다.	B	
1401	Q59. 회사에서 AWS 클라우드의 컨테이너에서 애플리케이션을 실행하려고 합니다. 이러한 애플리케이션은 상태 비저장이며 기본 인프라 내에서 중단을 허용할 수 있습니다. 회사는 비용과 운영 오버헤드를 최소화하는 솔루션이 필요합니다.\n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?	Amazon EC2 Auto Scaling 그룹의 스팟 인스턴스를 사용하여 애플리케이션 컨테이너를 실행합니다.	Amazon Elastic Kubernetes Service(Amazon EKS) 관리형 노드 그룹에서 스팟 인스턴스를 사용합니다.	Amazon EC2 Auto Scaling 그룹의 온디맨드 인스턴스를 사용하여 애플리케이션 컨테이너를 실행합니다.	Amazon Elastic Kubernetes Service(Amazon EKS) 관리형 노드 그룹에서 온디맨드 인스턴스를 사용합니다.	B	
1402	Q60. 회사는 300개 이상의 글로벌 웹사이트 및 애플리케이션을 호스팅합니다. 이 회사는 매일 30TB 이상의 클릭스트림 데이터를 분석할 플랫폼이 필요합니다.\n\n솔루션 설계자는 클릭스트림 데이터를 전송하고 처리하기 위해 무엇을 해야 합니까?	AWS Data Pipeline을 설계하여 데이터를 Amazon S3 버킷에 보관하고 데이터로 Amazon EMR 클러스터를 실행하여 분석을 생성합니다.	Amazon EC2 인스턴스의 Auto Scaling 그룹을 생성하여 데이터를 처리하고 Amazon Redshift가 분석에 사용할 수 있도록 Amazon S3 데이터 레이크로 보냅니다.	데이터를 Amazon CloudFront에 캐시합니다. Amazon S3 버킷에 데이터를 저장합니다. 객체가 S3 버킷에 추가되면 AWS Lambda 함수를 실행하여 분석할 데이터를 처리합니다.	Amazon Kinesis Data Streams에서 데이터를 수집합니다. Amazon Kinesis Data Firehose를 사용하여 Amazon S3 데이터 레이크로 데이터를 전송합니다. 분석을 위해 Amazon Redshift에 데이터를 로드합니다.	D	
1403	Q61. 회사에는 매일 1TB의 상태 알림을 집합적으로 생성하는 수천 개의 에지 장치가 있습니다. 각 경고의 크기는 약 2KB입니다. 솔루션 설계자는 향후 분석을 위해 경고를 수집하고 저장하는 솔루션을 구현해야 합니다. 회사는 고가용성 솔루션을 원합니다. 그러나 회사는 비용을 최소화해야 하며 추가 인프라 관리를 원하지 않습니다. 또한 회사는 즉각적인 분석을 위해 14일 동안의 데이터를 유지하고 14일이 지난 데이터를 보관하기를 원합니다.\n\n이러한 요구 사항을 충족하는 가장 운영 효율성이 높은 솔루션은 무엇입니까?	Amazon Kinesis Data Firehose 전송 스트림을 생성하여 알림을 수집합니다. Amazon S3 버킷에 알림을 전달하도록 Kinesis Data Firehose 스트림을 구성합니다. 14일 후에 데이터를 Amazon S3 Glacier로 전환하도록 S3 수명 주기 구성을 설정합니다.	두 가용 영역에서 Amazon EC2 인스턴스를 시작하고 Elastic Load Balancer 뒤에 배치하여 알림을 수집합니다. Amazon S3 버킷에 경고를 저장할 EC2 인스턴스에 대한 스크립트를 생성합니다. 14일 후에 데이터를 Amazon S3 Glacier로 전환하도록 S3 수명 주기 구성을 설정합니다.	Amazon Kinesis Data Firehose 전송 스트림을 생성하여 알림을 수집합니다. Amazon Elasticsearch Service(Amazon ES) 클러스터에 알림을 전달하도록 Kinesis Data Firehose 스트림을 구성합니다. Amazon ES 클러스터를 설정하여 매일 수동 스냅샷을 생성하고 클러스터에서 14일이 지난 데이터를 삭제합니다.	Amazon Simple Queue Service(Amazon SQS) 표준 대기열을 생성하여 알림을 수집하고 메시지 보존 기간을 14일로 설정합니다. SQS 대기열을 폴링하고, 메시지의 수명을 확인하고, 필요에 따라 메시지 데이터를 분석하도록 소비자를 구성합니다. 메시지가 14일이 지난 경우 소비자는 메시지를 Amazon S3 버킷에 복사하고 SQS 대기열에서 메시지를 삭제해야 합니다.	A	
1404	Q62. 회사는 AWS에서 데이터 레이크를 호스팅합니다. 데이터 레이크는 Amazon S3 및 PostgreSQL용 Amazon RDS의 데이터로 구성됩니다. 이 회사는 데이터 시각화를 제공하고 데이터 레이크 내의 모든 데이터 소스를 포함하는 보고 솔루션이 필요합니다. 회사의 관리 팀만 모든 시각화에 대한 전체 액세스 권한을 가져야 합니다. 나머지 회사는 제한된 액세스 권한만 가져야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	Amazon QuickSight에서 분석을 생성합니다. 모든 데이터 소스를 연결하고 새 데이터 세트를 만듭니다. 대시보드를 게시하여 데이터를 시각화합니다. 적절한 IAM 역할과 대시보드를 공유합니다.	Amazon QuickSight에서 분석을 생성합니다. 모든 데이터 소스를 연결하고 새 데이터 세트를 만듭니다. 대시보드를 게시하여 데이터를 시각화합니다. 적절한 사용자 및 그룹과 대시보드를 공유합니다.	Amazon S3의 데이터에 대한 AWS Glue 테이블 및 크롤러를 생성합니다. AWS Glue 추출, 변환 및 로드(ETL) 작업을 생성하여 보고서를 생성합니다. 보고서를 Amazon S3에 게시합니다. S3 버킷 정책을 사용하여 보고서에 대한 액세스를 제한합니다.	Amazon S3의 데이터에 대한 AWS Glue 테이블과 크롤러를 생성합니다. Amazon Athena 연합 쿼리를 사용하여 PostgreSQL용 Amazon RDS 내의 데이터에 액세스합니다. Amazon Athena를 사용하여 보고서를 생성합니다. 보고서를 Amazon S3에 게시합니다. S3 버킷 정책을 사용하여 보고서에 대한 액세스를 제한합니다.	B	
1405	Q63. 이미지 처리 회사에는 사용자가 이미지를 업로드하는 데 사용하는 웹 응용 프로그램이 있습니다. 애플리케이션은 이미지를 Amazon S3 버킷에 업로드합니다. 회사는 객체 생성 이벤트를 Amazon Simple Queue Service(Amazon SQS) 표준 대기열에 게시하도록 S3 이벤트 알림을 설정했습니다. SQS 대기열은 이미지를 처리하고 결과를 이메일을 통해 사용자에게 보내는 AWS Lambda 함수의 이벤트 소스 역할을 합니다. 사용자는 업로드된 모든 이미지에 대해 여러 이메일 메시지를 수신하고 있다고 보고합니다. 솔루션 설계자는 SQS 메시지가 Lambda 함수를 두 번 이상 호출하여 여러 이메일 메시지를 생성한다고 판단합니다.\n\n솔루션 설계자는 이 문제를 최소한의 운영 오버헤드로 해결하기 위해 무엇을 해야 합니까?	ReceiveMessage 대기 시간을 30초로 늘려 SQS 대기열에서 긴 폴링을 설정합니다.	SQS 표준 대기열을 SQS FIFO 대기열로 변경합니다. 메시지 중복 제거 ID를 사용하여 중복 메시지를 버리십시오.	SQS 대기열의 가시성 제한 시간을 함수 제한 시간과 일괄 처리 창 제한 시간의 합계보다 큰 값으로 늘립니다.	처리 전에 메시지를 읽은 직후 SQS 대기열에서 각 메시지를 삭제하도록 Lambda 함수를 수정합니다.	A	
1406	Q64. 회사는 AWS에서 OLTP(온라인 트랜잭션 처리: online transaction processing) 워크로드를 실행하고 있습니다. 이 워크로드는 다중 AZ 배포에서 암호화되지 않은 Amazon RDS DB 인스턴스를 사용합니다. 일일 데이터베이스 스냅샷은 이 인스턴스에서 가져옵니다.\n\n데이터베이스와 스냅샷이 앞으로 항상 암호화되도록 하려면 솔루션 설계자가 무엇을 해야 합니까?	최신 DB 스냅샷 사본을 암호화합니다. 암호화된 스냅샷을 복원하여 기존 DB 인스턴스를 교체합니다.	새 암호화된 Amazon Elastic Block Store(Amazon EBS) 볼륨을 생성하고 여기에 스냅샷을 복사합니다. DB 인스턴스에서 암호화를 활성화합니다.	스냅샷을 복사하고 AWS Key Management Service(AWS KMS)를 사용하여 암호화를 활성화합니다. 암호화된 스냅샷을 기존 DB 인스턴스로 복원합니다.	AWS Key Management Service(AWS KMS) 관리형 키(SSE-KMS)로 서버 측 암호화를 사용하여 암호화된 Amazon S3 버킷에 스냅샷을 복사합니다.	A	
1407	Q65. 설문 조사 회사는 미국 지역에서 수년 동안 데이터를 수집했습니다. 이 회사는 크기가 3TB이고 계속 증가하는 Amazon S3 버킷에 데이터를 호스팅합니다. 이 회사는 S3 버킷이 있는 유럽 마케팅 회사와 데이터를 공유하기 시작했습니다. 회사는 데이터 전송 비용이 가능한 한 낮게 유지되기를 원합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	회사의 S3 버킷에서 요청자 지불 기능을 구성합니다.	회사의 S3 버킷에서 마케팅 회사의 S3 버킷 중 하나로 S3 교차 리전 복제를 구성합니다.	마케팅 회사가 회사의 S3 버킷에 액세스할 수 있도록 마케팅 회사에 대한 교차 계정 액세스를 구성합니다.	S3 Intelligent-Tiering을 사용하도록 회사의 S3 버킷을 구성합니다. S3 버킷을 마케팅 회사의 S3 버킷 중 하나와 동기화합니다.	A	
1408	Q66. 회사는 Application Load Balancer 뒤의 Amazon EC2 인스턴스에서 비즈니스 크리티컬 웹 애플리케이션을 실행하고 있습니다. EC2 인스턴스는 Auto Scaling 그룹에 있습니다. 애플리케이션은 단일 가용 영역에 배포된 Amazon Aurora PostgreSQL 데이터베이스를 사용합니다. 회사는 다운타임과 데이터 손실을 최소화하면서 애플리케이션의 고가용성을 원합니다.\n\n최소한의 운영 노력으로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?	EC2 인스턴스를 다른 AWS 리전에 배치합니다. Amazon Route 53 상태 확인을 사용하여 트래픽을 리디렉션합니다. Aurora PostgreSQL 교차 리전 복제를 사용합니다.	여러 가용 영역을 사용하도록 Auto Scaling 그룹을 구성합니다. 데이터베이스를 다중 AZ로 구성합니다. 데이터베이스에 대한 Amazon RDS 프록시 인스턴스를 구성합니다.	하나의 가용 영역을 사용하도록 Auto Scaling 그룹을 구성합니다. 데이터베이스의 시간별 스냅샷을 생성합니다. 장애가 발생한 경우 스냅샷에서 데이터베이스를 복구합니다.	여러 AWS 리전을 사용하도록 Auto Scaling 그룹을 구성합니다. 애플리케이션의 데이터를 Amazon S3에 씁니다. S3 이벤트 알림을 사용하여 AWS Lambda 함수를 시작하여 데이터베이스에 데이터를 씁니다.	B	
1409	Q67. 회사는 Amazon S3에 데이터를 저장해야 하며 데이터가 변경되지 않도록 해야 합니다. 회사는 Amazon S3에 업로드된 새 객체가 회사가 객체를 수정하기로 결정할 때까지 일정하지 않은 시간 동안 변경할 수 없는 상태로 유지되기를 원합니다. 회사 AWS 계정의 특정 사용자만 객체를 삭제할 수 있습니다.\n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?	S3 Glacier 볼트 생성 WORM(Write-Once, Read-Many) 볼트 잠금 정책을 객체에 적용합니다.	S3 객체 잠금이 활성화된 S3 버킷 생성 버전 관리 활성화 보존 기간을 100년으로 설정합니다. 거버넌스 모드를 새 객체에 대한 S3 버킷의 기본 보존 모드로 사용합니다.	S3 버킷을 생성합니다. AWS CloudTrail을 사용하여 객체를 수정하는 모든 S3 API 이벤트를 추적합니다. 통지 시 회사가 보유한 모든 백업 버전에서 수정된 개체를 복원합니다.	S3 객체 잠금이 활성화된 S3 버킷 생성 버전 관리 활성화 객체에 법적 보존 추가 객체를 삭제해야 하는 사용자의 IAM 정책에 s3:PutObjectLegalHold 권한을 추가합니다.	D	
1410	Q69. 회사는 us-east-1 리전 내의 3개의 개별 VPC에서 여러 비즈니스 애플리케이션을 실행하고 있습니다. 애플리케이션은 VPC 간에 통신할 수 있어야 합니다. 또한 애플리케이션은 단일 온프레미스 데이터 센터에서 실행되는 지연 시간에 민감한 애플리케이션에 매일 수백 기가바이트의 데이터를 일관되게 보낼 수 있어야 합니다. 솔루션 설계자는 비용 효율성을 극대화하는 네트워크 연결 솔루션을 설계해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	데이터 센터에서 AWS로 3개의 AWS Site-to-Site VPN 연결을 구성합니다. 각 VPC에 대해 하나의 VPN 연결을 구성하여 연결을 설정합니다.	각 VPC에서 타사 가상 네트워크 어플라이언스를 시작합니다. 데이터 센터와 각 가상 어플라이언스 간에 IPsec VPN 터널을 설정합니다.	데이터 센터에서 us-east-1의 Direct Connect 게이트웨이로 3개의 AWS Direct Connect 연결을 설정합니다. Direct Connect 연결 중 하나를 사용하도록 각 VPC를 구성하여 연결을 설정합니다.	데이터 센터에서 AWS로 하나의 AWS Direct Connect 연결을 설정합니다. 전송 게이트웨이를 생성하고 각 VPC를 전송 게이트웨이에 연결합니다. Direct Connect 연결과 전송 게이트웨이 간의 연결을 설정합니다.	D	
1411	Q70. 한 회사가 AWS 클라우드에서 공개 웹 애플리케이션 출시를 준비하고 있습니다. 아키텍처는 Elastic Load Balancer(ELB) 뒤의 VPC 내 Amazon EC2 인스턴스로 구성됩니다. DNS에는 타사 서비스가 사용됩니다. 회사의 솔루션 설계자는 대규모 DDoS 공격을 감지하고 보호할 솔루션을 권장해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	계정에서 Amazon GuardDuty를 활성화합니다.	EC2 인스턴스에서 Amazon Inspector를 활성화합니다.	AWS Shield를 활성화하고 여기에 Amazon Route 53을 할당합니다.	AWS Shield Advanced를 활성화하고 ELB를 할당합니다.	D	
1412	Q71. 회사에 매장에 마케팅 서비스를 제공하는 애플리케이션이 있습니다. 매장 고객의 이전 구매를 기반으로 하는 서비스입니다. 상점은 SFTP를 통해 거래 데이터를 회사에 업로드하고 데이터를 처리 및 분석하여 새로운 마케팅 제안을 생성합니다. 일부 파일의 크기는 200GB를 초과할 수 있습니다. 최근에 회사는 일부 상점에서 포함되어서는 안 되는 개인 식별 정보(PII)가 포함된 파일을 업로드했음을 발견했습니다. 회사는 PII가 다시 공유될 경우 관리자에게 경고를 주기를 원합니다. 회사는 또한 문제 해결을 자동화하기를 원합니다.\n\n최소한의 개발 노력으로 이러한 요구 사항을 충족하기 위해 솔루션 설계자는 무엇을 해야 합니까?	Amazon S3 버킷을 보안 전송 지점으로 사용하십시오. Amazon Inspector를 사용하여 버킷의 객체를 스캔합니다. 객체에 PII가 포함된 경우 S3 수명 주기 정책을 트리거하여 PII가 포함된 객체를 제거합니다.	Amazon S3 버킷을 보안 전송 지점으로 사용합니다. Amazon Macie를 사용하여 버킷의 객체를 스캔합니다. 객체에 PII가 포함된 경우 Amazon Simple Notification Service(Amazon SNS)를 사용하여 관리자에게 PII가 포함된 객체를 제거하라는 알림을 트리거합니다.	AWS Lambda 함수에서 사용자 지정 스캔 알고리즘을 구현합니다. 객체가 버킷에 로드될 때 함수를 트리거합니다. 객체에 PII가 포함된 경우 Amazon Simple Notification Service(Amazon SNS)를 사용하여 관리자에게 PII가 포함된 객체를 제거하라는 알림을 트리거합니다.	AWS Lambda 함수에서 사용자 지정 스캔 알고리즘을 구현합니다. 객체가 버킷에 로드될 때 함수를 트리거합니다. 객체에 PII가 포함된 경우 Amazon Simple Email Service(Amazon SES)를 사용하여 관리자에게 알림을 트리거하고 S3 수명 주기 정책을 트리거하여 PII가 포함된 객체를 제거합니다.	B	
1413	Q72. 글로벌 회사는 Amazon API Gateway를 사용하여 us-east-1 리전 및 ap-southeast-2 리전의 로열티 클럽 사용자를 위한 REST API를 설계하고 있습니다. 솔루션 설계자는 SQL 주입 및 교차 사이트 스크립팅 공격으로부터 여러 계정에서 이러한 API Gateway 관리 REST API를 보호하는 솔루션을 설계해야 합니다.\n\n최소한의 관리 노력으로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?	두 리전에 AWS WAF를 설정하고 리전 웹 ACL을 API 단계와 연결합니다.	두 리전에 AWS Firewall Manager를 설정합니다. AWS WAF 규칙을 중앙에서 구성합니다.	두 리전에 AWS Shield를 설정합니다. 리전 웹 ACL을 API 단계와 연결합니다.	한 리전에서 AWS Shield를 설정합니다. 리전 웹 ACL을 API 단계와 연결합니다.	B	
1414	Q73. 회사는 AWS 클라우드 배포를 검토하여 Amazon S3 버킷에 무단 구성 변경이 없는지 확인해야 합니다.\n\n솔루션 설계자는 이 목표를 달성하기 위해 무엇을 해야 합니까?	적절한 규칙으로 AWS Config를 켭니다.	적절한 검사를 통해 AWS Trusted Advisor를 켭니다.	적절한 평가 템플릿으로 Amazon Inspector를 켭니다.	Amazon S3 서버 액세스 로깅을 켭니다. Amazon EventBridge(Amazon CloudWatch Events)를 구성합니다.	A	
1415	Q74. 애플리케이션은 프라이빗 서브넷의 Amazon EC2 인스턴스에서 실행됩니다. 애플리케이션은 Amazon DynamoDB 테이블에 액세스해야 합니다. \n\n트래픽이 AWS 네트워크를 벗어나지 않도록 하면서 테이블에 액세스하는 가장 안전한 방법은 무엇입니까?	DynamoDB용 VPC 엔드포인트를 사용합니다.	퍼블릭 서브넷에서 NAT 게이트웨이를 사용합니다.	프라이빗 서브넷에서 NAT 인스턴스를 사용합니다.	VPC에 연결된 인터넷 게이트웨이를 사용합니다.	A	
1416	Q75. 회사는 Application Load Balancer 뒤의 Amazon EC2 인스턴스에서 글로벌 웹 애플리케이션을 실행합니다. 애플리케이션은 Amazon Aurora에 데이터를 저장합니다. 회사는 재해 복구 솔루션을 만들어야 하며 최대 30분의 가동 중지 시간과 잠재적인 데이터 손실을 견딜 수 있습니다. 솔루션은 기본 인프라가 정상일 때 부하를 처리할 필요가 없습니다.\n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?	필요한 인프라 요소가 있는 응용 프로그램을 배포합니다. Amazon Route 53을 사용하여 능동-수동 장애 조치를 구성합니다. 두 번째 AWS 리전에서 Aurora 복제본을 생성합니다.	두 번째 AWS 리전에서 애플리케이션의 축소 배포를 호스팅합니다. Amazon Route 53을 사용하여 활성-활성 장애 조치를 구성합니다. 두 번째 리전에서 Aurora 복제본을 생성합니다.	두 번째 AWS 리전에서 기본 인프라를 복제합니다. Amazon Route 53을 사용하여 활성-활성 장애 조치를 구성합니다. 최신 스냅샷에서 복원된 Aurora 데이터베이스를 생성합니다.	AWS Backup으로 데이터 백업 백업을 사용하여 두 번째 AWS 리전에 필요한 인프라를 생성합니다. Amazon Route 53을 사용하여 능동-수동 장애 조치를 구성합니다. 두 번째 리전에서 Aurora 두 번째 기본 인스턴스를 생성합니다.	C	
1417	Q76. 회사는 온프레미스 데이터 센터에서 마케팅 웹사이트를 호스팅합니다. 웹 사이트는 정적 문서로 구성되며 단일 서버에서 실행됩니다. 관리자는 웹 사이트 콘텐츠를 자주 업데이트하지 않고 SFTP 클라이언트를 사용하여 새 문서를 업로드합니다. 이 회사는 AWS에서 웹 사이트를 호스팅하고 Amazon CloudFront를 사용하기로 결정했습니다. 회사의 솔루션 설계자가 CloudFront 배포를 생성합니다. 솔루션 설계자는 CloudFront 오리진 역할을 하는 웹 사이트 호스팅을 위한 가장 비용 효율적이고 탄력적인 아키텍처를 설계해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	Amazon Lightsail을 사용하여 가상 서버를 생성합니다. Lightsail 인스턴스에서 웹 서버를 구성합니다. SFTP 클라이언트를 사용하여 웹사이트 콘텐츠를 업로드합니다.	Amazon EC2 인스턴스용 AWS Auto Scaling 그룹을 생성합니다. 애플리케이션 로드 밸런서를 사용합니다. SFTP 클라이언트를 사용하여 웹사이트 콘텐츠를 업로드합니다.	프라이빗 Amazon S3 버킷을 생성합니다. S3 버킷 정책을 사용하여 CloudFront 오리진 액세스 ID(OAI)에서의 액세스를 허용합니다. AWSCLI를 사용하여 웹 사이트 콘텐츠를 업로드합니다.	공개 Amazon S3 버킷을 생성합니다. SFTP용 AWS 전송을 구성합니다. 웹 사이트 호스팅을 위해 S3 버킷을 구성합니다. SFTP 클라이언트를 사용하여 웹사이트 콘텐츠를 업로드합니다.	D	
1419	Q78. 회사에 Amazon S3에 백업되는 시간에 민감한 대량의 데이터를 생성하는 온프레미스 애플리케이션이 있습니다. 애플리케이션이 성장했고 인터넷 대역폭 제한에 대한 사용자 불만이 있습니다. 솔루션 설계자는 Amazon S3에 대한 적시 백업을 허용하고 내부 사용자의 인터넷 연결에 미치는 영향을 최소화하는 장기 솔루션을 설계해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	AWS VPN 연결을 설정하고 VPC 게이트웨이 엔드포인트를 통해 모든 트래픽을 프록시합니다.	새 AWS Direct Connect 연결을 설정하고 이 새 연결을 통해 백업 트래픽을 직접 연결합니다.	매일 AWS Snowball 디바이스 주문 Snowball 디바이스에 데이터를 로드하고 디바이스를 매일 AWS로 반환합니다.	AWS Management Console을 통해 지원 티켓을 제출합니다. 계정에서 S3 서비스 제한 제거를 요청합니다.	B	
1420	Q79. 온라인 소매 회사는 5천만 명 이상의 활성 고객을 보유하고 있으며 매일 25,000건 이상의 주문을 받습니다. 회사는 고객의 구매 데이터를 수집하고 이 데이터를 Amazon S3에 저장합니다. 추가 고객 데이터는 Amazon RDS에 저장됩니다. 회사는 팀이 분석을 수행할 수 있도록 모든 데이터를 다양한 팀에서 사용할 수 있도록 하려고 합니다. 솔루션은 데이터에 대한 세분화된 권한을 관리하는 기능을 제공하고 운영 오버헤드를 최소화해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	구매 데이터를 마이그레이션하여 Amazon RDS에 직접 쓰십시오. RDS 액세스 제어를 사용하여 액세스를 제한합니다.	Amazon RDS에서 Amazon S3로 데이터를 주기적으로 복사하도록 AWS Lambda 함수를 예약합니다. AWS Glue 크롤러를 생성합니다. Amazon Athena를 사용하여 데이터를 쿼리합니다. S3 정책을 사용하여 액세스를 제한합니다.	AWS Lake Formation을 사용하여 데이터 레이크를 생성합니다. Amazon RDS에 대한 AWS Glue JDBC 연결을 생성합니다. 등록(Lake Formation의 S3 버킷. Lake Formation 액세스 제어를 사용하여 액세스를 제한합니다.	Amazon Redshift 클러스터를 생성합니다. Amazon S3 및 Amazon RDS에서 Amazon Redshift로 데이터를 주기적으로 복사하도록 AWS Lambda 함수를 예약합니다. Amazon Redshift 액세스 제어를 사용하여 액세스를 제한합니다.	D	
1421	Q80. 회사는 새로운 비즈니스 애플리케이션을 구현하고 있습니다. 애플리케이션은 두 개의 Amazon EC2 인스턴스에서 실행되고 문서 저장을 위해 Amazon S3 버킷을 사용합니다. 솔루션 설계자는 EC2 인스턴스는 S3 버킷에 액세스할 수 있습니다. \n\n솔루션 설계자는 이 요구 사항을 해결하기 위해 무엇을 해야 합니까?	S3 버킷에 대한 액세스 권한을 부여하는 IAM 역할을 생성합니다. 역할을 EC2 인스턴스에 연결합니다.	S3 버킷에 대한 액세스 권한을 부여하는 IAM 정책을 생성합니다. 정책을 EC2 인스턴스에 연결합니다.	S3 버킷에 대한 액세스 권한을 부여하는 IAM 그룹을 생성합니다. 그룹을 EC2 인스턴스에 연결합니다.	S3 버킷에 대한 액세스 권한을 부여하는 IAM 사용자를 생성합니다. 사용자 계정을 EC2 인스턴스에 연결합니다.	A	
1422	Q81. 회사는 Amazon CloudWatch Logs 로그 그룹에 애플리케이션 로그를 저장합니다. 새로운 정책에 따라 회사는 모든 애플리케이션 로그를 Amazon OpenSearch Service(Amazon Elasticsearch Service)에 거의 실시간으로 저장해야 합니다.\n\n최소한의 운영 오버헤드로 이 요구 사항을 충족하는 솔루션은 무엇입니까?	Amazon OpenSearch Service(Amazon Elasticsearch Service)로 로그를 스트리밍하도록 CloudWatch Logs 구독을 구성합니다.	AWS Lambda 함수를 생성합니다. 로그 그룹을 사용하여 Amazon OpenSearch Service(Amazon Elasticsearch Service)에 로그를 작성하는 함수를 호출합니다.	Amazon Kinesis Data Firehose 전송 스트림 생성 로그 그룹을 전송 스트림의 소스로 구성합니다. Amazon OpenSearch Service(Amazon Elasticsearch Service)를 전송 스트림의 대상으로 구성합니다.	각 애플리케이션 서버에 Amazon Kinesis 에이전트를 설치 및 구성하여 Amazon Kinesis Data Streams에 로그를 전달합니다. Amazon OpenSearch Service(Amazon Elasticsearch Service)에 로그를 전달하도록 Kinesis Data Streams를 구성합니다.	C	
1423	Q82. 회사에서 기존 온프레미스 모놀리식 애플리케이션을 AWS로 마이그레이션하려고 합니다. 회사는 프론트엔드 코드와 백엔드 코드를 최대한 많이 유지하려고 합니다. 그러나 회사는 응용 프로그램을 더 작은 응용 프로그램으로 나누기를 원합니다. 다른 팀에서 각 애플리케이션을 관리합니다. 회사는 운영 오버헤드를 최소화하는 확장성이 뛰어난 솔루션이 필요합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	AWS Lambda에서 애플리케이션 호스팅 Amazon API Gateway와 애플리케이션을 통합합니다.	AWS Amplify를 사용하여 애플리케이션을 호스팅합니다. AWS Lambda와 통합된 Amazon API Gateway API에 애플리케이션을 연결합니다.	Amazon EC2 인스턴스에서 애플리케이션을 호스팅합니다. Auto Scaling 그룹의 EC2 인스턴스를 대상으로 하여 Application Load Balancer를 설정합니다.	Amazon Elastic Container Service(Amazon ECS)에서 애플리케이션 호스팅 Amazon ECS를 대상으로 하여 Application Load Balancer를 설정합니다.	D	
1424	Q83. 회사는 여러 대륙에 걸쳐 도시의 온도, 습도 및 대기압 데이터를 수집합니다. 사이트당 매일 수집되는 평균 데이터 볼륨은 500GB입니다. 각 사이트에는 고속 인터넷 연결이 있습니다. 회사의 일기 예보 애플리케이션은 단일 지역을 기반으로 하며 매일 데이터를 분석합니다.\n\n이 모든 글로벌 사이트에서 데이터를 집계하는 가장 빠른 방법은 무엇입니까?	대상 버킷에서 Amazon S3 Transfer Acceleration을 활성화합니다. 멀티파트 업로드를 사용하여 사이트 데이터를 대상 버킷에 직접 업로드합니다.	가장 가까운 AWS 리전의 Amazon S3 버킷에 사이트 데이터를 업로드합니다. S3 교차 리전 복제를 사용하여 대상 버킷에 객체를 복사합니다.	매일 AWS Snowball 작업을 예약하여 가장 가까운 AWS 리전으로 데이터를 전송합니다. S3 교차 리전 복제를 사용하여 대상 버킷에 객체를 복사합니다.	가장 가까운 리전의 Amazon EC2 인스턴스에 데이터를 업로드합니다. Amazon Elastic Block Store(Amazon EBS) 볼륨에 데이터를 저장합니다. 하루에 한 번 EBS 스냅샷을 만들어 중앙 리전으로 복사합니다. 중앙 집중식 리전에서 EBS 볼륨을 복원하고 매일 데이터에 대한 분석을 실행합니다.	A	
1425	Q85. 회사에 Java 및 PHP를 기반으로 하는 웹 응용 프로그램이 있습니다. 회사는 애플리케이션을 온프레미스에서 AWS로 이동할 계획입니다. 회사는 새 사이트 기능을 자주 테스트할 수 있는 기능이 필요합니다. 이 회사는 또한 최소한의 운영 오버헤드가 필요한 고가용성 및 관리형 솔루션이 필요합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	Amazon S3 버킷 생성 S3 버킷에서 정적 웹 호스팅 활성화 S3 버킷에 정적 콘텐츠를 업로드합니다. AWS Lambda를 사용하여 모든 동적 콘텐츠를 처리합니다.	웹 애플리케이션을 AWS Elastic Beanstalk 환경에 배포합니다. 기능 테스트를 위해 URL 스와핑을 사용하여 여러 Elastic Beanstalk 환경 간에 전환합니다.	Java 및 PHP로 구성된 Amazon EC2 인스턴스에 웹 애플리케이션을 배포합니다. Auto Scaling 그룹과 Application Load Balancer를 사용하여 웹 사이트의 가용성을 관리합니다.	웹 애플리케이션 컨테이너화 웹 애플리케이션을 Amazon EC2 인스턴스에 배포합니다. AWS 로드 밸런서 컨트롤러를 사용하여 테스트를 위한 새로운 사이트 기능이 포함된 컨테이너 간에 트래픽을 동적으로 라우팅합니다.	B	
1426	Q86. 회사는 ALB(Application Load Balancer) 뒤에 있는 Amazon EC2 인스턴스 집합에서 동적 웹 사이트를 확보합니다. 웹 사이트는 전 세계 고객에게 서비스를 제공하기 위해 여러 언어를 지원해야 합니다. 웹사이트의 아키텍처는 us-west-1 리전에서 실행 중이며 전 세계의 다른 지역에 있는 사용자에 대해 높은 요청 지연 시간을 보이고 있습니다. 웹사이트는 사용자의 위치에 관계없이 요청을 빠르고 효율적으로 처리해야 합니다. 그러나 회사는 여러 지역에 걸쳐 기존 아키텍처를 다시 만들고 싶지 않습니다.\n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?	기존 아키텍처를 Amazon S3 버킷에서 제공되는 웹 사이트로 교체 S3 버킷을 오리진으로 사용하여 Amazon CloudFront 배포를 구성합니다. Accept-Language 요청 헤더를 기반으로 캐시 동작 설정을 캐시합니다.	ALB를 오리진으로 사용하여 Amazon CloudFront 배포를 구성합니다. Accept-Language 요청 헤더를 기반으로 캐시 동작 설정을 캐시합니다.	ALB와 통합되는 Amazon API Gateway API를 생성합니다. HTTP 통합 유형을 사용하도록 API를 구성합니다. Accept-Language 요청 헤더를 기반으로 API 캐시를 활성화하도록 API 게이트웨이 단계를 설정합니다.	각 추가 리전에서 EC2 인스턴스를 시작하고 해당 리전의 캐시 서버 역할을 하도록 NGINX를 구성합니다. 모든 EC2 인스턴스와 ALB를 지리적 위치 라우팅 정책이 있는 Amazon Route 53 레코드 세트 뒤에 배치합니다.	B	
1427	Q87. 회사에 이벤트 데이터를 생성하는 서비스가 있습니다. 회사는 AWS를 사용하여 이벤트 데이터를 수신하는 대로 처리하려고 합니다. 데이터는 처리 전반에 걸쳐 유지되어야 하는 특정 순서로 작성됩니다. 회사는 운영 오버헤드를 최소화하는 솔루션을 구현하려고 합니다.\n\n솔루션 설계자는 이를 어떻게 달성해야 합니까?	메시지를 보관할 Amazon Simple Queue Service(Amazon SQS) FIFO 대기열을 생성합니다. 대기열의 메시지를 처리하도록 AWS Lambda 함수를 설정합니다.	처리할 페이로드가 포함된 알림을 전달하기 위해 Amazon Simple Notification Service(Amazon SNS) 주제를 생성합니다. AWS Lambda 함수를 구독자로 구성합니다.	메시지를 보관할 Amazon Simple Queue Service(Amazon SQS) 표준 대기열을 생성합니다. 대기열의 메시지를 독립적으로 처리하도록 AWS Lambda 함수를 설정합니다.	처리할 페이로드가 포함된 알림을 전달하기 위해 Amazon Simple Notification Service(Amazon SNS) 주제를 생성합니다. Amazon Simple Queue Service(Amazon SQS) 대기열을 구독자로 구성합니다.	A	
1428	Q88. 한 회사에서 인기 있는 소셜 미디어 웹사이트를 운영하고 있습니다. 웹사이트는 사용자에게 이미지를 업로드하여 다른 사용자와 공유할 수 있는 기능을 제공합니다. 회사는 이미지에 부적절한 콘텐츠가 포함되지 않았는지 확인하고 싶습니다. 회사는 개발 노력을 최소화하는 솔루션이 필요합니다.\n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?	Amazon Comprehend를 사용하여 부적절한 콘텐츠를 감지합니다. 신뢰도가 낮은 예측에는 인적 검토를 사용합니다.	Amazon Rekognition을 사용하여 부적절한 콘텐츠를 감지합니다. 신뢰도가 낮은 예측에는 인적 검토를 사용합니다.	Amazon SageMaker를 사용하여 부적절한 콘텐츠를 감지합니다. 신뢰도가 낮은 예측에 레이블을 지정하려면 정답을 사용합니다.	AWS Fargate를 사용하여 사용자 지정 기계 학습 모델을 배포하여 부적절한 탐지 콘텐츠. 신뢰도가 낮은 예측에 레이블을 지정하려면 정답을 사용합니다.	B	
1429	Q89. 회사는 Amazon ECS를 사용하여 애플리케이션을 실행합니다. 애플리케이션은 크기가 조정된 원본 이미지 버전을 생성한 다음 Amazon S3 API를 호출하여 크기가 조정된 이미지를 Amazon S3에 저장합니다.\n\n솔루션 설계자는 애플리케이션에 Amazon S3에 대한 액세스 권한이 있는지 어떻게 확인할 수 있습니까?	Amazon ECS에서 읽기/쓰기 액세스를 허용하도록 AWS IAM에서 S3 역할을 업데이트한 다음 컨테이너를 다시 시작합니다.	S3 권한이 있는 IAM 역할을 생성한 다음 해당 역할을 작업 정의에서 taskRoleArn으로 지정합니다.	Amazon ECS에서 Amazon S3로의 액세스를 허용하는 보안 그룹을 생성하고 ECS 클러스터에서 사용하는 시작 구성을 업데이트합니다.	S3 권한이 있는 IAM 사용자를 생성한 다음 이 계정으로 로그인한 상태에서 ECS 클러스터에 대한 Amazon EC2 인스턴스를 다시 시작합니다.	B	
1430	Q91. 회사는 AWS Organizations를 사용하여 각 사업부에 대한 전용 AWS 계정을 생성하여 요청 시 각 사업부의 계정을 독립적으로 관리합니다. 루트 이메일 수신자가 한 계정의 루트 사용자 이메일 주소로 전송된 알림을 놓쳤습니다. 회사는 향후 모든 알림을 놓치지 않기를 원합니다. 향후 알림은 계정 관리자로 제한되어야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	모든 AWS 계정 루트 사용자 이메일 메시지가 알림을 모니터링하고 해당 알림을 적절한 그룹에 전달할 책임이 있는 한 명의 관리자에게 전송되도록 구성합니다.	AWS 계정 루트 사용자 이메일 주소로 전송되는 알림 이메일 메시지를 조직의 모든 사용자에게 전달하도록 회사 이메일 서버를 구성합니다.	동일한 루트 사용자 이메일 주소를 사용하도록 기존의 모든 AWS 계정과 새로 생성된 모든 계정을 구성합니다. AWS Organizations 콘솔에서 또는 프로그래밍 방식으로 AWS 계정 대체 연락처를 구성합니다.	모든 AWS 계정 루트 사용자 이메일 주소를 알림에 응답할 수 있는 소수의 관리자에게 전달되는 배포 목록으로 구성합니다. AWS Organizations 콘솔에서 또는 프로그래밍 방식으로 AWS 계정 대체 연락처를 구성합니다.	C	
1431	Q92. 한 미디어 회사가 시스템을 AWS 클라우드로 이전할 가능성을 평가하고 있습니다. 회사는 비디오 처리를 위한 가능한 최대 I/O 성능을 갖춘 최소 10TB의 스토리지, 미디어 콘텐츠를 저장하기 위한 300TB의 매우 내구성 있는 스토리지, 더 이상 사용하지 않는 아카이브 미디어에 대한 요구 사항을 충족하기 위해 900TB의 스토리지가 필요합니다.\n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 어떤 서비스 세트를 권장해야 합니까?	최대 성능을 위한 Amazon EBS, 내구성 있는 데이터 스토리지를 위한 Amazon S3, 아카이브 스토리지를 위한 Amazon S3 Glacier.	최대 성능을 위한 Amazon EBS, 내구성 있는 데이터 스토리지를 위한 Amazon EFS, 아카이브 스토리지를 위한 Amazon S3 Glacier.	최대 성능을 위한 Amazon EC2 인스턴스 스토어, 내구성 있는 데이터 스토리지를 위한 Amazon EFS, 아카이브 스토리지를 위한 Amazon S3.	최대 성능을 위한 Amazon EC2 인스턴스 스토어, 내구성 있는 데이터 스토리지를 위한 Amazon S3, 아카이브 스토리지를 위한 Amazon S3 Glacier.	A	
1432	Q93. 회사에서 데이터 저장을 위해 Amazon DynamoDB 테이블을 사용할 계획입니다. 회사는 비용 최적화에 대해 우려하고 있습니다. 테이블은 대부분의 아침 저녁에 사용되지 않으며 읽기 및 쓰기 트래픽은 종종 예측할 수 없습니다. 트래픽 급증이 발생하면 매우 빠르게 발생합니다.\n\n솔루션 아키텍트는 무엇을 추천해야 합니까?	온디맨드 용량 모드에서 DynamoDB 테이블을 생성합니다.	글로벌 보조 인덱스가 있는 DynamoDB 테이블을 생성합니다.	프로비저닝된 용량 및 Auto Scaling을 사용하여 DynamoDB 테이블을 생성합니다.	프로비저닝된 용량 모드에서 DynamoDB 테이블을 생성하고 전역 테이블로 구성합니다.	A	
1433	Q94. 한 회사는 최근 애플리케이션 마이그레이션 이니셔티브에 대한 지원을 위해 AWS 관리형 서비스 공급자(MSP) 파트너와 계약을 체결했습니다. 솔루션 설계자는 기존 AWS 계정의 Amazon 머신 이미지(AMI)를 MSP 파트너의 AWS 계정과 공유해야 합니다. AMI는 Amazon Elastic Block Store(Amazon EBS)의 지원을 받으며 고객 관리형 고객 마스터 키(CMK)를 사용하여 EBS 볼륨 스냅샷을 암호화합니다.\n\n솔루션 설계자가 MSP 파트너의 AWS 계정과 AMI를 공유하는 가장 안전한 방법은 무엇입니까?	암호화된 AMI 및 스냅샷을 공개적으로 사용할 수 있도록 합니다. MSP 파트너의 AWS 계정이 키를 사용할 수 있도록 CMK의 키 정책을 수정합니다.	AMI의 launchPermission 속성을 수정합니다. MSP 파트너와 AMI 공유 AWS 계정만. MSP 파트너의 AWS 계정이 다음을 수행할 수 있도록 CMK의 키 정책을 수정합니다. 키를 사용합니다.	AMI의 launchPermission 속성 수정 MSP 파트너의 AWS 계정과만 AMI를 공유합니다. 암호화를 위해 MSP 파트너가 소유한 새 CMK를 신뢰하도록 CMK의 키 정책을 수정합니다.	소스 계정에서 MSP 파트너의 AWS 계정에 있는 Amazon S3 버킷으로 AMI를 내보냅니다. MSP 파트너가 소유한 CMK로 S3 버킷을 암호화하고 MSP 파트너의 AWS 계정에서 AMI를 복사하고 시작합니다.	B	
1434	Q95. 한 회사에 데이터베이스에 주문을 작성하고 결제를 처리하기 위해 서비스를 호출하는 전자상거래 체크아웃 워크플로가 있습니다. 사용자는 체크아웃 과정에서 시간 초과를 경험하고 있습니다. 사용자가 결제 양식을 다시 제출하면 동일한 원하는 거래에 대해 여러 개의 고유 주문이 생성됩니다.\n\n솔루션 설계자는 이 워크플로를 리팩토링하여 여러 주문 생성을 방지해야 합니까?	Amazon Kinesis Data Firehose에 주문 메시지를 보내도록 웹 애플리케이션을 구성합니다. Kinesis Data Firehose에서 메시지를 검색하고 주문을 처리하도록 결제 서비스를 설정합니다.	AWS CloudTrail에서 규칙을 생성하여 기록된 애플리케이션 경로 요청을 기반으로 AWS Lambda 함수를 호출합니다. Lambda를 사용하여 데이터베이스를 쿼리하고, 결제 서비스를 호출하고, 주문 정보를 전달합니다.	데이터베이스에 주문을 저장합니다. Amazon Simple Notification Service(Amazon SNS)에 주문 번호가 포함된 메시지를 보냅니다. Amazon SNS를 폴링하도록 결제 서비스를 설정합니다. 메시지를 검색하고 주문을 처리합니다.	데이터베이스에 주문을 저장합니다. Amazon Simple Queue Service(Amazon SQS) FIFO 대기열에 주문 번호가 포함된 메시지를 보냅니다. 메시지를 검색하고 주문을 처리하도록 결제 서비스를 설정합니다. 대기열에서 메시지를 삭제합니다.	D	
1435	Q96. 회사에 AWS로 마이그레이션해야 하는 Windows 기반 애플리케이션이 있습니다. 애플리케이션은 여러 가용 영역에 배포된 여러 Amazon EC2 Windows 인스턴스에 연결된 공유 Windows 파일 시스템을 사용해야 합니다.\n\n솔루션 설계자는 이 요구 사항을 충족하기 위해 무엇을 해야 합니까?	볼륨 게이트웨이 모드에서 AWS Storage Gateway를 구성합니다. 각 Windows 인스턴스에 볼륨을 탑재합니다.	Windows 파일 서버용 Amazon FSx를 구성합니다. Amazon FSx 파일 시스템을 각 Windows 인스턴스에 탑재합니다.	Amazon Elastic File System(Amazon EFS)을 사용하여 파일 시스템을 구성합니다. EFS 파일 시스템을 각 Windows 인스턴스에 마운트합니다.	필요한 크기로 Amazon Elastic Block Store(Amazon EBS) 볼륨을 구성합니다. 각 EC2 인스턴스를 볼륨에 연결합니다. 볼륨 내의 파일 시스템을 각 Windows 인스턴스에 마운트합니다.	B	
1436	Q97. 회사는 AWS에서 워크로드를 실행합니다. 회사는 외부 공급자의 서비스에 연결해야 합니다. 서비스는 공급자의 VPC에서 호스팅됩니다. 회사 보안 팀에 따르면 연결은 비공개여야 하며 대상 서비스로 제한되어야 합니다. 연결은 회사의 VPC에서만 시작되어야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	회사의 VPC와 공급자의 VPC 간에 VPC 피어링 연결을 생성합니다. 대상 서비스에 연결하도록 라우팅 테이블을 업데이트합니다.	공급자에게 VPC에 가상 프라이빗 게이트웨이를 생성하도록 요청합니다. AWS PrivateLink를 사용하여 대상 서비스에 연결합니다.	회사 VPC의 퍼블릭 서브넷에 NAT 게이트웨이를 생성합니다. 대상 서비스에 연결하도록 라우팅 테이블을 업데이트합니다.	공급자에게 대상 서비스에 대한 VPC 엔드포인트를 생성하도록 요청합니다. AWS PrivateLink를 사용하여 대상 서비스에 연결합니다.	D	
1437	Q98. 회사는 Amazon S3에 회계 기록을 저장해야 합니다. 기록은 1년 동안 즉시 액세스할 수 있어야 하며 그 후 추가로 9년 동안 보관해야 합니다. 관리자 및 루트 사용자를 포함하여 회사의 그 누구도 전체 10년 동안 기록을 삭제할 수 없습니다. 기록은 최대한의 복원력으로 저장해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	전체 10년 동안 S3 Glacier에 기록을 저장합니다. 접근통제 정책을 사용하여 10년 동안 기록 삭제를 거부합니다.	S3 Intelligent-Tiering을 사용하여 레코드를 저장합니다. IAM 정책을 사용하여 레코드 삭제를 거부합니다. 10년 후 삭제를 허용하도록 IAM 정책을 변경합니다.	S3 수명 주기 정책을 사용하여 1년 후에 S3 Standard에서 S3 Glacier Deep Archive로 레코드를 전환합니다. 10년 동안 규정 준수 모드에서 S3 Object Lock을 사용합니다.	S3 수명 주기 정책을 사용하여 1년 후 레코드를 S3 Standard에서 S3 One Zone-Infrequent Access(S3 One Zone-IA)로 전환합니다. 10년 동안 거버넌스 모드에서 S3 Object Lock을 사용합니다.	C	
1438	Q99. 회사는 AWS 클라우드에서 웹 애플리케이션을 호스팅합니다. 회사는 AWS Certificate Manager(ACM)로 가져온 인증서를 사용하도록 Elastic Load Balancer를 구성합니다. 각 인증서가 만료되기 30일 전에 회사 보안팀에 알려야 합니다.\n\n솔루션 설계자는 요구 사항을 충족하기 위해 무엇을 권장해야 합니까?	인증서가 만료되기 30일 전부터 매일 Amazon Simple Notification Service(Amazon SNS) 주제에 사용자 지정 메시지를 게시하는 규칙을 ACM에 추가합니다.	30일 이내에 만료되는 인증서를 확인하는 AWS Config 규칙을 생성합니다. AWS Config가 비준수 리소스를 보고할 때 Amazon Simple Notification Service(Amazon SNS)를 통해 사용자 지정 알림을 호출하도록 Amazon EventBridge(Amazon CloudWatch Events)를 구성합니다.	AWS Trusted Advisor를 사용하여 며칠 이내에 만료되는 인증서를 확인합니다. 상태 변경 확인에 대한 Trusted Advisor 지표를 기반으로 하는 Amazon CloudWatch 경보 생성 Amazon Simple Notification Service(Amazon SNS)를 통해 사용자 지정 알림을 보내도록 경보를 구성합니다.	30일 이내에 만료되는 모든 인증서를 감지하는 Amazon EventBridge(Amazon CloudWatch Events) 규칙을 생성합니다. AWS Lambda 함수를 호출하도록 규칙을 구성합니다. Amazon Simple Notification Service(Amazon SNS)를 통해 사용자 지정 알림을 보내도록 Lambda 함수를 구성합니다.	B	
1439	Q100. 게임 회사는 고가용성 아키텍처를 설계하고 있습니다. 애플리케이션은 수정된 Linux 커널에서 실행되며 UDP 기반 트래픽만 지원합니다. 회사는 최상의 사용자 경험을 제공하기 위해 프론트엔드 계층이 필요합니다. 해당 계층은 대기 시간이 짧고 가장 가까운 엣지 로케이션으로 트래픽을 라우팅하고 애플리케이션 엔드포인트에 진입하기 위한 고정 IP 주소를 제공해야 합니다.\n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?	요청을 Application Load Balancer로 전달하도록 Amazon Route 53을 구성합니다. AWS Application Auto Scaling의 애플리케이션에 AWS Lambda를 사용합니다.	요청을 Network Load Balancer로 전달하도록 Amazon CloudFront를 구성합니다. AWS Application Auto Scaling 그룹의 애플리케이션에 AWS Lambda를 사용합니다.	요청을 Network Load Balancer로 전달하도록 AWS Global Accelerator를 구성합니다. EC2 Auto Scaling 그룹의 애플리케이션에 Amazon EC2 인스턴스를 사용합니다.	요청을 Application Load Balancer로 전달하도록 Amazon API Gateway를 구성합니다. EC2 Auto Scaling 그룹의 애플리케이션에 Amazon EC2 인스턴스를 사용합니다.	C	
1440	Q102. 회사의 웹사이트는 사용자에게 다운로드 가능한 과거 성과 보고서를 제공합니다. 웹 사이트에는 전 세계적으로 회사의 웹 사이트 요구 사항을 충족하도록 확장할 수 있는 솔루션이 필요합니다. 솔루션은 비용 효율적이어야 하고 인프라 리소스 프로비저닝을 제한하며 가능한 가장 빠른 응답 시간을 제공해야 합니다.\n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 어떤 조합을 권장해야 합니까?	Amazon CloudFront 및 Amazon S3	AWS Lambda 및 Amazon DynamoDB	Amazon EC2 Auto Scaling이 있는 Application Load Balancer	내부 Application Load Balancer가 있는 Amazon Route 53	A	
1441	Q103. 대규모 미디어 회사는 AWS에서 웹 애플리케이션을 호스팅합니다. 이 회사는 전 세계 사용자가 파일에 안정적으로 액세스할 수 있도록 기밀 미디어 파일 캐싱을 시작하려고 합니다. 콘텐츠는 Amazon S3 버킷에 저장됩니다. 회사는 요청의 지리적 위치에 관계없이 콘텐츠를 신속하게 제공해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	AWS DataSync를 사용하여 S3 버킷을 웹 애플리케이션에 연결합니다.	AWS Global Accelerator를 배포하여 S3 버킷을 웹 애플리케이션에 연결합니다.	Amazon CloudFront를 배포하여 S3 버킷을 CloudFront 엣지 서버에 연결합니다.	Amazon Simple Queue Service(Amazon SQS)를 사용하여 S3 버킷을 웹 애플리케이션에 연결합니다.	C	
1442	Q104. 팀의 모든 AWS 계정에서 특정 서비스 또는 작업에 대한 액세스를 제한하는 보안 팀. 모든 계정은 AWS Organizations의 대규모 조직에 속합니다. 솔루션은 확장 가능해야 하며 권한을 유지할 수 있는 단일 지점이 있어야 합니다.\n\n솔루션 설계자는 이를 달성하기 위해 무엇을 해야 합니까?	서비스 또는 작업에 대한 액세스를 제공하기 위해 ACL을 생성합니다.	계정을 허용하는 보안 그룹을 생성하고 이를 사용자 그룹에 연결합니다.	각 계정에 교차 계정 역할을 만들어 서비스 또는 작업에 대한 액세스를 거부합니다.	루트 조직 단위에서 서비스 제어 정책을 만들어 서비스 또는 작업에 대한 액세스를 거부합니다.	D	
1443	Q105. 글로벌 이벤트 주최자는 일일 보고서를 정적 HTML 페이지로 온라인에 게시하려고 합니다. 이 페이지는 전 세계 사용자로부터 수백만 건의 조회수를 생성할 것으로 예상됩니다. 파일은 Amazon S3 버킷에 저장됩니다. 솔루션 설계자는 효율적이고 효과적인 솔루션을 설계하도록 요청받았습니다.\n\n솔루션 설계자는 이를 달성하기 위해 어떤 조치를 취해야 합니까?	파일에 대해 미리 서명된 URL을 생성합니다.	모든 리전에 교차 리전 복제를 사용합니다.	Amazon Route 53의 지리 근접성 기능을 사용합니다.	S3 버킷을 오리진으로 하여 Amazon CloudFront를 사용합니다.	D	
1444	Q106. 회사는 NFS를 사용하여 온프레미스 네트워크 연결 스토리지에 대용량 비디오 파일을 저장합니다. 각 비디오 파일의 크기 범위는 1MB에서 500GB입니다. 총 스토리지는 70TB이며 더 이상 증가하지 않습니다. 회사는 비디오 파일을 Amazon S3로 마이그레이션하기로 결정합니다. 회사는 가능한 한 최소한의 네트워크 대역폭을 사용하면서 가능한 한 빨리 비디오 파일을 마이그레이션해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	S3 버킷 생성 S3 버킷에 대한 쓰기 권한이 있는 IAM 역할을 생성합니다. AWS CLI를 사용하여 모든 파일을 S3 버킷에 로컬로 복사합니다.	AWS Snowball Edge 작업을 생성합니다. 온프레미스에서 Snowball Edge 장치를 받습니다. Snowball Edge 클라이언트를 사용하여 데이터를 디바이스로 전송합니다. AWS가 데이터를 Amazon S3로 가져올 수 있도록 디바이스를 반환합니다.	온프레미스에 S3 파일 게이트웨이를 배포합니다. S3 파일 게이트웨이에 연결할 퍼블릭 서비스 엔드포인트 생성 S3 버킷 생성 S3 파일 게이트웨이에 새 NFS 파일 공유 생성 새 파일 공유가 S3 버킷을 가리키도록 합니다. 기존 NFS 파일 공유에서 S3 파일 게이트웨이로 데이터를 전송합니다.	온프레미스 네트워크와 AWS 간에 AWS Direct Connect 연결을 설정합니다. 온프레미스에 S3 파일 게이트웨이를 배포합니다. S3 파일 게이트웨이에 연결할 공용 VIF(가상 인터레이스)를 생성합니다. S3 버킷을 생성합니다. S3 파일 게이트웨이에서 새 NFS 파일 공유를 생성합니다. 새 파일 공유가 S3 버킷을 가리키도록 합니다. 기존 NFS 파일 공유에서 S3 파일 게이트웨이로 데이터를 전송합니다.	B	
1445	Q107. 회사는 사용자 요청을 수집하고 요청 유형에 따라 처리를 위해 적절한 마이크로 서비스에 요청을 발송하는 데 사용되는 비동기 API를 소유하고 있습니다. 이 회사는 Amazon API Gateway를 사용하여 API 프런트 엔드를 배포하고 Amazon DynamoDB를 호출하여 사용자 요청을 처리 마이크로서비스로 디스패치하기 전에 저장하는 AWS Lambda 함수를 사용하고 있습니다. 회사는 예산이 허용하는 한 많은 DynamoDB 처리량을 프로비저닝했지만 회사는 여전히 가용성 문제를 겪고 있으며 사용자 요청을 잃고 있습니다.\n\n솔루션 설계자는 기존 사용자에게 영향을 주지 않고 이 문제를 해결하기 위해 무엇을 해야 합니까?	서버 측 조절 제한이 있는 API Gateway에 조절을 추가합니다.	DynamoDB 가속기(DAX) 및 Lambda를 사용하여 DynamoDB에 대한 쓰기를 버퍼링합니다.	사용자 요청이 있는 테이블에 대해 DynamoDB에 보조 인덱스를 생성합니다.	Amazon Simple Queue Service(Amazon SQS) 대기열과 Lambda를 사용하여 DynamoDB에 대한 쓰기를 버퍼링합니다.	D	
1446	Q108. 회사는 기존 3계층 웹 아키텍처의 비용을 절감하려고 합니다. 웹, 애플리케이션 및 데이터베이스 서버는 개발, 테스트 및 프로덕션 환경을 위한 Amazon EC2 인스턴스에서 실행됩니다. EC2 인스턴스의 평균 CPU 사용률은 사용량이 많은 시간에는 30%이고 사용량이 많지 않은 시간에는 10%입니다. 프로덕션 EC2 인스턴스는 하루 24시간 실행됩니다. 개발 및 테스트 EC2 인스턴스는 매일 최소 8시간 동안 실행됩니다. 회사는 개발을 중지하고 사용하지 않을 때 EC2 인스턴스를 테스트하는 자동화를 구현할 계획입니다.\n\n어떤 EC2 인스턴스 구매 솔루션이 가장 비용 효율적으로 회사의 요구 사항을 충족합니까?	프로덕션 EC2 인스턴스에 스팟 인스턴스를 사용합니다. EC2 인스턴스 개발 및 테스트에 예약 인스턴스를 사용합니다.	프로덕션 EC2 인스턴스에 예약 인스턴스를 사용합니다. 개발 및 테스트 EC2 인스턴스에 온디맨드 인스턴스를 사용합니다.	프로덕션 EC2 인스턴스에 스팟 블록을 사용합니다. EC2 인스턴스 개발 및 테스트에 예약 인스턴스를 사용합니다.	프로덕션 EC2 인스턴스에 온디맨드 인스턴스를 사용합니다. 개발 및 테스트 EC2 인스턴스에 스팟 블록을 사용합니다.	B	
1447	Q109. 회사 웹 사이트는 항목 카탈로그에 Amazon EC2 인스턴스 스토어를 사용합니다. 회사는 카탈로그의 가용성이 높고 카탈로그가 내구성 있는 위치에 저장되기를 원합니다.\n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?	카탈로그를 Redis용 Amazon ElastiCache로 이동합니다.	더 큰 인스턴스 스토어로 더 큰 EC2 인스턴스를 배포합니다.	인스턴스 스토어에서 Amazon S3 Glacier Deep Archive로 카탈로그를 이동합니다.	카탈로그를 Amazon Elastic File System(Amazon EFS) 파일 시스템으로 이동합니다.	D	
1448	Q110. 회사는 사용자 트랜잭션 데이터를 Amazon DynamoDB 테이블에 보관해야 합니다. 회사는 데이터를 7년간 보관해야 합니다.\n\n이러한 요구 사항을 충족하는 가장 운영 효율성이 높은 솔루션은 무엇입니까?	DynamoDB 지정 시간 복구를 사용하여 테이블을 지속적으로 백업합니다.	AWS Backup을 사용하여 테이블에 대한 백업 일정 및 보존 정책을 생성합니다.	DynamoDB 콘솔을 사용하여 테이블의 주문형 백업을 생성합니다. 백업을 Amazon S3 버킷에 저장합니다. S3 버킷에 대한 S3 수명 주기 구성을 설정합니다.	AWS Lambda 함수를 호출하는 Amazon EventBridge(Amazon CloudWatch Events) 규칙을 생성합니다. 테이블을 백업하고 Amazon S3 버킷에 백업을 저장하도록 Lambda 함수를 구성합니다. S3 버킷에 대한 S3 수명 주기 구성을 설정합니다.	B	
1449	Q111. 회사에서 AWS 클라우드의 Auto Scaling 그룹에 속한 Amazon EC2 인스턴스에서 게임 애플리케이션을 실행하려고 합니다. 응용 프로그램은 UDP 패킷을 사용하여 데이터를 전송합니다. 회사는 트래픽이 증가하거나 감소함에 따라 애플리케이션이 확장 및 축소될 수 있도록 하려고 합니다.\n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?	Auto Scaling 그룹에 Network Load Balancer 연결	Auto Scaling 그룹에 Application Load Balancer를 연결합니다.	트래픽을 적절하게 라우팅하기 위해 가중치 정책이 있는 Amazon Route 53 레코드 세트를 배포합니다.	Auto Scaling 그룹의 EC2 인스턴스에 포트 전달로 구성된 NAT 인스턴스를 배포합니다.	A	
1450	Q112. 회사는 AWS에서 여러 Windows 워크로드를 실행합니다. 회사 직원은 두 개의 Amazon EC2 인스턴스에서 호스팅되는 Windows 파일 공유를 사용합니다. 파일 공유는 서로 간에 데이터를 동기화하고 중복 복사본을 유지합니다. 이 회사는 사용자가 현재 파일에 액세스하는 방식을 보존하는 고가용성 및 내구성 스토리지 솔루션을 원합니다.\n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?	모든 데이터를 Amazon S3로 마이그레이션합니다. 사용자가 파일에 액세스할 수 있도록 IAM 인증을 설정합니다.	Amazon S3 파일 게이트웨이를 설정합니다. 기존 EC2 인스턴스에 S3 파일 게이트웨이를 탑재합니다.	다중 AZ 구성을 사용하여 파일 공유 환경을 Windows 파일 서버용 Amazon FSx로 확장합니다. 모든 데이터를 Windows 파일 서버용 FSx로 마이그레이션합니다.	다중 AZ 구성을 사용하여 파일 공유 환경을 Amazon Elastic File System(Amazon EFS)으로 확장합니다. 모든 데이터를 Amazon EFS로 마이그레이션합니다.	C	
1451	Q113. 자전거 공유 회사는 피크 운영 시간 동안 자전거의 위치를 추적하기 위해 다층 아키텍처를 개발하고 있습니다. 회사는 기존 분석 플랫폼에서 이러한 데이터 포인트를 사용하려고 합니다. 솔루션 설계자는 이 아키텍처를 지원하기 위해 가장 실행 가능한 다중 계층 옵션을 결정해야 합니다. 데이터 포인트는 REST API에서 액세스할 수 있어야 합니다.\n\n위치 데이터 저장 및 검색에 대한 이러한 요구 사항을 충족하는 작업은 무엇입니까?	Amazon S3와 함께 Amazon Athena를 사용하십시오.	AWS Lambda와 함께 Amazon API Gateway를 사용합니다.	Amazon Redshift와 함께 Amazon QuickSight를 사용합니다.	Amazon Kinesis Data Analytics와 함께 Amazon API Gateway를 사용합니다.	B	
1452	Q115. 회사는 AWS에서 전자 상거래 애플리케이션을 실행합니다. 모든 새 주문은 단일 가용 영역의 Amazon EC2 인스턴스에서 실행되는 RabbitMQ 대기열에 메시지로 게시됩니다. 이러한 메시지는 별도의 EC2 인스턴스에서 실행되는 다른 애플리케이션에서 처리됩니다. 이 애플리케이션은 다른 EC2 인스턴스의 PostgreSQL 데이터베이스에 세부 정보를 저장합니다. 모든 EC2 인스턴스는 동일한 가용 영역에 있습니다. 회사는 최소한의 운영 오버헤드로 최고의 가용성을 제공하도록 아키텍처를 재설계해야 합니다.\n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?	대기열을 Amazon MQ에서 RabbitMQ 인스턴스의 중복 쌍(활성/대기)으로 마이그레이션합니다. 애플리케이션을 호스팅하는 EC2 인스턴스에 대한 다중 AZ Auto Scaling 그룹을 생성합니다. PostgreSQL 데이터베이스를 호스팅하는 EC2 인스턴스에 대해 다른 다중 AZ Auto Scaling 그룹을 생성합니다.	대기열을 Amazon MQ에서 RabbitMQ 인스턴스의 중복 쌍(활성/대기)으로 마이그레이션합니다. 애플리케이션을 호스팅하는 EC2 인스턴스에 대한 다중 AZ Auto Scaling 그룹을 생성합니다. PostgreSQL용 Amazon RDS의 다중 AZ 배포에서 실행하도록 데이터베이스를 마이그레이션합니다.	RabbitMQ 대기열을 호스팅하는 EC2 인스턴스용 다중 AZ Auto Scaling 그룹을 생성합니다. 애플리케이션을 호스팅하는 EC2 인스턴스에 대해 다른 다중 AZ Auto Scaling 그룹을 생성합니다. PostgreSQL용 Amazon RDS의 다중 AZ 배포에서 실행하도록 데이터베이스를 마이그레이션합니다.	RabbitMQ 대기열을 호스팅하는 EC2 인스턴스용 다중 AZ Auto Scaling 그룹을 생성합니다. 애플리케이션을 호스팅하는 EC2 인스턴스에 대해 다른 다중 AZ Auto Scaling 그룹을 생성합니다. PostgreSQL 데이터베이스를 호스팅하는 EC2 인스턴스에 대한 세 번째 다중 AZ Auto Scaling 그룹을 생성합니다.	B	
1453	Q117. 솔루션 설계자는 Amazon S3를 사용하여 새로운 디지털 미디어 애플리케이션의 스토리지 아키텍처를 설계하고 있습니다. 미디어 파일은 가용 영역 손실에 대한 복원력이 있어야 합니다. 일부 파일은 자주 액세스되는 반면 다른 파일은 예측할 수 없는 패턴으로 거의 액세스되지 않습니다. 솔루션 설계자는 미디어 파일을 저장하고 검색하는 비용을 최소화해야 합니다.\n\n이러한 요구 사항을 충족하는 스토리지 옵션은 무엇입니까?	S3 표준	S3 지능형 계층화	S3 Standard-Infrequent Access(S3 Standard-IA)	S3 One Zone-Infrequent Access(S3 One Zone-IA)	B	
1454	Q118. 회사에서 Amazon EC2 인스턴스에서 배치 애플리케이션을 실행하고 있습니다. 애플리케이션은 여러 Amazon RDS 데이터베이스가 있는 백엔드로 구성됩니다. 응용 프로그램으로 인해 데이터베이스에서 많은 수의 리드가 발생합니다. 솔루션 설계자는 고가용성을 보장하면서 데이터베이스 읽기 수를 줄여야 합니다.\n\n솔루션 설계자는 이 요구 사항을 충족하기 위해 무엇을 해야 합니까?	Amazon RDS 읽기 전용 복제본 추가	Redis용 Amazon ElastiCache 사용	Amazon Route 53 DNS 캐싱 사용	Memcached용 Amazon ElastiCache 사용	A	
1455	Q119. 솔루션 설계자는 Amazon S3 오리진과 함께 Amazon CloudFront를 사용하여 정적 웹 사이트를 저장하는 솔루션을 설계해야 합니다. 회사의 보안 정책에 따라 모든 웹 사이트 트래픽은 AWS WAF에서 검사해야 합니다.\n\n솔루션 설계자는 이러한 요구 사항을 어떻게 준수해야 합니까?	AWS WAF Amazon 리소스 이름(ARN)에서 오는 요청만 수락하도록 S3 버킷 정책을 구성합니다.	S3 오리진에서 콘텐츠를 요청하기 전에 수신되는 모든 요청을 AWS WAF로 전달하도록 Amazon CloudFront를 구성합니다.	Amazon CloudFront IP 주소가 Amazon S3에만 액세스하도록 허용하는 보안 그룹을 구성합니다. AWS WAF를 CloudFront에 연결합니다.	원본 액세스 ID(OAI)를 사용하여 S3 버킷에 대한 액세스를 제한하도록 Amazon CloudFront 및 Amazon S3를 구성합니다. 배포에서 AWS WAF를 활성화합니다.	D	
1456	Q120. 회사에는 공통 Amazon RDS MySQL 다중 AZ DB 인스턴스에 자주 액세스해야 하는 여러 웹 서버가 있습니다. 회사는 사용자 자격 증명을 자주 교체해야 하는 보안 요구 사항을 충족하면서 웹 서버가 데이터베이스에 연결할 수 있는 안전한 방법을 원합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	AWS Secrets Manager에 데이터베이스 사용자 자격 증명 저장 웹 서버가 AWS Secrets Manager에 액세스할 수 있도록 필요한 IAM 권한을 부여합니다.	AWS Systems Manager OpsCenter에 데이터베이스 사용자 자격 증명을 저장합니다. 웹 서버가 OpsCenter에 액세스할 수 있도록 필요한 IAM 권한을 부여합니다.	안전한 Amazon S3 버킷에 데이터베이스 사용자 자격 증명 저장 웹 서버가 자격 증명을 검색하고 데이터베이스에 액세스할 수 있도록 필요한 IAM 권한을 부여합니다.	웹 서버 파일 시스템의 AWS Key Management Service(AWS KMS)로 암호화된 파일에 데이터베이스 사용자 자격 증명을 저장합니다. 웹 서버는 파일을 해독하고 데이터베이스에 액세스할 수 있어야 합니다.	A	
1457	Q121. 솔루션 설계자는 퍼블릭 및 프라이빗 서브넷이 있는 VPC를 설계하고 있습니다. VPC와 서브넷은 IPv4 CIDR 블록을 사용합니다. 고가용성을 위해 세 개의 가용 영역(AZ) 각각에 하나의 퍼블릭 서브넷과 하나의 프라이빗 서브넷이 있습니다. 인터넷 게이트웨이는 퍼블릭 서브넷에 대한 인터넷 액세스를 제공하는 데 사용됩니다. 프라이빗 서브넷은 Amazon EC2 인스턴스가 소프트웨어 업데이트를 다운로드할 수 있도록 인터넷에 액세스할 수 있어야 합니다.\n\n솔루션 설계자는 프라이빗 서브넷에 대한 인터넷 액세스를 활성화하기 위해 무엇을 해야 합니까?	각 AZ의 각 퍼블릭 서브넷에 대해 하나씩 3개의 NAT 게이트웨이를 생성합니다. 비 VPC 트래픽을 해당 AZ의 NAT 게이트웨이로 전달하는 각 AZ에 대한 프라이빗 라우팅 테이블을 생성합니다.	각 AZ의 프라이빗 서브넷마다 하나씩 3개의 NAT 인스턴스를 생성합니다. 비 VPC 트래픽을 해당 AZ의 NAT 인스턴스로 전달하는 각 AZ에 대한 프라이빗 라우팅 테이블을 생성합니다.	프라이빗 서브넷 중 하나에 두 번째 인터넷 게이트웨이를 생성합니다. VPC가 아닌 트래픽을 프라이빗 인터넷 게이트웨이로 전달하는 프라이빗 서브넷의 라우팅 테이블을 업데이트합니다.	퍼블릭 서브넷 중 하나에 송신 전용 인터넷 게이트웨이를 생성합니다. VPC가 아닌 트래픽을 외부 전용 인터넷 게이트웨이로 전달하는 프라이빗 서브넷에 대한 라우팅 테이블을 업데이트합니다.	A	
1458	Q122. 회사에 AWS에서 호스팅되는 웹 사이트가 있습니다. 웹 사이트는 HTTP와 HTTPS를 별도로 처리하도록 구성된 ALB(Application Load Balancer) 뒤에 있습니다. 회사는 요청이 HTTPS를 사용하도록 모든 요청을 웹사이트로 전달하려고 합니다.\n\n솔루션 설계자는 이 요구 사항을 충족하기 위해 어떤 솔루션을 수행해야 합니까?	HTTPS 트래픽만 허용하도록 ALB의 네트워크 ACL을 업데이트합니다.	URL의 HTTP를 HTTPS로 바꾸는 규칙을 만듭니다.	ALB에서 리스너 규칙을 생성하여 HTTP 트래픽을 HTTPS로 리디렉션합니다.	ALB를 SNI(서버 이름 표시)를 사용하도록 구성된 Network Load Balancer로 교체합니다.	C	
1459	Q123. 회사에서 새 애플리케이션을 시작하고 Amazon CloudWatch 대시보드에 애플리케이션 지표를 표시합니다. 회사의 제품 관리자는 이 대시보드에 주기적으로 액세스해야 합니다. 제품 관리자에게 AWS 계정이 없습니다. 솔루션 설계자는 최소 권한 원칙에 따라 제품 관리자에게 액세스 권한을 제공해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	CloudWatch 콘솔에서 대시보드를 공유합니다. 제품 관리자의 이메일 주소를 입력하고 공유 단계를 완료합니다. 대시보드에 대한 공유 가능한 링크를 제품 관리자에게 제공하십시오.	특히 제품 관리자를 위한 IAM 사용자를 생성합니다. CloudWatch 읽기 전용 액세스 관리형 정책을 사용자에게 연결합니다. 새 로그인 자격 증명을 제품 관리자와 공유합니다. 올바른 대시보드의 브라우저 URL을 제품 관리자와 공유하십시오.	회사 직원을 위한 IAM 사용자를 생성하고 View Only Access AWS 관리형 정책을 IAM 사용자에게 연결합니다. 새 로그인 자격 증명을 제품 관리자와 공유하십시오. 제품 관리자에게 CloudWatch 콘솔로 이동하여 대시보드 섹션에서 이름으로 대시보드를 찾으라고 요청합니다.	퍼블릭 서브넷에 배스천 서버를 배포합니다. 제품 관리자가 대시보드에 액세스해야 하는 경우 서버를 시작하고 RDP 자격 증명을 공유합니다. 배스천 서버에서 대시보드를 볼 수 있는 적절한 권한이 있는 캐시된 AWS 자격 증명으로 대시보드 URL을 열도록 브라우저가 구성되어 있는지 확인합니다.	A	
1460	Q125. 회사는 온프레미스 서버에서 Amazon EC2 인스턴스로 애플리케이션을 마이그레이션하고 있습니다. 마이그레이션 설계 요구 사항의 일부로 솔루션 설계자는 인프라 메트릭 경보를 구현해야 합니다. CPU 사용률이 단기간에 50% 이상으로 증가하는 경우 회사는 조치를 취할 필요가 없습니다. 하지만 CPU 사용률이 50% 이상으로 증가하고 디스크의 읽기 IOPS가 동시에 높다면 회사에서 최대한 빨리 조치를 취해야 합니다. 솔루션 설계자는 또한 오경보를 줄여야 합니다.\n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?	가능한 경우 Amazon CloudWatch 복합 경보를 생성합니다.	Amazon CloudWatch 대시보드를 생성하여 지표를 시각화하고 문제에 신속하게 대응합니다.	Amazon CloudWatch 합성 카나리아를 생성하여 애플리케이션을 모니터링하고 경보를 발생시킵니다.	가능한 경우 여러 지표 임계값으로 단일 Amazon CloudWatch 지표 경보를 생성합니다.	A	
1461	Q126. 솔루션 설계자는 회사의 고객 대면 애플리케이션을 설계하고 있습니다. 애플리케이션의 데이터베이스는 일년 내내 명확하게 정의된 액세스 패턴을 가지며 연중 시간에 따라 다양한 읽기 및 쓰기 횟수를 갖게 됩니다. 회사는 데이터베이스에 대한 감사 기록을 7일 동안 보관해야 합니다. RPO(복구 지점 목표)는 5시간 미만이어야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	Auto Scaling과 함께 Amazon DynamoDB 사용 온디맨드 백업과 Amazon DynamoDB 스트림을 사용합니다.	Amazon Redshift를 사용합니다. 동시성 확장을 구성합니다. 감사 로깅을 활성화합니다. 4시간마다 데이터베이스 스냅샷을 수행합니다.	프로비저닝된 IOPS와 함께 Amazon RDS 사용 데이터베이스 감사 매개변수 활성화 5시간마다 데이터베이스 스냅샷을 수행합니다.	Auto Scaling과 함께 Amazon Aurora MySQL을 사용합니다. 데이터베이스 감사 매개변수를 활성화하십시오.	B	
1462	Q127. 회사는 단일 VPC의 Amazon EC2 인스턴스에서 고가용성 이미지 처리 애플리케이션을 실행합니다. EC2 인스턴스는 여러 가용 영역의 여러 서브넷 내에서 실행됩니다. EC2 인스턴스는 서로 통신하지 않지만, EC2 인스턴스는 Amazon S3에서 이미지를 다운로드하고 단일 NAT 게이트웨이를 통해 Amazon S3에 이미지를 업로드합니다. 회사에서는 데이터 전송 요금을 우려하고 있습니다.\n\n데이터 전송 요금이 걱정되는 회사	각 가용 영역에서 NAT 게이트웨이 시작	NAT 게이트웨이를 NAT 인스턴스로 교체	Amazon S3용 게이트웨이 VPC 엔드포인트 배포	EC2 인스턴스를 실행할 EC2 전용 호스트 프로비저닝	C	
1463	Q128. 회사는 여러 Amazon EC2 인스턴스에서 애플리케이션을 호스팅합니다. 애플리케이션은 Amazon SQS 대기열에서 메시지를 처리하고, Amazon RDS 테이블에 대해 쓰고, 대기열에서 메시지를 삭제합니다. RDS 테이블에서 가끔 중복 레코드가 발견됩니다. SQS 대기열에는 중복 메시지가 없습니다.\n\n메시지가 한 번만 처리되도록 솔루션 설계자는 무엇을 해야 합니까?	CreateQueue API 호출을 사용하여 새 대기열을 만듭니다.	AddPermission API 호출을 사용하여 적절한 권한을 추가합니다.	ReceiveMessage API 호출을 사용하여 적절한 대기 시간을 설정합니다.	ChangeMessageVisibility API 호출을 사용하여 가시성 시간 초과를 늘립니다.	D	
1464	Q129. AA 회사는 애플리케이션의 성능을 개선하기 위해 다계층 애플리케이션을 온프레미스에서 AWS 클라우드로 이동하려고 합니다. 애플리케이션은 RESTful 서비스를 통해 서로 통신하는 애플리케이션 계층으로 구성됩니다. 한 계층이 오버로드되면 트랜잭션이 삭제됩니다. 솔루션 설계자는 이러한 문제를 해결하고 애플리케이션을 현대화하는 솔루션을 설계해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족하고 운영상 가장 효율적입니까?	Amazon API Gateway를 사용하고 애플리케이션 계층으로 AWS Lambda 함수에 트랜잭션을 전달합니다. Amazon Simple Queue Service(Amazon SQS)를 애플리케이션 서비스 간의 통신 계층으로 사용합니다.	Amazon CloudWatch 지표를 사용하여 애플리케이션 성능 기록을 분석하여 성능 장애 동안 서버의 최대 사용률을 결정합니다. 최대 요구 사항을 충족하도록 애플리케이션 서버의 Amazon EC2 인스턴스 크기를 늘립니다.	Amazon Simple Notification Service(Amazon SNS)를 사용하여 Auto Scaling 그룹의 Amazon EC2에서 실행되는 애플리케이션 서버 간의 메시징을 처리합니다. Amazon CloudWatch를 사용하여 SNS 대기열 길이를 모니터링하고 필요에 따라 확장 및 축소합니다.	Amazon Simple Queue Service(Amazon SQS)를 사용하여 Auto Scaling 그룹의 Amazon EC2에서 실행되는 애플리케이션 서버 간의 메시징을 처리합니다. Amazon CloudWatch를 사용하여 SQS 대기열 길이를 모니터링하고 통신 오류가 감지되면 확장합니다.	A	
1465	Q130. 회사는 AWS 클라우드를 사용하여 기존 애플리케이션을 고가용성 및 복원력으로 만들기를 원합니다. 애플리케이션의 현재 버전은 회사의 데이터 센터에 있습니다. 예기치 않은 정전으로 인해 데이터베이스 서버가 충돌한 후 애플리케이션에서 최근 데이터 손실이 발생했습니다. 회사는 단일 실패 지점을 방지하는 솔루션이 필요합니다. 솔루션은 사용자 요구에 맞게 확장할 수 있는 기능을 애플리케이션에 제공해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	여러 가용 영역에 걸쳐 Auto Scaling 그룹의 Amazon EC2 인스턴스를 사용하여 애플리케이션 서버를 배포합니다. 다중 AZ 구성에서 Amazon RDS DB 인스턴스를 사용합니다.	단일 가용 영역의 Auto Scaling 그룹에서 Amazon EC2 인스턴스를 사용하여 애플리케이션 서버를 배포합니다. EC2 인스턴스에 데이터베이스를 배포합니다. EC2 자동 복구를 활성화합니다.	여러 가용 영역에 걸쳐 Auto Scaling 그룹의 Amazon EC2 인스턴스를 사용하여 애플리케이션 서버를 배포합니다. 단일 가용 영역에서 읽기 전용 복제본이 있는 Amazon RDS DB 인스턴스를 사용합니다. 기본 DB 인스턴스가 실패하는 경우 읽기 전용 복제본을 승격하여 기본 DB 인스턴스를 교체합니다.	여러 가용 영역에 걸쳐 Auto Scaling 그룹의 Amazon EC2 인스턴스를 사용하여 애플리케이션 서버를 배포합니다. 여러 가용 영역에 걸쳐 EC2 인스턴스에 기본 및 보조 데이터베이스 서버를 배포합니다. Amazon Elastic Block Store(Amazon EBS) 다중 연결을 사용하여 인스턴스 간에 공유 스토리지를 생성합니다.	A	
1466	Q131. 회사에서 분산 애플리케이션을 AWS로 마이그레이션하고 있습니다. 애플리케이션은 다양한 워크로드를 처리합니다. 레거시 플랫폼은 여러 컴퓨팅 노드에서 작업을 조정하는 기본 서버로 구성됩니다. 이 회사는 탄력성과 확장성을 극대화하는 솔루션으로 애플리케이션을 현대화하려고 합니다.\n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 아키텍처를 어떻게 설계해야 합니까?	작업의 대상으로 Amazon Simple Queue Service(Amazon SQS) 대기열을 구성합니다. Auto Scaling 그룹에서 관리되는 Amazon EC2 인스턴스로 컴퓨팅 노드를 구현합니다. 예약된 조정을 사용하도록 EC2 Auto Scaling을 구성합니다.	작업의 대상으로 Amazon Simple Queue Service(Amazon SQS) 대기열을 구성합니다. Auto Scaling 그룹에서 관리되는 Amazon EC2 인스턴스로 컴퓨팅 노드를 구현합니다. 대기열 크기에 따라 EC2 Auto Scaling을 구성합니다.	Auto Scaling 그룹에서 관리되는 Amazon EC2 인스턴스로 기본 서버와 컴퓨팅 노드를 구현합니다. 작업의 대상으로 AWS CloudTrail을 구성합니다. 기본 서버의 부하를 기반으로 EC2 Auto Scaling을 구성합니다.	Auto Scaling 그룹에서 관리되는 Amazon EC2 인스턴스로 기본 서버와 컴퓨팅 노드를 구현합니다. 작업의 대상으로 Amazon EventBridge(Amazon CloudWatch Events)를 구성합니다. 컴퓨팅 노드의 부하를 기반으로 EC2 Auto Scaling을 구성합니다.	B	
1467	Q132. 게임 회사는 AWS에서 브라우저 기반 애플리케이션을 호스팅합니다. 애플리케이션 사용자는 Amazon S3에 저장된 많은 수의 비디오와 이미지를 소비합니다. 이 내용은 모든 사용자에게 동일합니다. 응용 프로그램의 인기가 높아졌으며 전 세계 수백만 명의 사용자가 이러한 미디어 파일에 액세스하고 있습니다. 회사는 원본에 대한 부하를 줄이면서 사용자에게 파일을 제공하고자 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 가장 비용 효율적으로 충족합니까?	웹 서버 앞에 AWS Global Accelerator 액셀러레이터를 배포합니다.	S3 버킷 앞에 Amazon CloudFront 웹 배포를 배포합니다.	웹 서버 앞에 Amazon ElastiCache for Redis 인스턴스를 배포합니다.	웹 서버 앞에 Amazon ElastiCache for Memcached 인스턴스를 배포합니다.	B	
1468	Q133. 솔루션 설계자는 애플리케이션이 Amazon RDS DB 인스턴스에 액세스하는 데 사용하는 데이터베이스 사용자 이름과 암호를 안전하게 저장해야 합니다. 데이터베이스에 액세스하는 애플리케이션은 Amazon EC2 인스턴스에서 실행됩니다. 솔루션 설계자는 AWS Systems Manager Parameter Store에서 보안 파라미터를 생성하려고 합니다.\n\n솔루션 설계자는 이 요구 사항을 충족하기 위해 무엇을 해야 합니까?	Parameter Store 파라미터에 대한 읽기 액세스 권한이 있는 IAM 역할을 생성합니다. 파라미터를 암호화하는 데 사용되는 AWS Key Management Service(AWS KMS) 키에 대한 Decrypt 액세스를 허용합니다. 이 IAM 역할을 EC2 인스턴스에 할당합니다.	Parameter Store 파라미터에 대한 읽기 액세스를 허용하는 IAM 정책을 생성합니다. 파라미터를 암호화하는 데 사용되는 AWS Key Management Service(AWS KMS) 키에 대한 Decrypt 액세스를 허용합니다. 이 IAM 정책을 EC2 인스턴스에 할당합니다.	Parameter Store 파라미터와 EC2 인스턴스 간에 IAM 신뢰 관계를 생성합니다. 신뢰 정책에서 Amazon RDS를 보안 주체로 지정합니다.	DB 인스턴스와 EC2 인스턴스 간에 IAM 신뢰 관계를 생성합니다. 시스템 관리자를 신뢰 정책의 보안 주체로 지정합니다.	A	
1469	Q134. 회사에 다양한 런타임으로 AWS Lambda 함수를 분당 최대 800번 호출하는 이벤트 기반 애플리케이션이 있습니다. Lambda 함수는 Amazon Aurora MySQL DB 클러스터에 저장된 데이터에 액세스합니다. 회사는 사용자 활동이 증가함에 따라 연결 시간 초과를 인지하고 있습니다. 데이터베이스에 과부하가 걸린 흔적이 없습니다. CPU, 메모리 및 디스크 액세스 메트릭이 모두 낮습니다.\n\n어떤 솔루션이 운영 오버헤드를 최소화하면서 이 문제를 해결할 것입니까?	더 많은 연결을 처리하려면 Aurora MySQL 노드의 크기를 조정하십시오. 데이터베이스 연결 시도에 대해 Lambda 함수에서 재시도 논리를 구성합니다.	데이터베이스에서 일반적으로 읽는 항목을 캐시하도록 읽기용 Amazon ElastiCache를 설정합니다. 읽기를 위해 ElastiCache에 연결하도록 Lambda 함수를 구성합니다.	Aurora 복제본을 리더 노드로 추가합니다. 작성기 엔드포인트가 아닌 DB 클러스터의 판독기 엔드포인트에 연결하도록 Lambda 함수를 구성합니다.	Amazon RDS 프록시를 사용하여 프록시를 생성합니다. DB 클러스터를 대상 데이터베이스로 설정 DB 클러스터가 아닌 프록시에 연결하도록 Lambda 함수를 구성합니다.	D	
1470	Q135. 회사에는 다음 구성 요소가 포함된 데이터 수집 워크플로가 있습니다. 새로운 데이터 전송에 대한 알림을 수신하는 Amazon Simple Notification Service(Amazon SNS) 주제. 데이터를 처리하고 저장하는 AWS Lambda 함수. 수집 워크플로는 네트워크 연결 문제로 인해 때때로 실패합니다. 재시도가 발생하면 회사에서 수동으로 작업을 다시 실행하지 않는 한 해당 데이터가 수집되지 않습니다.\n\n모든 알림이 최종적으로 처리되도록 솔루션 설계자는 무엇을 해야 합니까?	여러 가용 영역에 배포하기 위해 Lambda 함수를 구성합니다.	Lambda 함수 구성을 수정하여 함수에 대한 CPU 및 메모리 할당을 늘립니다.	재시도 횟수와 재시도 간 대기 시간을 모두 늘리도록 SNS 주제의 재시도 전략을 구성합니다.	Amazon Simple Queue Service(Amazon SQS) 대기열을 실패 시 대상으로 구성합니다. 대기열의 메시지를 처리하도록 Lambda 함수를 수정합니다.	D	
1471	Q136. 회사는 AWS 인프라에 대한 월별 유지 관리를 수행합니다. 이러한 유지 관리 활동 중에 회사는 여러 AWS 리전에서 MySQL용 Amazon RDS 데이터베이스에 대한 자격 증명을 교체해야 합니다.\n\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?	자격 증명을 AWS Secrets Manager에 암호로 저장합니다. 필요한 리전에 대해 다중 리전 비밀 복제를 사용합니다. 일정에 따라 보안 암호를 교체하도록 Secrets Manager를 구성합니다.	보안 문자열 파라미터를 생성하여 AWS Systems Manager에 자격 증명을 보안 암호로 저장합니다. 필요한 리전에 대해 다중 리전 비밀 복제를 사용합니다. 일정에 따라 암호를 교체하도록 Systems Manager를 구성합니다.	서버 측 암호화(SSE)가 활성화된 Amazon S3 버킷에 자격 증명을 저장합니다. Amazon EventBridge(Amazon CloudWatch Events)를 사용하여 AWS Lambda 함수를 호출하여 자격 증명을 교체합니다.	AWS Key Management Service(AWS KMS) 다중 리전 고객 관리형 키를 사용하여 자격 증명을 비밀로 암호화합니다. 비밀을 Amazon DynamoDB 글로벌 테이블에 저장합니다. AWS Lambda 함수를 사용하여 DynamoDB에서 암호 검색 RDS API를 사용하여 암호를 교체합니다.	A	
1472	Q137. 전자 상거래 회사는 AWS에서 하루 1회 웹 사이트를 시작하려고 합니다. 매일 24시간 동안 정확히 하나의 제품을 판매합니다. 회사는 피크 시간 동안 밀리초 지연 시간으로 시간당 수백만 개의 요청을 처리할 수 있기를 원합니다.\n\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?	Amazon S3를 사용하여 다른 S3 버킷에 전체 웹 사이트를 호스팅합니다. Amazon CloudFront 배포를 추가합니다. S3 버킷을 배포의 오리진으로 설정합니다. Amazon S3에 주문 데이터를 저장합니다.	여러 가용 영역의 Auto Scaling 그룹에서 실행되는 Amazon EC2 인스턴스에 전체 웹 사이트를 배포합니다. ALB(Application Load Balancer)를 추가하여 웹 사이트 트래픽을 분산합니다. 백엔드 API에 대해 다른 ALB를 추가하십시오. MySQL용 Amazon RDS에 데이터를 저장합니다.	컨테이너에서 실행되도록 전체 애플리케이션을 마이그레이션합니다. Amazon Elastic Kubernetes Service(Amazon EKS)에서 컨테이너를 호스팅합니다. Kubernetes 클러스터 자동 확장 처리를 사용하여 트래픽 버스트를 처리할 포드 수를 늘리거나 줄입니다. MySQL용 Amazon RDS에 데이터를 저장합니다.	Amazon S3 버킷을 사용하여 웹 사이트의 정적 콘텐츠를 호스팅합니다. Amazon CloudFront 배포를 배포합니다. S3 버킷을 오리진으로 설정합니다. 백엔드 API에 Amazon API Gateway 및 AWS Lambda 함수를 사용합니다. Amazon DynamoDB에 데이터를 저장합니다.	D	
1473	Q138. 회사는 매월 통화 기록 파일을 저장합니다. 사용자는 통화 후 1년 이내에 파일에 무작위로 액세스하지만 1년 이후에는 파일에 자주 액세스하지 않습니다. 이 회사는 사용자에게 1년 미만의 파일을 가능한 한 빨리 쿼리하고 검색할 수 있는 기능을 제공하여 솔루션을 최적화하려고 합니다. 오래된 파일을 검색하는 데 있어 지연은 허용됩니다.\n\n어떤 솔루션이 이러한 요구 사항을 가장 비용 효율적으로 충족합니까?	Amazon S3 Glacier Instant Retrieval에 태그가 있는 개별 파일을 저장합니다. 태그를 쿼리하여 S3 Glacier Instant Retrieval에서 파일을 검색합니다.	Amazon S3 Intelligent-Tiering에 개별 파일을 저장합니다. S3 수명 주기 정책을 사용하여 1년 후 파일을 S3 Glacier Flexible Retrieval로 이동합니다. Amazon Athena를 사용하여 Amazon S3에 있는 파일을 쿼리하고 검색합니다. S3 Glacier Select를 사용하여 S3 Glacier에 있는 파일을 쿼리하고 검색합니다.	Amazon S3 Standard 스토리지에 태그가 있는 개별 파일을 저장합니다. Amazon S3 Standard 스토리지의 각 아카이브에 대한 검색 메타데이터를 저장합니다. S3 수명 주기 정책을 사용하여 1년 후에 파일을 S3 Glacier Instant Retrieval로 이동합니다. Amazon S3에서 메타데이터를 검색하여 파일을 쿼리하고 검색합니다.	Amazon S3 Standard 스토리지에 개별 파일을 저장합니다. S3 수명 주기 정책을 사용하여 1년 후에 파일을 S3 Glacier Deep Archive로 이동합니다. Amazon RDS에 검색 메타데이터를 저장합니다. Amazon RDS에서 파일을 쿼리합니다. S3 Glacier Deep Archive에서 파일을 검색합니다.	B	
1474	Q139. 전자 상거래 회사에 Amazon API Gateway와 AWS Lambda 함수를 사용하는 주문 처리 애플리케이션이 있습니다. 애플리케이션은 Amazon Aurora PostgreSQL 데이터베이스에 데이터를 저장합니다. 최근 판매 이벤트 중에 고객 주문이 갑자기 급증했습니다. 일부 고객은 시간 초과를 경험했으며 애플리케이션이 해당 고객의 주문을 처리하지 않았습니다. 솔루션 설계자는 열린 연결 수가 많기 때문에 데이터베이스에서 CPU 사용률과 메모리 사용률이 높다고 판단했습니다. 솔루션 설계자는 시간 초과 오류를 방지하면서 응용 프로그램을 최소한으로 변경해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	Lambda 함수에 대해 프로비저닝된 동시성 구성 여러 AWS 리전에서 전역 데이터베이스가 되도록 데이터베이스를 수정합니다.	Amazon RDS 프록시를 사용하여 데이터베이스에 대한 프록시 생성 데이터베이스 엔드포인트 대신 RDS 프록시 엔드포인트를 사용하도록 Lambda 함수를 수정합니다.	다른 AWS 리전의 데이터베이스에 대한 읽기 전용 복제본 생성 API Gateway의 쿼리 문자열 파라미터를 사용하여 트래픽을 읽기 전용 복제본으로 라우팅합니다.	AWS Database Migration Service(AWS DMS)를 사용하여 Aurora PostgreSQL에서 Amazon DynamoDB로 데이터를 마이그레이션합니다. DynamoDB 테이블을 사용하도록 Lambda 함수 수정	B	
1475	Q140. 회사는 가장 최근 청구서에서 Amazon EC2 비용 증가를 관찰했습니다. 청구 팀은 몇 개의 EC2 인스턴스에 대한 인스턴스 유형의 원치 않는 수직적 확장을 발견했습니다. 솔루션 설계자는 지난 2개월간의 EC2 비용을 비교하는 그래프를 생성하고 심층 분석을 수행하여 수직적 확장의 근본 원인을 식별해야 합니다.\n\n솔루션 설계자는 운영 오버헤드가 가장 적은 정보를 어떻게 생성해야 합니까?	AWS 예산을 사용하여 예산 보고서를 생성하고 인스턴스 유형에 따라 EC2 비용을 비교합니다.	Cost Explorer의 세분화된 필터링 기능을 사용하여 인스턴스 유형을 기반으로 EC2 비용에 대한 심층 분석을 수행합니다.	AWS Billing and Cost Management 대시보드의 그래프를 사용하여 지난 2개월 동안의 인스턴스 유형을 기준으로 EC2 비용을 비교합니다.	AWS 비용 및 사용 보고서를 사용하여 보고서를 생성하고 Amazon S3 버킷으로 보냅니다. Amazon S3와 함께 Amazon QuickSight를 소스로 사용하여 인스턴스 유형을 기반으로 대화형 그래프를 생성합니다.	B	
1476	Q141. 회사는 Amazon S3에서 정적 웹 사이트를 호스팅하고 DNS에 Amazon Route 53을 사용하고 있습니다. 웹 사이트는 전 세계적으로 수요가 증가하고 있습니다. 그 회사 웹 사이트에 액세스하는 사용자의 대기 시간을 줄여야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 가장 비용 효율적으로 충족합니까?	웹 사이트가 포함된 S3 버킷을 모든 AWS 리전에 복제합니다. Route 53 지리적 위치 라우팅 항목을 추가합니다.	AWS Global Accelerator에서 액셀러레이터를 프로비저닝합니다. 제공된 IP 주소를 S3 버킷과 연결합니다. 액셀러레이터의 IP 주소를 가리키도록 Route 53 항목을 편집합니다.	S3 버킷 앞에 Amazon CloudFront 배포를 추가합니다. CloudFront 배포를 가리키도록 Route 53 항목을 편집합니다.	버킷에서 S3 Transfer Acceleration을 활성화합니다. 새 엔드포인트를 가리키도록 Route 53 항목을 편집합니다.	C	
1477	Q142. 최근에 AWS로 마이그레이션한 회사가 프로덕션 VPC로 들어오고 나가는 트래픽을 보호하는 솔루션을 구현하려고 합니다. 이 회사는 사내 데이터 센터에 검사 서버를 가지고 있었습니다. 검사 서버는 트래픽 흐름 검사 및 트래픽 필터링과 같은 특정 작업을 수행했습니다. 회사는 AWS 클라우드에서 동일한 기능을 갖기를 원합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	프로덕션 VPC에서 트래픽 검사 및 트래픽 필터링에 Amazon GuardDuty 사용	트래픽 미러링을 사용하여 트래픽 검사 및 필터링을 위해 프로덕션 VPC의 트래픽을 미러링합니다.	AWS 네트워크 방화벽을 사용하여 프로덕션 VPC에 대한 트래픽 검사 및 트래픽 필터링에 필요한 규칙을 생성합니다.	AWS Firewall Manager를 사용하여 프로덕션 VPC에 대한 트래픽 검사 및 트래픽 필터링에 필요한 규칙을 생성합니다.	C	
1478	Q143. 회사는 의료 시험의 결과를 Amazon S3 리포지토리에 저장해야 합니다. 리포지토리는 일부 과학자가 새 파일을 추가할 수 있도록 허용해야 하고 다른 모든 사용자는 읽기 전용 액세스로 제한해야 합니다. 어떤 사용자도 저장소의 파일을 수정하거나 삭제할 수 없습니다. 회사는 모든 파일을 생성일로부터 최소 1년 동안 저장소에 보관해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	거버넌스 모드에서 1년의 법적 보류로 S3 객체 잠금을 사용합니다.	보존 기간이 365일인 규정 준수 모드에서 S3 Object Lock을 사용합니다.	IAM 역할을 사용하여 모든 사용자가 S3 버킷의 객체를 삭제하거나 변경하지 못하도록 제한합니다. S3 버킷 정책을 사용하여 IAM 역할만 허용합니다.	객체가 추가될 때마다 AWS Lambda 함수를 호출하도록 S3 버킷을 구성합니다. 저장된 객체의 해시를 추적하도록 함수를 구성하여 수정된 객체를 적절하게 표시할 수 있습니다.	B	
1479	Q144. AA 회사의 동적 웹 사이트는 미국의 온프레미스 서버를 사용하여 호스팅됩니다. 이 회사는 유럽에서 제품을 출시하고 있으며 새로운 유럽 사용자를 위해 사이트 로딩 시간을 최적화하려고 합니다. 사이트의 백엔드는 미국에 있어야 합니다. 제품이 며칠 안에 출시되며 즉각적인 솔루션이 필요합니다.\n\n솔루션 설계자는 무엇을 권장해야 합니까?	us-east-1에서 Amazon EC2 인스턴스를 시작하고 사이트를 마이그레이션합니다.	웹사이트를 Amazon S3로 이동합니다. 리전 간 교차 리전 복제를 사용합니다.	온프레미스 서버를 가리키는 사용자 지정 오리진과 함께 Amazon CloudFront를 사용합니다.	온프레미스 서버를 가리키는 Amazon Route 53 지리적 근접 라우팅 정책을 사용합니다.	C	
1480	Q145. 회사는 독점 애플리케이션의 로그 파일을 분석할 수 있는 능력이 필요합니다. 로그는 Amazon S3 버킷에 JSON 형식으로 저장됩니다. 쿼리는 간단하고 주문형으로 실행됩니다. 솔루션 설계자는 기존 아키텍처에 대한 최소한의 변경으로 분석을 수행해야 합니다.\n\n솔루션 설계자는 최소한의 운영 오버헤드로 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?	Amazon Redshift를 사용하여 모든 콘텐츠를 한 곳에 로드하고 필요에 따라 SQL 쿼리를 실행합니다.	Amazon CloudWatch Logs를 사용하여 로그를 저장합니다. Amazon CloudWatch 콘솔에서 필요에 따라 SQL 쿼리를 실행합니다.	Amazon S3와 함께 Amazon Athena를 직접 사용하여 필요에 따라 쿼리를 실행합니다.	AWS Glue를 사용하여 로그를 분류합니다. Amazon EMR에서 임시 Apache Spark 클러스터를 사용하여 필요한 SQL 쿼리 광고를 실행합니다.	C	
1481	Q147. 회사의 컨테이너화된 애플리케이션은 Amazon EC2 인스턴스에서 실행됩니다. 애플리케이션은 다른 비즈니스 애플리케이션과 통신하기 전에 보안 인증서를 다운로드해야 합니다. 회사는 거의 실시간으로 인증서를 암호화하고 해독할 수 있는 매우 안전한 솔루션을 원합니다. 또한 솔루션은 데이터가 암호화된 후 고가용성 스토리지에 데이터를 저장해야 합니다.\n\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?	암호화된 인증서에 대한 AWS Secrets Manager 암호를 생성합니다. 필요에 따라 인증서를 수동으로 업데이트합니다. 세분화된 IAM 액세스를 사용하여 데이터에 대한 액세스를 제어합니다.	Python 암호화 라이브러리를 사용하여 암호화 작업을 수신하고 수행하는 AWS Lambda 함수를 생성합니다. 함수를 Amazon S3 버킷에 저장합니다.	AWS Key Management Service(AWS KMS) 고객 관리형 키를 생성합니다. EC2 역할이 암호화 작업에 KMS 키를 사용하도록 허용합니다. 암호화된 데이터를 Amazon S3에 저장합니다.	AWS Key Management Service(AWS KMS) 고객 관리형 키를 생성합니다. EC2 역할이 암호화 작업에 KMS 키를 사용하도록 허용합니다. 암호화된 데이터를 Amazon Elastic Block Store(Amazon EBS) 볼륨에 저장합니다.	C	
1482	Q148. 회사에 AWS에 배포된 3계층 웹 애플리케이션이 있습니다. 웹 서버는 VPC의 퍼블릭 서브넷에 배포됩니다. 애플리케이션 서버와 데이터베이스 서버는 동일한 VPC의 프라이빗 서브넷에 배포됩니다. 이 회사는 AWS Marketplace의 타사 가상 방화벽 어플라이언스를 검사 VPC에 배포했습니다. 어플라이언스는 IP 패킷을 수락할 수 있는 IP 인터페이스로 구성됩니다. 솔루션 설계자는 트래픽이 웹 서버를 가르치기 전에 애플리케이션에 대한 모든 트래픽을 검사하기 위해 웹 애플리케이션을 어플라이언스와 통합해야 합니다.\n\n최소한의 운영 오버헤드로 이러한 요구 사항을 해결하는 솔루션은 무엇입니까?	애플리케이션 VPC의 퍼블릭 서브넷을 생성하여 패킷 검사를 위해 어플라이언스로 트래픽을 라우팅합니다.	애플리케이션 VPC의 퍼블릭 서브넷에 Application Load Balancer를 생성하여 패킷 검사를 위해 어플라이언스로 트래픽을 라우팅합니다.	검사 VPC에 전송 게이트웨이 배포 전송 게이트웨이를 통해 들어오는 포켓을 라우팅하도록 라우팅 테이블을 구성합니다.	검사 VPC에 게이트웨이 로드 밸런서를 배포합니다. 게이트웨이 로드 밸런서 엔드포인트를 생성하여 수신 패킷을 수신하고 패킷을 어플라이언스로 전달합니다.	D	
1483	Q149. 솔루션 설계자는 AWS 클라우드에 배포되는 새 애플리케이션의 아키텍처를 설계하고 있습니다. 애플리케이션은 Amazon EC2 온디맨드에서 실행됩니다. 여러 가용 영역에 걸쳐 자동으로 확장됩니다. EC2 인스턴스는 하루 종일 자주 확장 및 축소됩니다. ALB(Application Load Balancer)가 부하 분산을 처리합니다. 아키텍처는 분산 세션 데이터 관리를 지원해야 합니다. 회사는 필요한 경우 코드를 변경할 의향이 있습니다.\n\n아키텍처가 분산 세션 데이터 관리를 지원하도록 솔루션 설계자는 무엇을 해야 합니까?	Amazon ElastiCache를 사용하여 세션 데이터를 관리하고 저장합니다.	ALB의 세션 선호도(고정 세션)를 사용하여 세션 데이터를 관리합니다.	AWS Systems Manager의 Session Manager를 사용하여 세션을 관리합니다.	AWS Security Token Service(AWS STS)에서 GetSessionToken API 작업을 사용하여 세션을 관리합니다.	A	
1484	Q150. 회사에서 Amazon S3 Standard 스토리지를 사용하여 백업 파일을 저장하고 있습니다. 1개월 동안 파일에 자주 액세스합니다. 단, 1개월 이후에는 파일에 접근하지 않습니다. 회사는 파일을 무기한 보관해야 합니다.\n\n이러한 요구 사항을 가장 비용 효율적으로 충족하는 스토리지 솔루션은 무엇입니까?	객체를 자동으로 마이그레이션하도록 S3 Intelligent-Tiering을 구성합니다.	S3 수명 주기 구성을 생성하여 1개월 후에 S3 Standard에서 S3 Glacier Deep Archive로 객체를 전환합니다.	S3 수명 주기 구성을 생성하여 1개월 후에 객체를 S3 Standard에서 S3 Standard-Infrequent Access(S3 Standard-IA)로 전환합니다.	S3 수명 주기 구성을 생성하여 1개월 후에 객체를 S3 Standard에서 S3 One Zone-Infrequent Access(S3 One Zone-IA)로 전환합니다.	B	
1485	Q151. 글로벌 회사는 ALB(Application Load Balancer) 뒤의 Amazon EC2 인스턴스에서 웹 애플리케이션을 호스팅합니다. 웹 애플리케이션에는 정적 데이터와 동적 데이터가 있습니다. 회사는 정적 데이터를 Amazon S3 버킷에 저장합니다. 회사는 정적 데이터 및 동적 데이터의 성능을 개선하고 대기 시간을 줄이기를 원합니다. 회사는 Amazon Route 53에 등록된 자체 도메인 이름을 사용하고 있습니다.\n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?	S3 버킷과 ALB를 오리진으로 포함하는 Amazon CloudFront 배포를 생성합니다. CloudFront 배포로 트래픽을 라우팅하도록 Route 53을 구성합니다.	ALB가 오리진인 Amazon CloudFront 배포를 생성합니다. S3 버킷을 엔드포인트로 포함하는 AWS Global Accelerator 표준 액셀러레이터를 생성합니다. CloudFront 배포로 트래픽을 라우팅하도록 Route 53을 구성합니다.	S3 버킷을 오리진으로 포함하는 Amazon CloudFront 배포를 생성합니다. ALB 및 CloudFront 배포를 엔드포인트로 포함하는 AWS Global Accelerator 표준 액셀러레이터를 생성합니다. 가속기 DNS 이름을 가리키는 사용자 지정 도메인 이름을 만듭니다. 사용자 지정 도메인 이름을 웹 애플리케이션의 끝점으로 사용합니다.	ALB가 오리진인 Amazon CloudFront 배포를 생성합니다. S3 버킷을 엔드포인트로 포함하는 AWS Global Accelerator 표준 액셀러레이터를 생성합니다. 두 개의 도메인 이름을 만듭니다. 하나의 도메인 이름이 동적 콘텐츠의 CloudFront DNS 이름을 가리키도록 합니다. 다른 도메인 이름이 정적 콘텐츠에 대한 가속기 DNS 이름을 가리키도록 합니다. 도메인 이름을 웹 애플리케이션의 끝점으로 사용합니다.	A	
1486	Q152. 회사는 중요한 애플리케이션에 대한 애플리케이션 로그 파일을 10년 동안 보관해야 합니다. 애플리케이션 팀은 문제 해결을 위해 지난 달의 로그에 정기적으로 액세스하지만 1개월 이상 된 로그는 거의 액세스하지 않습니다. 애플리케이션은 매월 10TB 이상의 로그를 생성합니다.\n\n이러한 요구 사항을 가장 비용 효율적으로 충족하는 스토리지 옵션은 무엇입니까?	Amazon S3에 로그를 저장합니다. AWS Backup을 사용하여 1개월 이상 된 로그를 S3 Glacier Deep Archive로 이동합니다.	Amazon S3에 로그를 저장합니다. S3 수명 주기 정책을 사용하여 1개월 이상 된 로그를 S3 Glacier Deep Archive로 이동합니다.	Amazon CloudWatch Logs에 로그를 저장합니다. AWS Backup을 사용하여 1개월 이상 된 로그를 S3 Glacier Deep Archive로 이동합니다.	Amazon CloudWatch Logs에 로그를 저장합니다. Amazon S3 수명 주기 정책을 사용하여 1개월 이상 된 로그를 S3 Glacier Deep Archive로 이동합니다.	B	
1487	Q153. 회사는 품목 가격을 기반으로 세금 계산 조회를 자동화하는 API를 사용자에게 제공합니다. 회사는 휴가철에만 더 많은 문의를 받고 응답 시간이 느려집니다. 솔루션 설계자는 확장 가능하고 탄력적인 솔루션을 설계해야 합니다.\n\n솔루션 설계자는 이를 달성하기 위해 무엇을 해야 합니까?	Amazon EC2 인스턴스에서 호스팅되는 API를 제공합니다. EC2 인스턴스는 API 요청이 있을 때 필요한 계산을 수행합니다.	항목 이름을 허용하는 Amazon API Gateway를 사용하여 REST API를 설계합니다. API Gateway는 세금 계산을 위해 항목 이름을 AWS Lambda에 전달합니다.	두 개의 Amazon EC2 인스턴스가 있는 Application Load Balancer를 생성합니다. EC2 인스턴스는 수신된 항목 이름에 대한 세금을 계산합니다.	Amazon EC2 인스턴스에서 호스팅되는 API와 연결하는 Amazon API Gateway를 사용하여 REST API를 설계합니다. API Gateway는 세금 계산을 위해 항목 이름을 수락하고 EC2 인스턴스에 전달합니다.	B	
1488	Q154. 한 회사는 최근에 메시지 처리 시스템을 AWS로 마이그레이션했습니다. 시스템은 Amazon EC2 인스턴스에서 실행되는 ActiveMQ 대기열로 메시지를 수신합니다. 메시지는 Amazon EC2에서 실행되는 소비자 애플리케이션에 의해 처리됩니다. 소비자 애플리케이션은 메시지를 처리하고 결과를 Amazon EC2의 MySQL 데이터베이스에 씁니다. 회사는 이 애플리케이션이 견인 작업의 복잡성과 함께 고가용성을 갖기를 원합니다.\n\nHIGHEST 가용성을 보장하는 아키텍처는 무엇입니까?	다른 가용 영역에 두 번째 ActiveMQ 서버 추가 다른 가용 영역에 소비자 EC2 인스턴스를 추가합니다. MySQL 데이터베이스를 다른 가용 영역에 복제합니다.	두 가용 영역에 구성된 활성/대기 브로커와 함께 Amazon MQ 사용 다른 가용 영역에 소비자 EC2 인스턴스를 추가합니다. MySQL 데이터베이스를 다른 가용 영역에 복제합니다.	두 가용 영역에 구성된 활성/대기 블로터와 함께 Amazon MQ를 사용합니다. 다른 가용 영역에 소비자 EC2 인스턴스를 추가합니다. 다중 AZ가 활성화된 MySQL용 Amazon RDS를 사용합니다.	2개의 가용 영역에 구성된 활성/대기 브로커와 함께 Amazon MQ 사용 2개의 가용 영역에 걸쳐 소비자 EC2 인스턴스에 대한 Auto Scaling 그룹을 추가합니다. 다중 AZ가 활성화된 MySQL용 Amazon RDS를 사용합니다.	D	
1489	Q155. 회사는 Amazon S3를 사용하여 기밀 감사 문서를 저장합니다. S3 버킷은 버킷 정책을 사용하여 최소 권한 원칙에 따라 감사 팀 IAM 사용자 자격 증명에 대한 액세스를 제한합니다. 회사 관리자는 S3 버킷에서 실수로 문서가 삭제되는 것을 걱정하고 더 안전한 솔루션을 원합니다.\n\n솔루션 설계자는 감사 문서를 보호하기 위해 무엇을 해야 합니까?	S3 버킷에서 버전 관리 및 MFA 삭제 기능을 활성화합니다.	각 감사 팀 IAM 사용자 계정의 IAM 사용자 자격 증명에 대해 다단계 인증(MFA)을 활성화합니다.	감사 날짜 동안 s3:DeleteObject 작업을 거부하도록 감사 팀의 IAM 사용자 계정에 S3 수명 주기 정책을 추가합니다.	AWS Key Management Service(AWS KMS)를 사용하여 S3 버킷을 암호화하고 감사 팀 IAM 사용자 계정이 KMS 키에 액세스하지 못하도록 제한합니다.	A	
1490	Q156. 회사는 여러 가용 영역의 Amazon EC2 인스턴스에서 실행되는 웹 기반 애플리케이션을 구축하고 있습니다. 웹 애플리케이션은 약 900TB 크기의 텍스트 문서 저장소에 대한 액세스를 제공합니다. 회사는 웹 응용 프로그램이 수요가 많은 기간을 경험할 것으로 예상합니다. 솔루션 설계자는 텍스트 문서의 스토리지 구성 요소가 애플리케이션의 요구 사항을 항상 충족할 수 있도록 확장할 수 있는지 확인해야 합니다. 회사는 솔루션의 전체 비용에 대해 우려하고 있습니다.\n\n어떤 스토리지 솔루션이 이러한 요구 사항을 가장 비용 효율적으로 충족합니까?	Amazon Elastic Block Store(Amazon EBS)	Amazon Elastic File System(Amazon EFS)	Amazon Elasticsearch Service(Amazon ES)	Amazon S3	D	
1491	Q157. 게임 회사에 점수를 표시하는 웹 응용 프로그램이 있습니다. 애플리케이션은 Application Load Balancer 뒤의 Amazon EC2 인스턴스에서 실행됩니다. 애플리케이션은 MySQL용 Amazon RDS 데이터베이스에 데이터를 저장합니다. 사용자는 데이터베이스 읽기 성능으로 인한 긴 지연 및 중단을 경험하기 시작했습니다. 회사는 응용 프로그램 아키텍처의 변경을 최소화하면서 사용자 경험을 개선하기를 원합니다.\n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?	데이터베이스 앞에 Amazon ElastiCache를 사용합니다.	응용 프로그램과 데이터베이스 간에 RDS 프록시를 사용합니다.	애플리케이션을 EC2 인스턴스에서 AWS Lambda로 마이그레이션합니다.	Amazon RDS for MySQL에서 Amazon DynamoDB로 데이터베이스를 마이그레이션합니다.	A	
1492	Q158. 회사에서 AWS에 새로운 공개 웹 애플리케이션을 배포하고 있습니다. 애플리케이션은 ALB(Application Load Balancer) 뒤에서 실행됩니다. 애플리케이션은 외부 CA(인증 기관)에서 발급한 SSL/TLS 인증서를 사용하여 에지에서 암호화해야 합니다. 인증서가 만료되기 전에 매년 인증서를 교체해야 합니다.\n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?	AWS Certificate Manager(ACM)를 사용하여 SSL/TLS 인증서를 발급합니다. 인증서를 ALB에 적용합니다. 관리형 갱신 기능을 사용하여 인증서를 자동으로 교체합니다.	AWS Certificate Manager(ACM)를 사용하여 SSL/TLS 인증서를 발급합니다. 인증서에서 키 자료를 가져옵니다. 인증서를 ALB에 적용합니다. 관리형 갱신 기능을 사용하여 인증서를 자동으로 교체합니다.	AWS Certificate Manager(ACM) 사설 인증 기관을 사용하여 루트 CA에서 SSL/TLS 인증서를 발급합니다. 인증서를 ALB에 적용합니다. 관리형 갱신 기능을 사용하여 인증서를 자동으로 교체합니다.	AWS Certificate Manager(ACM)를 사용하여 SSL/TLS 인증서를 가져옵니다. 인증서를 ALB에 적용합니다. Amazon EventBridge(Amazon CloudWatch Events)를 사용하여 인증서가 만료될 때 알림을 보냅니다. 인증서를 수동으로 교체합니다.	D	
1493	Q159. 솔루션 설계자가 애플리케이션을 위한 새로운 Amazon CloudFront 배포를 생성하고 있습니다. 사용자가 제출한 정보 중 일부는 민감한 정보입니다. 애플리케이션은 HTTPS를 사용하지만 다른 보안 계층이 필요합니다. 민감한 정보는 전체 애플리케이션 스택에서 보호되어야 하며 정보에 대한 액세스는 특정 애플리케이션으로 제한되어야 합니다.\n\n솔루션 아키텍트는 어떤 조치를 취해야 합니까?	CloudFront 서명된 URL 구성	CloudFront 서명 쿠키를 구성합니다.	CloudFront 필드 수준 암호화 프로필을 구성합니다.	CloudFront를 구성하고 오리진 프로토콜 정책 설정을 HTTPS로 설정합니다. 뷰어 프로토콜 Policy 전용입니다.	C	
1494	Q161. 회사는 대규모 Amazon EC2 인스턴스 집합에서 애플리케이션을 실행합니다. 애플리케이션은 항목을 읽고 Amazon DynamoDB 테이블에 씁니다. DynamoDB 테이블의 크기는 계속 증가하지만 애플리케이션에는 지난 30일 동안의 데이터만 필요합니다. 회사는 비용과 개발 노력을 최소화하는 솔루션이 필요합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	AWS CloudFormation 템플릿을 사용하여 전체 솔루션을 배포합니다. 30일마다 CloudFormation 스택을 재배포하고 원래 스택을 삭제합니다.	AWS Marketplace에서 모니터링 애플리케이션을 실행하는 EC2 인스턴스를 사용합니다. Amazon DynamoDB Streams를 사용하여 테이블에 새 항목이 생성될 때 타임스탬프를 저장하도록 모니터링 애플리케이션을 구성합니다. EC2 인스턴스에서 실행되는 스크립트를 사용하여 30일보다 오래된 타임스탬프가 있는 항목을 삭제합니다.	테이블에 새 항목이 생성될 때 AWS Lambda 함수를 호출하도록 Amazon DynamoDB Streams를 구성합니다. 테이블에서 30일이 지난 항목을 삭제하도록 Lambda 함수를 구성합니다.	애플리케이션을 확장하여 현재 타임스탬프 값에 30일을 더한 값을 테이블에 생성되는 각각의 새 항목에 추가합니다. 속성을 TTL 속성으로 사용하도록 DynamoDB를 구성합니다.	D	
1495	Q162. 회사는 온프레미스에 컨테이너화된 애플리케이션을 구축하고 있으며 애플리케이션을 AWS로 이동하기로 결정합니다. 배포된 직후 애플리케이션의 사용자가 수천 명에 달합니다. 회사는 대규모 컨테이너 배포를 관리하는 방법을 확신하지 못합니다. 회사는 운영 오버헤드를 최소화하는 고가용성 아키텍처에 컨테이너화된 애플리케이션을 배포해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	Amazon Elastic Container Registry(Amazon ECR) 리포지토리에 컨테이너 이미지를 저장합니다. AWS Fargate 시작 유형의 Amazon Elastic Container Service(Amazon ECS) 클러스터를 사용하여 컨테이너를 실행합니다. 대상 추적을 사용하여 자동으로 확장 요청 시.	Amazon Elastic Container Registry(Amazon ECR) 리포지토리에 컨테이너 이미지를 저장합니다. Amazon EC2 시작 유형의 Amazon Elastic Container Service(Amazon ECS) 클러스터를 사용하여 컨테이너를 실행합니다. 목표 추적을 사용하여 수요에 따라 자동으로 확장합니다.	Amazon EC2 인스턴스에서 실행되는 리포지토리에 컨테이너 이미지를 저장합니다. 여러 가용 영역에 분산된 EC2 인스턴스에서 컨테이너를 실행합니다. Amazon CloudWatch에서 평균 CPU 사용률을 모니터링합니다. 필요에 따라 새 EC2 인스턴스를 시작합니다.	컨테이너 이미지가 포함된 Amazon EC2 Amazon 머신 이미지(AMI)를 생성합니다. 여러 가용 영역에 걸쳐 Auto Scaling 그룹에서 EC2 인스턴스를 시작합니다. 평균 CPU 사용률 임계값이 위반되면 Amazon CloudWatch 경보를 사용하여 EC2 인스턴스를 확장합니다.	A	
1496	Q163. 한 회사는 최근 AWS 계정의 Amazon EC2 인스턴스에서 다양한 새로운 워크로드를 출시했습니다. 회사는 인스턴스에 원격으로 안전하게 액세스하고 관리하는 전략을 수립해야 합니다. 회사는 기본 AWS 서비스와 함께 작동하고 AWS Well-Architected 프레임워크를 따르는 반복 가능한 프로세스를 구현해야 합니다.\n\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?	EC2 직렬 콘솔을 사용하여 관리를 위해 각 인스턴스의 터미널 인터페이스에 직접 액세스합니다.	각 기존 인스턴스와 새 인스턴스에 적절한 IAM 역할을 연결합니다. AWS Systems Manager Session Manager를 사용하여 원격 SSH 세션을 설정합니다.	관리 SSH 키 쌍을 만듭니다. 공개 키를 각 EC2 인스턴스에 로드합니다. 퍼블릭 서브넷에 배스천 호스트를 배포하여 각 인스턴스의 관리를 위한 터널을 제공합니다.	AWS Site-to-Site VPN 연결을 설정합니다. 관리자에게 로컬 온프레미스 머신을 사용하여 VPN 터널에서 SSH 키를 사용하여 인스턴스에 직접 연결하도록 지시합니다.	B	
1497	Q164. 회사는 1주일 동안 진행될 예정된 이벤트를 위해 특정 AWS 리전의 3개의 특정 가용 영역에서 보장된 Amazon EC2 용량이 필요합니다.\n\nEC2 용량을 보장하기 위해 회사는 무엇을 해야 합니까?	필요한 리전을 지정하는 예약 인스턴스를 구매합니다.	필요한 지역을 지정하는 온디맨드 용량 예약을 생성합니다.	필요한 리전과 3개의 가용 영역을 지정하는 예약 인스턴스를 구매합니다.	필요한 지역과 3개의 가용 영역을 지정하는 온디맨드 용량 예약을 생성합니다.	D	
1498	Q166. 응용 프로그램을 사용하면 회사 본사의 사용자가 제품 데이터에 액세스할 수 있습니다. 제품 데이터는 Amazon RDS MySQL DB 인스턴스에 저장됩니다. 운영 팀은 애플리케이션 성능 저하를 격리하고 쓰기 트래픽에서 읽기 트래픽을 분리하려고 합니다. 솔루션 설계자는 애플리케이션의 성능을 신속하게 최적화해야 합니다.\n\n솔루션 설계자는 무엇을 권장해야 합니까?	기존 데이터베이스를 다중 AZ 배포로 변경합니다. 기본 가용 영역에서 읽기 요청을 제공합니다.	기존 데이터베이스를 다중 AZ 배포로 변경합니다. 보조 가용 영역에서 읽기 요청을 제공합니다.	데이터베이스에 대한 읽기 전용 복제본을 생성합니다. 컴퓨팅 및 스토리지 리소스의 절반을 원본 데이터베이스로 사용하여 읽기 전용 복제본을 구성합니다.	데이터베이스에 대한 읽기 전용 복제본을 생성합니다. 원본 데이터베이스와 동일한 컴퓨팅 및 스토리지 리소스로 읽기 전용 복제본을 구성합니다.	D	
1499	Q167. 회사는 MySQL 데이터베이스로 구동되는 온프레미스 애플리케이션을 실행합니다. 이 회사는 애플리케이션의 탄력성과 가용성을 높이기 위해 애플리케이션을 AWS로 마이그레이션하고 있습니다. 현재 아키텍처는 정상 작동 시간 동안 데이터베이스에서 많은 읽기 활동을 보여줍니다. 회사의 개발 팀은 4시간마다 프로덕션 데이터베이스의 전체 내보내기를 가져와 준비 환경의 데이터베이스를 채웁니다. 이 기간 동안 사용자는 허용할 수 없는 애플리케이션 대기 시간을 경험합니다. 개발 팀은 절차가 완료될 때까지 스테이징 환경을 사용할 수 없습니다. 솔루션 설계자는 애플리케이션 지연 문제를 완화하는 대체 아키텍처를 권장해야 합니다. 또한 대체 아키텍처는 개발 팀이 지연 없이 스테이징 환경을 계속 사용할 수 있는 능력을 제공해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	프로덕션용 다중 AZ Aurora 복제본과 함께 Amazon Aurora MySQL을 사용합니다. mysqldump 유틸리티를 사용하는 백업 및 복원 프로세스를 구현하여 스테이징 데이터베이스를 채웁니다.	프로덕션용 다중 AZ Aurora 복제본과 함께 Amazon Aurora MySQL을 사용합니다. 데이터베이스 복제를 사용하여 요청 시 스테이징 데이터베이스를 생성합니다.	Mufti AZ 배포 및 프로덕션용 읽기 전용 복제본과 함께 MySQL용 Amazon RDS를 사용합니다. 스테이징 데이터베이스에 대기 인스턴스를 사용합니다.	다중 AZ 배포 및 프로덕션용 읽기 전용 복제본과 함께 MySQL용 Amazon RDS를 사용합니다. mysqldump 유틸리티를 사용하는 백업 및 복원 프로세스를 구현하여 스테이징 데이터베이스를 채웁니다.	B	
1500	Q168. 회사에서 온프레미스 애플리케이션을 AWS로 마이그레이션하려고 합니다. 애플리케이션은 수십 기가바이트에서 수백 테라바이트까지 다양한 크기의 출력 파일을 생성합니다. 애플리케이션 데이터는 표준 파일 시스템 구조로 저장되어야 합니다. 이 회사는 자동으로 확장되고 가용성이 높으며 운영 오버헤드가 최소화되는 솔루션을 원합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	Amazon Elastic Container Service(Amazon ECS)에서 컨테이너로 실행되도록 애플리케이션을 마이그레이션합니다. 스토리지에 Amazon S3를 사용합니다.	Amazon Elastic Kubernetes Service(Amazon EKS)에서 컨테이너로 실행되도록 애플리케이션을 마이그레이션합니다. 스토리지에 Amazon Elastic Block Store(Amazon EBS)를 사용합니다.	다중 AZ Auto Scaling 그룹의 Amazon EC2 인스턴스로 애플리케이션을 마이그레이션합니다. 스토리지에 Amazon Elastic File System(Amazon EFS)을 사용합니다.	다중 AZ Auto Scaling 그룹의 Amazon EC2 인스턴스로 애플리케이션을 마이그레이션합니다. 스토리지에 Amazon Elastic Block Store(Amazon EBS)를 사용합니다.	C	
1501	Q169. 회사의 애플리케이션은 데이터 수집을 위해 여러 SaaS(Software-as-a-Service) 소스와 통합됩니다. 이 회사는 Amazon EC2 인스턴스를 실행하여 데이터를 수신하고 분석을 위해 데이터를 Amazon S3 버킷에 업로드합니다. 데이터 수신 및 업로드하는 동일한 EC2 인스턴스도 업로드가 완료되면 사용자에게 알림을 보냅니다. 회사는 느린 응용 프로그램 성능을 발견했으며 가능한 한 성능을 개선하려고 합니다.\n\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?	EC2 인스턴스가 확장할 수 있도록 Auto Scaling 그룹을 생성합니다. S3 버킷에 대한 업로드가 완료되면 Amazon Simple Notification Service(Amazon SNS) 주제에 이벤트를 보내도록 S3 이벤트 알림을 구성합니다.	Amazon AppFlow 흐름을 생성하여 각 SaaS 소스와 S3 버킷 간에 데이터를 전송합니다. S3 버킷에 대한 업로드가 완료되면 Amazon Simple Notification Service(Amazon SNS) 주제에 이벤트를 보내도록 S3 이벤트 알림을 구성합니다.	각 SaaS 소스에 대해 Amazon EventBridge(Amazon CloudWatch Events) 규칙을 생성하여 출력 데이터를 보냅니다. S3 버킷을 규칙의 대상으로 구성합니다. S3 버킷에 업로드가 완료되면 이벤트를 전송하는 두 번째 EventBridge(CloudWatch 이벤트) 규칙을 생성합니다. Amazon Simple Notification Service(Amazon SNS) 주제를 두 번째 규칙의 대상으로 구성합니다.	EC2 인스턴스 대신 사용할 Docker 컨테이너를 생성합니다. Amazon Elastic Container Service(Amazon ECS)에서 컨테이너화된 애플리케이션을 호스팅합니다. S3 버킷에 업로드가 완료되면 Amazon Simple Notification Service(Amazon SNS) 주제에 이벤트를 보내도록 Amazon CloudWatch Container Insights를 구성합니다.	B	
1502	Q171. 회사에 두 개의 Amazon EC2 인스턴스에서 호스팅되는 동적 웹 애플리케이션이 있습니다. 회사에는 SSL 종료를 수행하기 위해 각 인스턴스에 있는 자체 SSL 인증서가 있습니다. 최근 트래픽이 증가하고 있으며 운영팀은 SSL 암호화 및 복호화로 인해 웹 서버의 컴퓨팅 용량이 최대 한도에 도달했다고 판단했습니다.\n\n솔루션 설계자는 애플리케이션의 성능을 향상시키기 위해 무엇을 해야 합니까?	AWS Certificate Manager(ACM)를 사용하여 새 SSL 인증서를 생성합니다. 각 인스턴스에 ACM 인증서를 설치합니다.	Amazon S3 버킷을 생성합니다. SSL 인증서를 S3 버킷으로 마이그레이션합니다. SSL 종료를 위해 버킷을 참조하도록 EC2 인스턴스를 구성합니다.	다른 EC2 인스턴스를 프록시 서버로 생성합니다. SSL 인증서를 새 인스턴스로 마이그레이션하고 기존 EC2 인스턴스에 직접 연결하도록 구성합니다.	SSL 인증서를 AWS Certificate Manager(ACM)로 가져옵니다. ACM의 SSL 인증서를 사용하는 HTTPS 리스너로 Application Load Balancer를 생성합니다.	D	
1503	Q172. 회사는 AWS 클라우드에서 애플리케이션을 구축하고 있습니다. 애플리케이션은 두 AWS 리전의 Amazon S3 버킷에 데이터를 저장합니다. 회사는 AWS Key Management Service(AWS KMS) 고객 관리형 키를 사용하여 S3 버킷에 저장된 모든 데이터를 암호화해야 합니다. 두 S3 버킷의 데이터는 동일한 KMS 키로 암호화 및 복호화해야 합니다. 데이터와 키는 두 지역 각각에 저장되어야 합니다.\n\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?	각 리전에서 S3 버킷을 생성합니다. Amazon S3 관리형 암호화 키(SSE-S3)와 함께 서버 측 암호화를 사용하도록 S3 버킷을 구성합니다. S3 버킷 간의 복제를 구성합니다.	고객 관리형 다중 지역 KMS 키를 생성합니다. 각 리전에서 S3 버킷을 생성합니다. S3 버킷 간의 복제를 구성합니다. 클라이언트 측 암호화와 함께 KMS 키를 사용하도록 애플리케이션을 구성합니다.	각 리전에서 고객 관리형 KMS 키와 S3 버킷을 생성합니다. Amazon S3 관리형 암호화 키(SSE-S3)와 함께 서버 측 암호화를 사용하도록 S3 버킷을 구성합니다. S3 버킷 간의 복제를 구성합니다.	각 리전에서 고객 관리형 KMS 키와 S3 버킷을 생성합니다. AWS KMS 키(SSE-KMS)로 서버 측 암호화를 사용하도록 S3 버킷을 구성합니다. S3 버킷 간의 복제를 구성합니다.	C	
1504	Q173. 회사에 Amazon EC2 인스턴스에서 실행되는 레거시 데이터 처리 애플리케이션이 있습니다. 데이터는 순차적으로 처리되지만 결과의 순서는 중요하지 않습니다. 애플리케이션은 모놀리식 아키텍처를 사용합니다. 회사가 증가하는 수요를 충족하도록 애플리케이션을 확장할 수 있는 유일한 방법은 인스턴스의 크기를 늘리는 것입니다. 이 회사의 개발자는 Amazon Elastic Container Service(Amazon ECS)에서 마이크로서비스 아키텍처를 사용하도록 애플리케이션을 다시 작성하기로 결정했습니다.\n\n솔루션 설계자는 마이크로서비스 간의 통신을 위해 무엇을 권장해야 합니까?	Amazon Simple Queue Service(Amazon SQS) 대기열을 생성합니다. 데이터 생산자에 코드를 추가하고 큐에 데이터를 보냅니다. 대기열의 데이터를 처리하기 위해 데이터 소비자에 코드를 추가합니다.	Amazon Simple Notification Service(Amazon SNS) 주제를 생성합니다. 데이터 생산자에 코드를 추가하고 주제에 알림을 게시합니다. 데이터 소비자에 코드를 추가하여 주제를 구독합니다.	메시지를 전달할 AWS Lambda 함수를 생성합니다. 데이터 생성자에 코드를 추가하여 데이터 객체로 Lambda 함수를 호출합니다. 데이터 소비자에게 코드를 추가하여 Lambda 함수에서 전달된 데이터 객체를 수신합니다.	Amazon DynamoDB 테이블을 생성합니다. DynamoDB 스트림을 활성화합니다. 데이터 생성자에 코드를 추가하여 테이블에 데이터를 삽입합니다. 데이터 소비자에 코드를 추가하여 DynamoDB Streams API를 사용하여 새 테이블 항목을 감지하고 데이터를 검색합니다.	A	
1505	Q175. 회사의 주문 시스템은 클라이언트에서 Amazon EC2 인스턴스로 요청을 보냅니다. EC2 인스턴스는 주문을 처리한 다음 Amazon RDS의 데이터베이스에 저장합니다. 사용자는 시스템이 실패하면 주문을 다시 처리해야 한다고 보고합니다. 회사는 시스템 중단이 발생할 경우 주문을 자동으로 처리할 수 있는 탄력적인 솔루션을 원합니다.\n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?	EC2 인스턴스를 Auto Scaling 그룹으로 이동합니다. Amazon Elastic Container Service(Amazon ECS) 작업을 대상으로 하는 Amazon EventBridge(Amazon CloudWatch Events) 규칙을 생성합니다.	EC2 인스턴스를 Application Load Balancer 뒤의 Auto Scaling 그룹으로 이동(ALB) ALB 엔드포인트에 메시지를 보내도록 주문 시스템을 업데이트합니다.	EC2 인스턴스를 Auto Scaling 그룹으로 이동합니다. Amazon Simple Queue Service(Amazon SQS) 대기열에 메시지를 보내도록 주문 시스템을 구성합니다. 대기열에서 메시지를 사용하도록 EC2 인스턴스를 구성합니다.	Amazon Simple Notification Service(Amazon SNS) 주제를 생성합니다. AWS Lambda 함수를 생성하고 SNS 주제에 대한 함수를 구독합니다. SNS 주제에 메시지를 보내도록 주문 시스템을 구성합니다. AWS Systems Manager Run Command를 사용하여 메시지를 처리하도록 EC2 인스턴스에 명령을 보냅니다.	C	
1506	Q176. 한 엔터테인먼트 회사에서 Amazon DynamoDB를 사용하여 미디어 메타데이터를 저장하고 있습니다. 응용 프로그램이 집중적으로 읽혀지고 지연이 발생합니다. 회사에는 추가 운영 오버헤드를 처리할 직원이 없으며 애플리케이션을 재구성하지 않고 DynamoDB의 성능 효율성을 개선해야 합니다.\n\n솔루션 설계자는 이 요구 사항을 충족하기 위해 무엇을 권장해야 합니까?	Redis용 Amazon ElastiCache를 사용합니다.	Amazon DynamoDB 가속기(DAX)를 사용합니다.	DynamoDB 전역 테이블을 사용하여 데이터를 복제합니다.	자동 검색이 활성화된 Memcached용 Amazon ElastiCache를 사용합니다.	B	
1507	Q177. 개발 팀은 다른 팀이 액세스할 웹사이트를 호스팅해야 합니다. 웹사이트 콘텐츠는 HTML, CSS, 클라이언트 측 JavaScript 및 이미지로 구성됩니다.\n\n웹 사이트 호스팅에 가장 비용 효율적인 방법은 무엇입니까?	웹 사이트를 컨테이너화하고 AWS Fargate에서 호스팅합니다.	Amazon S3 버킷을 생성하고 거기에서 웹 사이트를 호스팅합니다.	Amazon EC2 인스턴스에 웹 서버를 배포하여 웹 사이트를 호스팅합니다.	Express.js 프레임워크를 사용하는 AWS Lambda 대상으로 Application Load Balancer를 구성합니다.	B	
1508	Q178. 회사에 Amazon EC2 인스턴스에서 실행되고 Amazon Aurora 데이터베이스를 사용하는 애플리케이션이 있습니다. EC2 인스턴스는 파일에 로컬로 저장된 사용자 이름과 암호를 사용하여 데이터베이스에 연결합니다. 회사는 자격 증명 관리의 운영 오버헤드를 최소화하려고 합니다.\n\n솔루션 설계자는 이 목표를 달성하기 위해 무엇을 해야 합니까?	AWS Secrets Manager를 사용합니다. 자동 회전을 켭니다.	AWS Systems Manager Parameter Store를 사용합니다. 자동 회전을 켭니다.	AWS Key Management Service(AWS KMS) 암호화 키로 암호화된 객체를 저장할 Amazon S3 버킷을 생성합니다. 자격 증명 파일을 S3 버킷으로 마이그레이션합니다. 애플리케이션이 S3 버킷을 가리키도록 합니다.	각 EC2 인스턴스에 대해 암호화된 Amazon Elastic Block Store(Amazon EBS) 볼륨을 생성합니다. 새 EBS 볼륨을 각 EC2 인스턴스에 연결합니다. 자격 증명 파일을 새 EBS 볼륨으로 마이그레이션합니다. 애플리케이션이 새 EBS 볼륨을 가리키도록 합니다.	A	
1509	Q179. 회사는 AWS 클라우드에서 호스팅되는 미디어 애플리케이션을 위한 공유 스토리지 솔루션을 구현하고 있습니다. 회사는 SMB 클라이언트를 사용하여 데이터에 액세스할 수 있는 기능이 필요합니다. 솔루션은 완전히 관리되어야 합니다.\n\n이러한 요구 사항을 충족하는 AWS 솔루션은 무엇입니까?	AWS Storage Gateway 볼륨 게이트웨이를 생성합니다. 필요한 클라이언트 프로토콜을 사용하는 파일 공유 만들기 응용 프로그램 서버를 타일 공유에 연결합니다.	AWS Storage Gateway 테이프 게이트웨이 생성 구성(Amazon S3을 사용하는 유인원 테이프 게이트웨이에 애플리케이션 서버 연결	Amazon EC2 Windows 인스턴스 생성 인스턴스에 Windows 파일 공유 역할을 설치 및 구성합니다. 응용 프로그램 서버를 파일 공유에 연결합니다.	Windows용 Amazon FSx 파일 서버 타일 시스템 생성 Fie 시스템을 오리진 서버에 연결합니다. 애플리케이션 서버를 타일 시스템에 연결합니다.	D	
1510	Q180. 회사는 AWS에서 전자 상거래 웹 애플리케이션을 구축하고 있습니다. 애플리케이션은 처리할 Amazon API Gateway REST API에 새 주문에 대한 정보를 보냅니다. 회사는 주문이 접수된 순서대로 처리되기를 원합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	API Gateway 통합을 사용하여 애플리케이션이 주문을 수신할 때 Amazon Simple Notification Service(Amazon SNS) 주제에 메시지를 게시합니다. AWS Lambda 함수를 주제에 구독하여 처리를 수행합니다.	API Gateway 통합을 사용하여 애플리케이션이 주문을 수신할 때 Amazon Simple Queue Service(Amazon SQS) FIFO 대기열에 메시지를 보냅니다. 처리를 위해 AWS Lambda 함수를 호출하도록 SQS FIFO 대기열을 구성합니다.	API Gateway 권한 부여자를 사용하여 애플리케이션이 주문을 처리하는 동안 모든 요청을 차단합니다.	API Gateway 통합을 사용하여 애플리케이션이 주문을 수신할 때 Amazon Simple Queue Service(Amazon SQS) 표준 대기열에 메시지를 보냅니다. 처리를 위해 AWS Lambda 함수를 호출하도록 SQS 표준 대기열을 구성합니다.	B	
1511	Q181. 회사는 회사의 기본 웹 사이트를 사용할 수 없는 경우 사용자를 백업 정적 오류 페이지로 안내하려고 합니다. 기본 웹 사이트의 DNS 레코드는 Amazon Route 53에서 호스팅됩니다. 도메인이 ALB(Application Load Balancer)를 가리키고 있습니다. 회사는 변경 사항과 인프라 오버헤드를 최소화하는 솔루션이 필요합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	지연 라우팅 정책을 사용하도록 Route 53 레코드를 업데이트합니다. 트래픽이 가장 응답성이 뛰어난 엔드포인트로 전송되도록 Amazon S3 버킷에서 호스팅되는 정적 오류 페이지를 레코드에 추가합니다.	Route 53 활성-수동 장애 조치 구성을 설정합니다. Route 53 상태 확인에서 ALB 엔드포인트가 비정상임을 확인하면 Amazon S3 버킷 내에서 호스팅되는 정적 오류 페이지로 트래픽을 보냅니다.	ALB와 정적 오류 페이지를 호스팅하는 Amazon EC2 인스턴스를 엔드포인트로 사용하여 Route 53 활성-활성 구성을 설정합니다. Route 53은 ALB에 대한 상태 확인이 실패한 경우에만 인스턴스에 요청을 보냅니다.	다중값 응답 라우팅 정책을 사용하도록 Route 53 레코드를 업데이트합니다. 상태 확인을 만듭니다. 상태 확인을 통과하면 웹사이트로 직접 트래픽을 보냅니다. 상태 확인을 통과하지 못한 경우 Amazon S3에서 호스팅되는 정적 오류로 트래픽을 보냅니다.	B	
1512	Q182. 한 회사는 Amazon DynamoDB를 사용하여 고객 정보를 저장하는 쇼핑 애플리케이션을 실행합니다. 데이터 손상의 경우 솔루션 설계자는 15분의 RPO(복구 시점 목표)와 1시간의 RTO(복구 시간 목표)를 충족하는 솔루션을 설계해야 합니다.\n\n이러한 요구 사항을 충족하기 위해 솔루션 설계자는 무엇을 권장해야 합니까?	DynamoDB 전역 테이블을 구성합니다. RPO 복구의 경우 애플리케이션이 다른 AWS 리전을 가리키도록 합니다.	DynamoDB 지정 시간 복구를 구성합니다. RPO 복구의 경우 원하는 시점으로 복원합니다.	DynamoDB 데이터를 매일 Amazon S3 Glacier로 내보냅니다. RPO 복구의 경우 S3 Glacier에서 DynamoDB로 데이터를 가져옵니다.	DynamoDB 테이블에 대한 Amazon Elastic Block Store(Amazon EBS) 스냅샷을 15분마다 예약합니다. RPO 복구의 경우 EBS 스냅샷을 사용하여 DynamoDB 테이블을 복원합니다.	B	
1513	Q183. 회사는 애플리케이션에 대한 실시간 데이터 수집 아키텍처를 구성해야 합니다. 회사에는 데이터가 스트리밍될 때 데이터를 변환하는 프로세스인 API와 데이터를 위한 스토리지 솔루션이 필요합니다.\n\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?	Amazon EC2 인스턴스를 배포하여 Amazon Kinesis 데이터 스트림으로 데이터를 전송하는 API를 호스팅합니다. Kinesis 데이터 스트림을 데이터 원본으로 사용하는 Amazon Kinesis Data Firehose 전송 스트림을 생성합니다. AWS Lambda 함수를 사용하여 데이터를 변환합니다. Kinesis Data Firehose 전송 스트림을 사용하여 데이터를 Amazon S3로 보냅니다.	Amazon EC2 인스턴스를 배포하여 AWS Glue에 데이터를 전송하는 API를 호스팅합니다. EC2 인스턴스에서 소스/대상 확인을 중지합니다. AWS Glue를 사용하여 데이터를 변환하고 데이터를 Amazon S3로 보냅니다.	Amazon Kinesis 데이터 스트림으로 데이터를 보내도록 Amazon API Gateway API를 구성합니다. Kinesis 데이터 스트림을 데이터 원본으로 사용하는 Amazon Kinesis Data Firehose 전송 스트림을 생성합니다. AWS Lambda 함수를 사용하여 데이터를 변환합니다. Kinesis Data Firehose 전송 스트림을 사용하여 데이터를 Amazon S3로 보냅니다.	데이터를 AWS Glue로 보내도록 Amazon API Gateway API를 구성합니다. AWS Lambda 함수를 사용하여 데이터를 변환합니다. AWS Glue를 사용하여 데이터를 Amazon S3로 보냅니다.	C	
1514	Q184. 한 회사에서 애플리케이션을 서버리스 솔루션으로 이동하려고 합니다. 서버리스 솔루션은 SQL을 사용하여 기존 및 신규 데이터를 분석해야 합니다. 회사는 데이터를 Amazon S3 버킷에 저장합니다. 데이터는 암호화가 필요하며 다른 AWS 리전에 복제해야 합니다.\n\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?	새 S3 버킷을 생성합니다. 데이터를 새 S3 버킷에 로드합니다. S3 교차 리전 복제(CRR)를 사용하여 암호화된 객체를 다른 리전의 S3 버킷에 복제합니다. AWS KMS 다중 리전 key(SSE-KMS)로 서버 측 암호화를 사용합니다. Amazon Athena를 사용하여 데이터를 쿼리합니다.	새 S3 버킷을 생성합니다. 데이터를 새 S3 버킷에 로드합니다. S3 교차 리전 복제(CRR)를 사용하여 암호화된 객체를 다른 리전의 S3 버킷에 복제합니다. AWS KMS 다중 리전 키(SSE-KMS)로 서버 측 암호화를 사용합니다. Amazon RDS를 사용하여 데이터를 쿼리합니다.	기존 S3 버킷에 데이터를 로드합니다. S3 교차 리전 복제(CRR)를 사용하여 암호화된 객체를 다른 리전의 S3 버킷에 복제합니다. Amazon S3 관리형 암호화 키(SSE-S3)로 서버 측 암호화를 사용합니다. Amazon Athena를 사용하여 데이터를 쿼리합니다.	기존 S3 버킷에 데이터를 로드합니다. S3 교차 리전 복제(CRR)를 사용하여 암호화된 객체를 다른 리전의 S3 버킷에 복제합니다. Amazon S3 관리형 암호화 키(SSE-S3)로 서버 측 암호화를 사용합니다. Amazon RDS를 사용하여 데이터를 쿼리합니다.	A	
1515	Q185. 솔루션 설계자는 회사가 온프레미스 인프라를 AWS로 확장하기 위해 새로운 하이브리드 아키텍처를 설계하고 있습니다. 회사는 AWS 리전에 대해 일관되게 짧은 지연 시간과 함께 고가용성 연결이 필요합니다. 회사는 비용을 최소화해야 하며 기본 연결이 실패할 경우 더 느린 트래픽을 기꺼이 받아들입니다.\n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?	리전에 대한 AWS Direct Connect 연결을 프로비저닝합니다. 기본 Direct Connect 연결이 실패하는 경우 백업으로 VPN 연결을 프로비저닝합니다.	개인 연결을 위해 지역에 VPN 터널 연결을 프로비저닝합니다. 기본 VPN 연결이 실패할 경우 개인 연결 및 백업으로 두 번째 VPN 터널을 프로비저닝합니다.	리전에 대한 AWS Direct Connect 연결을 프로비저닝합니다. 기본 Direct Connect 연결이 실패하는 경우 백업과 동일한 지역에 두 번째 Direct Connect 연결을 프로비저닝합니다.	리전에 대한 AWS Direct Connect 연결을 프로비저닝합니다. AWS CLI에서 Direct Connect 장애 조치 속성을 사용하여 기본 Direct Connect 연결이 실패할 경우 백업 연결을 자동으로 생성합니다.	A	
1516	Q186. 회사에서 새로운 서버리스 워크로드를 배포할 준비를 하고 있습니다. 솔루션 설계자는 최소 권한 원칙을 사용하여 AWS Lambda 함수를 실행하는 데 사용할 권한을 구성해야 합니다. Amazon EventBridge(Amazon CloudWatch Events) 규칙이 함수를 호출합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	lambda:InvokeFunction을 작업으로, *를 보안 주체로 사용하여 함수에 실행 역할을 추가합니다.	Lambda:InvokeFunction을 작업으로, Service:amazonaws.com을 보안 주체로 사용하여 함수에 실행 역할을 추가합니다.	lambda:'*를 작업으로, Service:events.amazonaws.com을 보안 주체로 사용하여 리소스 기반 정책을 함수에 추가합니다.	lambda:InvokeFunction을 작업으로, Service:events.amazonaws.com을 보안 주체로 사용하여 리소스 기반 정책을 함수에 추가합니다.	D	
1517	Q187. 회사에 소프트웨어 엔지니어링에 사용되는 AWS 계정이 있습니다. AWS 계정은 한 쌍의 AWS Direct Connect 연결을 통해 회사의 온프레미스 데이터 센터에 액세스할 수 있습니다. 모든 비 VPC 트래픽은 가상 프라이빗 게이트웨이로 라우팅됩니다. 개발 팀은 최근 콘솔을 통해 AWS Lambda 함수를 생성했습니다. 개발 팀은 해당 기능이 회사 데이터 센터의 프라이빗 서브넷에서 실행되는 데이터베이스에 액세스할 수 있도록 허용해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	적절한 보안 그룹이 있는 VPC에서 실행되도록 Lambda 함수를 구성합니다.	AWS에서 데이터 센터로 VPN 연결을 설정합니다. VPN을 통해 Lambda 함수의 트래픽을 라우팅합니다.	Lambda 함수가 Direct Connect를 통해 온프레미스 데이터 센터에 액세스할 수 있도록 VPC의 라우팅 테이블을 업데이트합니다.	탄력적 IP 주소를 생성합니다. 탄력적 네트워크 인터페이스 없이 탄력적 IP 주소를 통해 트래픽을 보내도록 Lambda 함수를 구성합니다.	A	
1518	Q188. 회사는 Amazon Route 53에 도메인 이름을 등록했습니다. 이 회사는 ca-central-1 리전의 Amazon API Gateway를 백엔드 마이크로서비스 API의 공용 인터페이스로 사용합니다. 타사 서비스는 API를 안전하게 사용합니다. 회사는 타사 서비스에서 HTTPS를 사용할 수 있도록 회사의 도메인 이름 및 해당 인증서로 API 게이트웨이 URL을 설계하려고 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	API Gateway에서 Name="Endpoint-URL" 및 Value="Company Domain Name"으로 단계 변수를 생성하여 기본 URL을 덮어씁니다. 회사의 도메인 이름과 연결된 공인 인증서를 AWS Certificate Manager(ACM)로 가져옵니다.	회사의 도메인 이름으로 Route 53 DNS 레코드를 생성합니다. 별칭 레코드가 리전 API 게이트웨이 단계 엔드포인트를 가리키도록 합니다. 회사의 도메인 이름과 연결된 공인 인증서를 us-east-1 리전의 AWS Certificate Manager(ACM)로 가져옵니다.	리전 API 게이트웨이 엔드포인트를 생성합니다. API Gateway 엔드포인트를 회사의 도메인 이름과 연결합니다. 회사의 도메인 이름과 연결된 공인 인증서를 동일한 리전의 AWS Certificate Manager(ACM)로 가져옵니다. API Gateway 엔드포인트에 인증서를 연결합니다. API Gateway 엔드포인트로 트래픽을 라우팅하도록 Route 53을 구성합니다.	리전 API 게이트웨이 엔드포인트를 생성합니다. API Gateway 엔드포인트를 회사의 도메인 이름과 연결합니다. 회사의 도메인 이름과 연결된 공인 인증서를 us-east-1 리전의 AWS Certificate Manager(ACM)로 가져옵니다. API Gateway API에 인증서를 연결합니다. 회사의 도메인 이름으로 Route 53 DNS 레코드를 생성합니다. A 레코드가 회사의 도메인 이름을 가리키도록 합니다.	C	
1519	Q189. 애플리케이션은 VPC의 Amazon EC2 인스턴스에서 실행됩니다. 애플리케이션은 Amazon S3 버킷에 저장된 로그를 처리합니다. EC2 인스턴스는 인터넷 연결 없이 S3 버킷에 액세스해야 합니다.\n\nAmazon S3에 대한 프라이빗 네트워크 연결을 제공하는 솔루션은 무엇입니까?	S3 버킷에 대한 게이트웨이 VPC 엔드포인트를 생성합니다.	Amazon CloudWatch Logs로 로그를 스트리밍합니다. 로그를 S3 버킷으로 내보냅니다.	Amazon EC2에 인스턴스 프로파일을 생성하여 S3 액세스를 허용합니다.	S3 엔드포인트에 액세스하기 위한 프라이빗 링크가 있는 Amazon API Gateway API를 생성합니다.	A	
1520	Q190. 회사는 AWS에서 고성능 컴퓨팅(HPC) 워크로드를 실행합니다. 워크로드에는 긴밀하게 연결된 노드 간 통신을 통해 대기 시간이 짧은 네트워크 성능과 높은 네트워크 처리량이 필요했습니다. Amazon EC2 인스턴스는 컴퓨팅 및 스토리지 용량에 적합한 크기이며 기본 옵션을 사용하여 시작됩니다.\n\n솔루션 설계자는 워크로드의 성능을 개선하기 위해 무엇을 제안해야 합니까?	Amazon EC2 인스턴스를 시작하는 동안 클러스터 배치 그룹을 선택하십시오.	Amazon EC2 인스턴스를 시작하는 동안 전용 인스턴스 테넌시를 선택합니다.	Amazon EC2 인스턴스를 시작하는 동안 Elastic Inference 액셀러레이터를 선택합니다.	Amazon EC2 인스턴스를 시작하는 동안 필요한 용량 예약을 선택합니다.	A	
1521	Q191. 회사에서 새로운 동적 주문 웹사이트를 구축하고 있습니다. 회사는 서버 유지 관리 및 패치를 최소화하기를 원합니다. 웹 사이트는 가용성이 높아야 하며 사용자 요구의 변화에 맞게 최대한 빨리 읽기 및 쓰기 용량을 확장해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	Amazon S3에서 정적 콘텐츠 호스팅 Amazon API Gateway 및 AWS Lambda를 사용하여 동적 콘텐츠 호스팅 데이터베이스용 온디맨드 용량과 함께 Amazon DynamoDB 사용 웹 사이트 콘텐츠를 제공하도록 Amazon CloudFront를 구성합니다.	Amazon S3에서 정적 콘텐츠 호스팅 Amazon API Gateway 및 AWS Lambda를 사용하여 동적 콘텐츠 호스팅. 데이터베이스에 대해 Aurora Auto Scaling과 함께 Amazon Aurora 사용 웹 사이트 콘텐츠를 제공하도록 Amazon CloudFront를 구성합니다.	Amazon EC2 인스턴스에서 웹사이트 콘텐츠 호스팅 EC2 인스턴스를 확장할 Auto Scaling 그룹을 생성합니다. Application Load Balancer를 사용하여 트래픽을 분산합니다. 데이터베이스에 대해 프로비저닝된 쓰기 용량으로 Amazon DynamoDB를 사용합니다.	Amazon EC2 인스턴스의 웹 사이트 콘텐츠 호스팅 EC2 인스턴스를 확장하는 Auto Scaling 그룹 생성 Application Load Balancer를 사용하여 트래픽을 분산합니다. 데이터베이스에 대해 Aurora Auto Scaling과 함께 Amazon Aurora를 사용합니다.	A	
1522	Q192. 회사는 UDP 연결을 사용하는 VoIP(Voice over Internet Protocol) 서비스를 제공합니다. 이 서비스는 Auto Scaling 그룹에서 실행되는 Amazon EC2 인스턴스로 구성됩니다. 회사는 여러 AWS 리전에 배포하고 있습니다. 회사는 지연 시간이 가장 짧은 리전으로 사용자를 라우팅해야 합니다. 이 회사는 또한 지역 간 자동 장애 조치가 필요합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	NLB(Network Load Balancer) 및 연결된 대상 그룹을 배포합니다. 대상 그룹을 Auto Scaling 그룹과 연결합니다. 각 리전에서 NLB를 AWS Global Accelerator 엔드포인트로 사용합니다.	ALB(Application Load Balancer) 및 연결된 대상 그룹을 배포합니다. 대상 그룹을 Auto Scaling 그룹과 연결합니다. 각 리전에서 ALB를 AWS Global Accelerator 엔드포인트로 사용합니다.	NLB(Network Load Balancer) 및 연결된 대상 그룹을 배포합니다. 대상 그룹을 Auto Scaling 그룹과 연결합니다. 각 NLB의 별칭을 가리키는 Amazon Route 53 지연 시간 레코드를 생성합니다. 지연 시간 레코드를 오리진으로 사용하는 Amazon CloudFront 배포를 생성합니다.	ALB(Application Load Balancer) 및 연결된 대상 그룹을 배포합니다. 대상 그룹을 Auto Scaling 그룹과 연결합니다. 각 ALB의 별칭을 가리키는 Amazon Route 53 가중치 레코드를 생성합니다. 가중 레코드를 오리진으로 사용하는 Amazon CloudFront 배포를 배포합니다.	A	
1523	Q193. 회사에서 Amazon 머신 이미지(AMI)를 관리하려고 합니다. 회사는 현재 AMI가 생성된 동일한 AWS 리전에 AMI를 복사하고 있습니다. 회사는 AWS API 호출을 캡처하고 회사 계정 내에서 Amazon EC2 CreateImage API 작업이 호출될 때마다 경고를 보내는 애플리케이션을 설계해야 합니다.\n\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?	AWS CloudTrail 로그를 쿼리하고 CreateImage API 호출이 감지될 때 알림을 보내는 AWS Lambda 함수를 생성합니다.	업데이트된 로그가 Amazon S3로 전송될 때 발생하는 Amazon Simple Notification Service(Amazon SNS) 알림으로 AWS CloudTrail을 구성합니다. Amazon Athena를 사용하여 새 테이블을 생성하고 API 호출이 감지되면 CreateImage에서 쿼리합니다.	CreateImage API 호출에 대한 Amazon EventBridge(Amazon CloudWatch Events) 규칙을 생성합니다. CreateImage API 호출이 감지될 때 알림을 보내도록 대상을 Amazon Simple Notification Service(Amazon SNS) 주제로 구성합니다.	Amazon Simple Queue Service(Amazon SQS) FIFO 대기열을 AWS CloudTrail 로그의 대상으로 구성합니다. AWS Lambda 함수를 생성하여 CreateImage API 호출이 감지될 때 Amazon Simple Notification Service(Amazon SNS) 주제에 알림을 보냅니다.	C	
1524	Q194. 솔루션 아키텍트가 다가오는 뮤지컬 이벤트를 위해 웹사이트를 최적화하고 있습니다. 공연의 비디오는 실시간으로 스트리밍된 다음 주문형으로 제공될 것입니다. 이 행사는 전 세계 온라인 관객을 유치할 것으로 예상됩니다.\n\n실시간 스트리밍과 주문형 스트리밍 모두의 성능을 향상시키는 서비스는 무엇입니까?	Amazon CloudFront	AWS Global Accelerator	Amazon Route 53	Amazon S3 Transfer Acceleration	A	
1525	Q195. 회사의 웹 애플리케이션이 Application Load Balancer 뒤의 Amazon EC2 인스턴스에서 실행되고 있습니다. 이 회사는 최근 정책을 변경하여 이제 특정 국가에서만 애플리케이션에 액세스할 수 있도록 했습니다.\n\n이 요구 사항을 충족하는 구성은 무엇입니까?	EC2 인스턴스에 대한 보안 그룹을 구성합니다.	Application Load Balancer에서 보안 그룹을 구성합니다.	VPC의 Application Load Balancer에서 AWS WAF를 구성합니다.	EC2 인스턴스가 포함된 서브넷에 대해 네트워크 ACL을 구성합니다.	C	
1526	Q196. 한 회사는 사용자가 사진을 업로드하고 이미지에 액자를 추가할 수 있는 이미지 분석 응용 프로그램을 만들었습니다. 사용자는 이미지와 메타데이터를 업로드하여 이미지에 추가할 사진 프레임을 나타냅니다. 애플리케이션은 단일 Amazon EC2 인스턴스와 Amazon DynamoDB를 사용하여 메타데이터를 저장합니다. 응용 프로그램이 대중화되고 사용자 수가 증가하고 있습니다. 회사는 동시 접속자 수가 시간과 요일에 따라 크게 달라질 것으로 예상하고 있습니다. 회사는 증가하는 사용자 기반의 요구 사항을 충족하도록 애플리케이션을 확장할 수 있는지 확인해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	AWS Lambda를 사용하여 사진을 처리합니다. 사진과 메타데이터를 DynamoDB에 저장합니다.	Amazon Kinesis Data Firehose를 사용하여 사진을 처리하고 사진과 메타데이터를 저장합니다.	AWS Lambda를 사용하여 사진을 처리합니다. Amazon S3에 사진을 저장합니다. DynamoDB를 유지하여 메타데이터를 저장합니다.	EC2 인스턴스 수를 3개로 늘립니다. 프로비저닝된 IOPS SSD(io2) Amazon Elastic Block Store(Amazon EBS) 볼륨을 사용하여 사진과 메타데이터를 저장합니다.	C	
1527	Q197. 회사에서 인기 있는 노래 클립으로 만든 벨소리를 판매합니다. 벨소리가 포함된 파일은 Amazon S3 Standard에 저장되며 크기는 최소 128KB입니다. 이 회사에는 수백만 개의 파일이 있지만 90일보다 오래된 벨소리의 경우 다운로드가 드뭅니다. 회사는 가장 많이 액세스하는 파일을 사용자가 쉽게 사용할 수 있도록 유지하면서 스토리지 비용을 절약해야 합니다.\n\n이러한 요구 사항을 가장 비용 효율적으로 충족하기 위해 회사는 어떤 조치를 취해야 합니까?	객체의 초기 스토리지 계층에 대해 S3 Standard-Infrequent Access(S3 Standard-IA) 스토리지를 구성합니다.	파일을 S3 Intelligent-Tiering으로 이동하고 90일 후에 객체를 더 저렴한 스토리지 계층으로 이동하도록 구성합니다.	객체를 관리하도록 S3 인벤토리를 구성하고 90일 후에 객체를 S3 Standard-Infrequent Access(S3 Standard-IA)로 이동합니다.	90일 후에 객체를 S3 Standard에서 S3 Standard-Infrequent Access(S3 Standard-IA)로 이동하는 S3 수명 주기 정책을 구현합니다.	D	
1528	Q198. 회사는 온프레미스 데이터 센터의 Kubernetes 클러스터에서 컨테이너화된 애플리케이션을 실행합니다. 회사는 데이터 저장을 위해 MongoDB 데이터베이스를 사용하고 있습니다. 회사는 이러한 환경 중 일부를 AWS로 마이그레이션하려고 하지만 현재로서는 코드 변경이나 배포 방법 변경이 불가능합니다. 회사는 운영 오버헤드를 최소화하는 솔루션이 필요합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	컴퓨팅용 Amazon EC2 작업자 노드와 데이터 저장용 EC2의 MongoDB와 함께 Amazon Elastic Container Service(Amazon ECS)를 사용합니다.	컴퓨팅용 AWS Fargate 및 데이터 저장용 Amazon DynamoDB와 함께 Amazon Elastic Container Service(Amazon ECS)를 사용합니다.	컴퓨팅용 Amazon EC2 작업자 노드 및 데이터 저장용 Amazon DynamoDB와 함께 Amazon Elastic Kubernetes Service(Amazon EKS)를 사용합니다.	컴퓨팅용 AWS Fargate 및 데이터 저장용 Amazon DocumentDB(MongoDB 호환 가능)와 함께 Amazon Elastic Kubernetes Service(Amazon EKS)를 사용합니다.	D	
1529	Q199. 의료 기록 회사는 Amazon EC2 인스턴스에서 애플리케이션을 호스팅하고 있습니다. 애플리케이션은 Amazon S3에 저장된 고객 데이터 파일을 처리합니다. EC2 인스턴스는 퍼블릭 서브넷에서 호스팅됩니다. EC2 인스턴스는 인터넷을 통해 Amazon S3에 액세스하지만 다른 네트워크 액세스는 필요하지 않습니다. 새로운 요구 사항은 파일 전송을 위한 네트워크 트래픽이 인터넷을 통해 전송되지 않고 개인 경로를 사용하도록 규정하고 있습니다.\n\n솔루션 설계자가 이 요구 사항을 충족하기 위해 권장해야 하는 네트워크 아키텍처 변경 사항은 무엇입니까?	NAT 게이트웨이를 생성합니다. NAT 게이트웨이를 통해 Amazon S3로 트래픽을 전송하도록 퍼블릭 서브넷에 대한 라우팅 테이블을 구성합니다.	S3 접두사 목록에 대한 트래픽만 허용되도록 아웃바운드 트래픽을 제한하도록 EC2 인스턴스에 대한 보안 그룹을 구성합니다.	EC2 인스턴스를 프라이빗 서브넷으로 이동합니다. Amazon S3용 VPC 엔드포인트를 생성하고 엔드포인트를 프라이빗 서브넷의 라우팅 테이블에 연결합니다.	VPC에서 인터넷 게이트웨이를 제거합니다. AWS Direct Connect 연결을 설정하고 Direct Connect 연결을 통해 Amazon S3로 트래픽을 라우팅합니다.	C	
1530	Q200. 회사에 많은 Amazon EC2 인스턴스를 사용하여 완료하는 매우 동적인 배치 처리 작업이 있습니다. 작업은 본질적으로 상태 비저장이며 부정적인 영향 없이 주어진 시간에 시작 및 중지할 수 있으며 일반적으로 완료하는 데 총 60분 이상이 걸립니다. 회사는 솔루션 설계자에게 작업 요구 사항을 충족하는 확장 가능하고 비용 효율적인 솔루션을 설계하도록 요청했습니다.\n\n솔루션 설계자는 무엇을 권장해야 합니까?	EC2 스팟 인스턴스를 구현합니다.	EC2 예약 인스턴스 구매.	EC2 온디맨드 인스턴스를 구현합니다.	AWS Lambda에서 처리를 구현합니다.	A	
1531	Q201. 회사는 확장성 및 가용성에 대한 요구 사항을 충족하기 위해 컨테이너에서 중요한 응용 프로그램을 실행하려고 합니다. 회사는 중요한 응용 프로그램의 유지 관리에 집중하는 것을 선호합니다. 회사는 컨테이너화된 워크로드를 실행하는 기본 인프라의 프로비저닝 및 관리에 대한 책임을 원하지 않습니다.\n\n솔루션 설계자는 이러한 요구 사항을 충족하기 위해 무엇을 해야 합니까?	Amazon EC2 인스턴스를 사용하고 인스턴스에 Docker를 설치합니다.	Amazon EC2 작업자 노드에서 Amazon Elastic Container Service(Amazon ECS)를 사용합니다.	AWS Fargate에서 Amazon Elastic Container Service(Amazon ECS)를 사용합니다.	Amazon Elastic Container Service(Amazon ECS)에 최적화된 Amazon 머신 이미지(AMI)의 Amazon EC2 인스턴스를 사용합니다.	C	
1532	Q202. 애플리케이션은 여러 가용 영역의 Amazon EC2 인스턴스에서 실행됩니다. 인스턴스는 Application Load Balancer 뒤의 Amazon EC2 Auto Scaling 그룹에서 실행됩니다. 애플리케이션은 EC2 인스턴스의 CPU 사용률이 40% 또는 거의 40%일 때 가장 잘 수행됩니다.\n\n솔루션 설계자는 그룹의 모든 인스턴스에서 원하는 성능을 유지하기 위해 무엇을 해야 합니까?	Auto Scaling 그룹을 동적으로 확장하려면 간단한 확장 정책을 사용합니다.	대상 추적 정책을 사용하여 Auto Scaling 그룹을 동적으로 확장합니다.	AWS Lambda 함수를 사용하여 원하는 Auto Scaling 그룹 용량을 업데이트합니다.	예약된 조정 작업을 사용하여 Auto Scaling 그룹을 확장 및 축소합니다.	B	
1533	Q203. 회사는 응용 프로그램의 데이터를 암호화해야 하는 개발자를 지원하기 위해 확장 가능한 키 관리 인프라를 구축하려고 합니다.\n\n솔루션 설계자는 운영 부담을 줄이기 위해 무엇을 해야 합니까?	MFA(다단계 인증)를 사용하여 암호화 키를 보호합니다.	AWS Key Management Service(AWS KMS)를 사용하여 암호화 키를 보호합니다.	AWS Certificate Manager(ACM)를 사용하여 암호화 키를 생성, 저장 및 할당합니다.	IAM 정책을 사용하여 암호화 키를 보호할 수 있는 액세스 권한이 있는 사용자의 범위를 제한합니다.	B	
1534	Q206. 회사는 Amazon EC2 인스턴스 및 Amazon RDS에서 2계층 애플리케이션을 호스팅합니다. 응용 프로그램의 요구 사항은 시간에 따라 다릅니다. 업무 시간 이후와 주말에는 부하가 최소화됩니다. EC2 인스턴스는 최소 2개의 인스턴스와 최대 5개의 인스턴스로 구성된 EC2 Auto Scaling 그룹에서 실행됩니다. 응용 프로그램은 항상 사용할 수 있어야 하지만 회사는 전체 비용을 걱정합니다.\n\n가용성 요구 사항을 가장 비용 효율적으로 충족하는 솔루션은 무엇입니까?	모든 EC2 스팟 인스턴스를 사용합니다. 사용하지 않을 때는 RDS 데이터베이스를 중지합니다.	5개의 EC2 인스턴스에 적용되는 EC2 Instance Savings Plan을 구매합니다. RDS 예약 DB 인스턴스를 구매합니다.	두 개의 EC2 예약 인스턴스를 구매합니다. 필요에 따라 최대 3개의 추가 EC2 스팟 인스턴스를 사용합니다. 사용하지 않을 때는 RDS 데이터베이스를 중지합니다.	2개의 EC2 인스턴스를 포함하는 EC2 Instance Savings Plan을 구매합니다. 필요에 따라 최대 3개의 추가 EC2 온디맨드 인스턴스를 사용합니다. RDS 예약 DB 인스턴스를 구매합니다.	D	
1535	Q207. 병원은 최근 Amazon API Gateway 및 AWS Lambda와 함께 RESTful API를 배포했습니다. 병원은 API 게이트웨이 및 Lambda를 사용하여 PDF 형식 및 JPEG 형식의 보고서를 업로드합니다. 병원은 보고서에서 보호되는 건강 정보(PHI)를 식별하기 위해 Lambda 코드를 수정해야 합니다.\n\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?	기존 Python 라이브러리를 사용하여 보고서에서 텍스트를 추출하고 추출된 텍스트에서 PHI를 식별합니다.	Amazon Textract를 사용하여 보고서에서 텍스트를 추출합니다. Amazon SageMaker를 사용하여 추출된 텍스트에서 PHI를 식별합니다.	Amazon Textract를 사용하여 보고서에서 텍스트를 추출합니다. Amazon Comprehend Medical을 사용하여 추출된 텍스트에서 PHI를 식별합니다.	Amazon Rekognition을 사용하여 보고서에서 텍스트를 추출합니다. Amazon Comprehend Medical을 사용하여 추출된 텍스트에서 PHI를 식별합니다.	C	
1536	Q208. 회사에는 처리할 페이로드가 있는 메시지를 보내는 발신자 응용 프로그램과 페이로드가 있는 메시지를 수신하려는 처리 응용 프로그램의 두 가지 응용 프로그램이 있습니다. 회사는 두 애플리케이션 간의 메시지를 처리하기 위해 AWS 서비스를 구현하려고 합니다. 보낸 사람 응용 프로그램은 시간당 약 1,000개의 메시지를 보낼 수 있습니다. 메시지를 처리하는 데 최대 2일이 소요될 수 있습니다. 메시지 처리에 실패하면 나머지 메시지 처리에 영향을 미치지 않도록 보존해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족하고 운영상 가장 효율적입니까?	Redis 데이터베이스를 실행하는 Amazon EC2 인스턴스를 설정합니다. 인스턴스를 사용하도록 두 애플리케이션을 모두 구성합니다. 메시지를 각각 저장, 처리 및 삭제합니다.	Amazon Kinesis 데이터 스트림을 사용하여 발신자 애플리케이션에서 메시지를 수신합니다. 처리 애플리케이션을 Kinesis 클라이언트 라이브러리(KCL)와 통합합니다.	발신자 및 프로세서 애플리케이션을 Amazon Simple Queue Service(Amazon SQS) 대기열과 통합합니다. 처리에 실패한 메시지를 수집하도록 배달 못한 편지 대기열을 구성합니다.	처리 애플리케이션을 Amazon Simple Notification Service(Amazon SNS) 주제에 구독하여 처리할 알림을 수신합니다. SNS 주제에 쓸 발신자 애플리케이션을 통합합니다.	C	
1537	Q209. 회사는 단일 Amazon EC2 온디맨드 인스턴스에서 웹 사이트 분석 애플리케이션을 호스팅합니다. 분석 소프트웨어는 PHP로 작성되었으며 MySQL 데이터베이스를 사용합니다. 분석 소프트웨어, PHP를 제공하는 웹 서버 및 데이터베이스 서버는 모두 EC2 인스턴스에서 호스팅됩니다. 응용 프로그램은 바쁜 시간 동안 성능 저하 징후를 보이고 5xx 오류를 표시합니다. 회사는 애플리케이션을 원활하게 확장해야 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 가장 비용 효율적으로 충족합니까?	데이터베이스를 Amazon RDS for MySQL DB 인스턴스로 마이그레이션합니다. 웹 애플리케이션의 AMI를 생성합니다. AMI를 사용하여 두 번째 EC2 온디맨드 인스턴스를 시작합니다. Application Load Balancer를 사용하여 각 EC2 인스턴스에 로드를 분산합니다.	데이터베이스를 Amazon RDS for MySQL DB 인스턴스로 마이그레이션합니다. 웹 애플리케이션의 AMI를 생성합니다. AMI를 사용하여 두 번째 EC2 온디맨드 인스턴스를 시작합니다. Amazon Route 53 가중 라우팅을 사용하여 두 EC2 인스턴스에 로드를 분산합니다.	데이터베이스를 Amazon Aurora MySQL DB 인스턴스로 마이그레이션합니다. AWS Lambda 함수를 생성하여 EC2 인스턴스를 중지하고 인스턴스 유형을 변경합니다. CPU 사용률이 75%를 초과할 때 Lambda 함수를 호출하는 Amazon CloudWatch 경보를 생성합니다.	데이터베이스를 Amazon Aurora MySQL DB 인스턴스로 마이그레이션합니다. 웹 애플리케이션의 AMI를 생성합니다. 시작 템플릿에 AMI를 적용합니다. 시작 템플릿으로 Auto Scaling 그룹을 생성합니다. 스팟 집합을 사용하도록 시작 템플릿을 구성합니다. Auto Scaling 그룹에 Application Load Balancer를 연결합니다.	D	
1538	Q210. 회사에 각각 크기가 약 5MB인 많은 수의 파일을 생성하는 응용 프로그램이 있습니다. 파일은 Amazon S3에 저장됩니다. 회사 정책에 따라 파일을 삭제하려면 4년 동안 보관해야 합니다. 파일에는 재생산하기 쉽지 않은 중요한 비즈니스 데이터가 포함되어 있으므로 즉각적인 액세스가 항상 필요합니다. 파일은 객체 생성 후 처음 30일 동안 자주 액세스되지만 처음 30일 후에는 거의 액세스되지 않습니다.\n\n가장 비용 효율적인 스토리지 솔루션은 무엇입니까?	객체 생성 후 30일 동안 S3 Standard에서 S3 Glacier로 파일을 이동하는 S3 버킷 수명 주기 정책을 생성합니다. 객체 생성 후 4년이 지나면 파일을 삭제합니다.	객체 생성 후 30일 동안 S3 Standard에서 S3 One Zone-Infrequent Access(S3 One Zone-IA)로 파일을 이동하는 S3 버킷 수명 주기 정책을 생성합니다. 객체 생성 후 4년이 지나면 파일을 삭제합니다.	객체 생성 후 30일 동안 S3 Standard에서 S3 Standard-Infrequent Access(S3 Standard-IA)로 파일을 이동하는 S3 버킷 수명 주기 정책을 생성합니다. 객체 생성 후 4년이 지나면 파일을 삭제합니다.	객체 생성 후 30일 동안 S3 Standard에서 S3 Standard-Infrequent Access(S3 Standard-IA)로 파일을 이동하는 S3 버킷 수명 주기 정책을 생성합니다. 객체 생성 4년 후 파일을 S3 Glacier로 이동합니다.	C	
1539	Q213. 한 회사는 최근 글로벌 전자 상거래 애플리케이션의 데이터 저장소로 Amazon Aurora를 사용하기 시작했습니다. 대규모 보고서가 실행될 때 개발자는 전자상거래 애플리케이션의 성능이 좋지 않다고 보고합니다. Amazon CloudWatch에서 지표를 검토한 후 솔루션 설계자는 월별 보고서가 실행될 때 ReadIOPS 및 CPU 사용률 지표가 급증하고 있음을 발견했습니다.\n\n가장 비용 효율적인 솔루션은 무엇입니까?	월별 보고를 Amazon Redshift로 마이그레이션합니다.	월별 보고를 Aurora 복제본으로 마이그레이션합니다.	Aurora 데이터베이스를 더 큰 인스턴스 클래스로 마이그레이션합니다.	Aurora 인스턴스에서 프로비저닝된 IOPS를 늘립니다.	B	
1540	Q214. 솔루션 설계자는 AWS 클라우드에 배포되는 새 애플리케이션의 아키텍처를 설계하고 있습니다. 애플리케이션은 Amazon EC2 온디맨드에서 실행됩니다. 여러 가용 영역에 걸쳐 자동으로 확장됩니다. EC2 인스턴스는 하루 종일 자주 확장 및 축소됩니다. ALB(Application Load Balancer)가 부하 분산을 처리합니다. 아키텍처는 분산 세션 데이터 관리를 지원해야 합니다. 회사는 필요한 경우 코드를 변경할 의향이 있습니다.\n\n아키텍처가 분산 세션 데이터 관리를 지원하도록 솔루션 설계자는 무엇을 해야 합니까?	Amazon ElastiCache를 사용하여 세션 데이터를 관리하고 저장합니다.	ALB의 세션 선호도(고정 세션)를 사용하여 세션 데이터를 관리합니다.	AWS Systems Manager의 Session Manager를 사용하여 세션을 관리합니다.	AWS Security Token Service(AWS STS)에서 GetSessionToken API 작업을 사용하여 세션을 관리합니다.	A	
1541	Q215. 회사에서 MySQL 데이터베이스를 온프레미스에서 AWS로 마이그레이션하려고 합니다. 이 회사는 최근 비즈니스에 심각한 영향을 미치는 데이터베이스 중단을 경험했습니다. 이러한 일이 다시 발생하지 않도록 회사는 데이터 손실을 최소화하고 모든 트랜잭션을 최소 2개의 노드에 저장하는 안정적인 AWS 기반 데이터베이스 솔루션을 원합니다.\n\n어떤 솔루션이 이러한 요구 사항을 충족합니까?	3개의 가용 영역에 있는 3개의 노드에 동기식 복제를 사용하여 Amazon RDS DB 인스턴스를 생성합니다.	데이터를 동기식으로 복제할 수 있도록 다중 AZ 기능이 활성화된 Amazon RDS MySQL DB 인스턴스를 생성합니다.	Amazon RDS MySQL DB 인스턴스를 생성한 다음 데이터를 동기식으로 복제하는 별도의 AWS 리전에 읽기 전용 복제본을 생성합니다.	Amazon RDS MySQL DB 인스턴스에 데이터를 동기식으로 복제하는 AWS Lambda 함수를 트리거하는 MySQL 엔진이 설치된 Amazon EC2 인스턴스를 생성합니다.	B	
1542	Q216. 회사는 단일 공장에 있는 여러 기계에서 매일 10TB의 계측 데이터를 수신합니다. 데이터는 공장 내에 위치한 온프레미스 데이터 센터의 SAN(Storage Area Network)에 저장된 JSON 파일로 구성됩니다. 회사는 이 데이터를 Amazon S3로 전송하여 실시간에 가까운 중요한 분석을 제공하는 여러 추가 시스템에서 액세스할 수 있기를 원합니다. 데이터가 민감한 것으로 간주되기 때문에 안전한 전송이 중요합니다.\n\n가장 안정적인 데이터 전송을 제공하는 솔루션은 무엇입니까?	공용 인터넷을 통한 AWS DataSync	AWS Direct Connect를 통한 AWS DataSync	공용 인터넷을 통한 AWS Database Migration Service(AWS DMS)	AWS Direct Connect를 통한 AWS Database Migration Service(AWS DMS)	B	
1543	Q218. 회사는 들어오는 요청을 처리하는 온프레미스 서버 집합에서 컨테이너화된 웹 애플리케이션을 호스팅합니다. 요청 수가 빠르게 증가하고 있습니다. 온프레미스 서버는 증가된 요청 수를 처리할 수 없습니다. 회사는 최소한의 코드 변경과 최소한의 개발 노력으로 애플리케이션을 AWS로 옮기기를 원합니다.\n\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?	Amazon Elastic Container Service(Amazon ECS)에서 AWS Fargate를 사용하여 Service Auto Scaling으로 컨테이너화된 웹 애플리케이션을 실행합니다. Application Load Balancer를 사용하여 수신 요청을 배포합니다.	두 개의 Amazon EC2 인스턴스를 사용하여 컨테이너화된 웹 애플리케이션을 호스팅합니다. Application Load Balancer를 사용하여 수신 요청을 배포합니다.	지원되는 언어 중 하나를 사용하는 새 코드와 함께 AWS Lambda를 사용합니다. 로드를 지원하기 위해 여러 Lambda 함수를 생성합니다. Amazon API Gateway를 진입점으로 사용 람다 함수에.	AWS ParallelCluster와 같은 고성능 컴퓨팅(HPC) 솔루션을 사용하여 적절한 규모로 들어오는 요청을 처리할 수 있는 HPC 클러스터를 설정합니다.	A	
1544	Q219. 한 회사가 AWS에서 2계층 웹 애플리케이션을 개발하고 있습니다. 회사 개발자는 백엔드 Amazon RDS 데이터베이스에 직접 연결되는 Amazon EC2 인스턴스에 애플리케이션을 배포했습니다. 회사는 애플리케이션에 데이터베이스 자격 증명을 하드코딩해서는 안 됩니다. 또한 회사는 정기적으로 데이터베이스 자격 증명을 자동으로 교체하는 솔루션을 구현해야 합니다.\n\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?	인스턴스 메타데이터에 데이터베이스 자격 증명을 저장합니다. Amazon EventBridge(Amazon CloudWatch Events) 규칙을 사용하여 RDS 자격 증명과 인스턴스 메타데이터를 동시에 업데이트하는 예약된 AWS Lambda 함수를 실행합니다.	암호화된 Amazon S3 버킷의 구성 파일에 데이터베이스 자격 증명을 저장합니다. Amazon EventBridge(Amazon CloudWatch Events) 규칙을 사용하여 RDS 자격 증명과 구성 파일의 자격 증명을 동시에 업데이트하는 예약된 AWS Lambda 함수를 실행합니다. S3 버전 관리를 사용하여 이전 값으로 폴백하는 기능을 보장합니다.	데이터베이스 자격 증명을 AWS Secrets Manager에 암호로 저장합니다. 보안 비밀에 대한 자동 순환을 켭니다. EC2 역할에 필요한 권한을 연결하여 보안 암호에 대한 액세스 권한을 부여합니다.	데이터베이스 자격 증명을 AWS Systems Manager Parameter Store에 암호화된 파라미터로 저장합니다. 암호화된 매개변수에 대해 자동 회전을 켭니다. EC2 역할에 필요한 권한을 연결하여 암호화된 파라미터에 대한 액세스 권한을 부여합니다.	C	
1545	Q220. 개발 팀은 성능 개선 도우미가 활성화된 MySQL DB 인스턴스용 범용 Amazon RDS에서 매월 리소스 집약적 테스트를 실행합니다. 테스트는 한 달에 한 번 48시간 동안 지속되며 데이터베이스를 사용하는 유일한 프로세스입니다. 팀은 DB 인스턴스의 컴퓨팅 및 메모리 속성을 줄이지 않고 테스트 실행 비용을 줄이려고 합니다.\n\n어떤 솔루션이 이러한 요구 사항을 가장 비용 효율적으로 충족합니까?	테스트가 완료되면 DB 인스턴스를 중지합니다. 필요한 경우 DB 인스턴스를 다시 시작합니다.	DB 인스턴스와 함께 Auto Scaling 정책을 사용하여 테스트가 완료되면 자동으로 확장합니다.	테스트가 완료되면 스냅샷을 만듭니다. DB 인스턴스를 종료하고 필요한 경우 스냅샷을 복원합니다.	테스트가 완료되면 DB 인스턴스를 저용량 인스턴스로 수정합니다. 필요한 경우 DB 인스턴스를 다시 수정합니다.	C	
1546	Q221. 회사는 AWS에서 애플리케이션을 호스팅합니다. 회사는 Amazon Cognito를 사용하여 사용자를 관리합니다. 사용자가 애플리케이션에 로그인하면 애플리케이션은 Amazon API Gateway에서 호스팅되는 REST API를 사용하여 Amazon DynamoDB에서 필요한 데이터를 가져옵니다. 회사는 개발 노력을 줄이기 위해 REST API에 대한 액세스를 제어하는 AWS 관리형 솔루션을 원합니다.\n\n최소한의 운영 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?	AWS Lambda 함수를 권한 부여로 구성하십시오! API Gateway에서 어떤 사용자가 요청했는지 확인합니다.	각 사용자에 대해 각 요청과 함께 전송되어야 하는 API 키를 생성 및 할당합니다. AWS Lambda 함수를 사용하여 키를 검증합니다.	모든 요청과 함께 헤더에 있는 사용자의 이메일 주소를 보냅니다. AWS Lambda 함수를 호출하여 해당 이메일 주소를 가진 사용자에게 적절한 액세스 권한이 있는지 확인합니다.	API Gateway에서 Amazon Cognito가 각 요청을 검증할 수 있도록 Amazon Cognito 사용자 풀 권한 부여자를 구성합니다.	D	
1547	Q222. 회사 데이터 센터의 NAS(Network Attached Storage)에 700TB의 백업 데이터가 저장되어 있습니다. 이 백업 데이터는 간헐적인 규제 요청에 액세스할 수 있어야 하며 7년 동안 보관해야 합니다. 회사는 이 백업 데이터를 데이터 센터에서 AWS로 마이그레이션하기로 결정했습니다. 마이그레이션은 1개월 이내에 완료되어야 합니다. 이 회사는 데이터 전송에 사용할 수 있는 공용 인터넷 연결에 500Mbps의 전용 대역폭을 보유하고 있습니다.\n\n솔루션 설계자는 최저 비용으로 데이터를 마이그레이션하고 저장하기 위해 무엇을 해야 합니까?	AWS Snowball 디바이스에 데이터를 전송하도록 주문합니다. 수명 주기 정책을 사용하여 파일을 Amazon S3 Glacier Deep Archive로 전환합니다.	데이터 센터와 Amazon VPC 간에 VPN 연결을 배포합니다. AWS CLI를 사용하여 온프레미스에서 Amazon S3 Glacier로 데이터를 복사합니다.	500Mbps AWS Direct Connect 연결을 프로비저닝하고 데이터를 Amazon S3로 전송합니다. 수명 주기 정책을 사용하여 파일을 Amazon S3 Glacier Deep Archive로 전환합니다.	AWS DataSync를 사용하여 데이터를 전송하고 DataSync 에이전트를 온프레미스에 배포합니다. DataSync 작업을 사용하여 온프레미스 NAS 스토리지에서 Amazon S3 Glacier로 파일을 복사합니다.	A	
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: moon
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2024-07-08 11:58:50.988669+09	16	19. CDN+ 설정 시 설정 항목에 대한 설명 중 올바르지 않은 것은 무엇인가요?	2	[{"changed": {"fields": ["Correct answer"]}}]	11	1
2	2024-07-08 11:59:03.56666+09	54	62. Application 서비스 각각의 서비스 명과 설명 중 잘못된 것은?	2	[{"changed": {"fields": ["Correct answer"]}}]	11	1
3	2024-07-08 11:59:11.665248+09	56	64. VPC 플랫폼 상의 상품 의존성 관계를 [상품 : 의존성] 형태로 나타냈을 때, 올바르지 않은 관계는?	2	[{"changed": {"fields": ["Correct answer"]}}]	11	1
4	2024-07-08 13:22:50.543927+09	579	['Q222. 회사 데이터 센터의 NAS(Network Attached Storage)에 	3		12	1
5	2024-07-08 13:22:50.551266+09	578	['Q221. 회사는 AWS에서 애플리케이션을 호스팅합니다. 회사는 Amazon Cogni	3		12	1
6	2024-07-08 13:22:50.556258+09	577	['Q220. 개발 팀은 성능 개선 도우미가 활성화된 MySQL DB 인스턴스용 범용 Am	3		12	1
7	2024-07-08 13:22:50.560835+09	576	['Q219. 한 회사가 AWS에서 2계층 웹 애플리케이션을 개발하고 있습니다. 회사 개발	3		12	1
8	2024-07-08 13:22:50.56599+09	575	['Q218. 회사는 들어오는 요청을 처리하는 온프레미스 서버 집합에서 컨테이너화된 웹 애	3		12	1
9	2024-07-08 13:22:50.571042+09	574	['Q216. 회사는 단일 공장에 있는 여러 기계에서 매일 10TB의 계측 데이터를 수신합	3		12	1
10	2024-07-08 13:22:50.575961+09	573	['Q215. 회사에서 MySQL 데이터베이스를 온프레미스에서 AWS로 마이그레이션하려고 	3		12	1
11	2024-07-08 13:22:50.580674+09	572	['Q214. 솔루션 설계자는 AWS 클라우드에 배포되는 새 애플리케이션의 아키텍처를 설계	3		12	1
12	2024-07-08 13:22:50.585802+09	571	['Q213. 한 회사는 최근 글로벌 전자 상거래 애플리케이션의 데이터 저장소로 Amazo	3		12	1
13	2024-07-08 13:22:50.592859+09	570	['Q210. 회사에 각각 크기가 약 5MB인 많은 수의 파일을 생성하는 응용 프로그램이 	3		12	1
14	2024-07-08 13:22:50.597973+09	569	['Q209. 회사는 단일 Amazon EC2 온디맨드 인스턴스에서 웹 사이트 분석 애플리	3		12	1
15	2024-07-08 13:22:50.603389+09	568	['Q208. 회사에는 처리할 페이로드가 있는 메시지를 보내는 발신자 응용 프로그램과 페이	3		12	1
16	2024-07-08 13:22:50.608274+09	567	['Q207. 병원은 최근 Amazon API Gateway 및 AWS Lambda와 함께	3		12	1
17	2024-07-08 13:22:50.612849+09	566	['Q206. 회사는 Amazon EC2 인스턴스 및 Amazon RDS에서 2계층 애플리	3		12	1
18	2024-07-08 13:22:50.617367+09	565	['Q203. 회사는 응용 프로그램의 데이터를 암호화해야 하는 개발자를 지원하기 위해 확장	3		12	1
19	2024-07-08 13:22:50.622199+09	564	['Q202. 애플리케이션은 여러 가용 영역의 Amazon EC2 인스턴스에서 실행됩니다.	3		12	1
20	2024-07-08 13:22:50.626818+09	563	['Q201. 회사는 확장성 및 가용성에 대한 요구 사항을 충족하기 위해 컨테이너에서 중요	3		12	1
21	2024-07-08 13:22:50.631603+09	562	['Q200. 회사에 많은 Amazon EC2 인스턴스를 사용하여 완료하는 매우 동적인 배	3		12	1
22	2024-07-08 13:22:50.636702+09	561	['Q199. 의료 기록 회사는 Amazon EC2 인스턴스에서 애플리케이션을 호스팅하고 	3		12	1
23	2024-07-08 13:22:50.641315+09	560	['Q198. 회사는 온프레미스 데이터 센터의 Kubernetes 클러스터에서 컨테이너화된	3		12	1
24	2024-07-08 13:22:50.645747+09	559	['Q197. 회사에서 인기 있는 노래 클립으로 만든 벨소리를 판매합니다. 벨소리가 포함된	3		12	1
25	2024-07-08 13:22:50.649865+09	558	['Q196. 한 회사는 사용자가 사진을 업로드하고 이미지에 액자를 추가할 수 있는 이미지	3		12	1
26	2024-07-08 13:22:50.654486+09	557	['Q195. 회사의 웹 애플리케이션이 Application Load Balancer 뒤의	3		12	1
27	2024-07-08 13:22:50.659973+09	556	['Q194. 솔루션 아키텍트가 다가오는 뮤지컬 이벤트를 위해 웹사이트를 최적화하고 있습니	3		12	1
28	2024-07-08 13:22:50.664761+09	555	['Q193. 회사에서 Amazon 머신 이미지(AMI)를 관리하려고 합니다. 회사는 현재	3		12	1
29	2024-07-08 13:22:50.670038+09	554	['Q192. 회사는 UDP 연결을 사용하는 VoIP(Voice over Internet 	3		12	1
30	2024-07-08 13:22:50.675218+09	553	['Q191. 회사에서 새로운 동적 주문 웹사이트를 구축하고 있습니다. 회사는 서버 유지 	3		12	1
31	2024-07-08 13:22:50.680258+09	552	['Q190. 회사는 AWS에서 고성능 컴퓨팅(HPC) 워크로드를 실행합니다. 워크로드에는	3		12	1
32	2024-07-08 13:22:50.687206+09	551	['Q189. 애플리케이션은 VPC의 Amazon EC2 인스턴스에서 실행됩니다. 애플리케	3		12	1
33	2024-07-08 13:22:50.692685+09	550	['Q188. 회사는 Amazon Route 53에 도메인 이름을 등록했습니다. 이 회사는	3		12	1
34	2024-07-08 13:22:50.697407+09	549	['Q187. 회사에 소프트웨어 엔지니어링에 사용되는 AWS 계정이 있습니다. AWS 계정	3		12	1
35	2024-07-08 13:22:50.702583+09	548	['Q186. 회사에서 새로운 서버리스 워크로드를 배포할 준비를 하고 있습니다. 솔루션 설	3		12	1
36	2024-07-08 13:22:50.707774+09	547	['Q185. 솔루션 설계자는 회사가 온프레미스 인프라를 AWS로 확장하기 위해 새로운 하	3		12	1
37	2024-07-08 13:22:50.712775+09	546	['Q184. 한 회사에서 애플리케이션을 서버리스 솔루션으로 이동하려고 합니다. 서버리스 	3		12	1
38	2024-07-08 13:22:50.717824+09	545	['Q183. 회사는 애플리케이션에 대한 실시간 데이터 수집 아키텍처를 구성해야 합니다. 	3		12	1
39	2024-07-08 13:22:50.722974+09	544	['Q182. 한 회사는 Amazon DynamoDB를 사용하여 고객 정보를 저장하는 쇼핑	3		12	1
40	2024-07-08 13:22:50.727644+09	543	['Q181. 회사는 회사의 기본 웹 사이트를 사용할 수 없는 경우 사용자를 백업 정적 오	3		12	1
41	2024-07-08 13:22:50.732297+09	542	['Q180. 회사는 AWS에서 전자 상거래 웹 애플리케이션을 구축하고 있습니다. 애플리케	3		12	1
42	2024-07-08 13:22:50.736928+09	541	['Q179. 회사는 AWS 클라우드에서 호스팅되는 미디어 애플리케이션을 위한 공유 스토리	3		12	1
43	2024-07-08 13:22:50.741766+09	540	['Q178. 회사에 Amazon EC2 인스턴스에서 실행되고 Amazon Aurora 데	3		12	1
44	2024-07-08 13:22:50.746678+09	539	['Q177. 개발 팀은 다른 팀이 액세스할 웹사이트를 호스팅해야 합니다. 웹사이트 콘텐츠	3		12	1
45	2024-07-08 13:22:50.751157+09	538	['Q176. 한 엔터테인먼트 회사에서 Amazon DynamoDB를 사용하여 미디어 메타	3		12	1
46	2024-07-08 13:22:50.756734+09	537	['Q175. 회사의 주문 시스템은 클라이언트에서 Amazon EC2 인스턴스로 요청을 보	3		12	1
47	2024-07-08 13:22:50.762543+09	536	['Q173. 회사에 Amazon EC2 인스턴스에서 실행되는 레거시 데이터 처리 애플리케	3		12	1
48	2024-07-08 13:22:50.766953+09	535	['Q172. 회사는 AWS 클라우드에서 애플리케이션을 구축하고 있습니다. 애플리케이션은 	3		12	1
49	2024-07-08 13:22:50.770733+09	534	['Q171. 회사에 두 개의 Amazon EC2 인스턴스에서 호스팅되는 동적 웹 애플리케	3		12	1
50	2024-07-08 13:22:50.7762+09	533	['Q169. 회사의 애플리케이션은 데이터 수집을 위해 여러 SaaS(Software-as	3		12	1
51	2024-07-08 13:22:50.7921+09	532	['Q168. 회사에서 온프레미스 애플리케이션을 AWS로 마이그레이션하려고 합니다. 애플리	3		12	1
52	2024-07-08 13:22:50.796007+09	531	['Q167. 회사는 MySQL 데이터베이스로 구동되는 온프레미스 애플리케이션을 실행합니다	3		12	1
53	2024-07-08 13:22:50.799726+09	530	['Q166. 응용 프로그램을 사용하면 회사 본사의 사용자가 제품 데이터에 액세스할 수 있	3		12	1
54	2024-07-08 13:22:50.804059+09	529	['Q164. 회사는 1주일 동안 진행될 예정된 이벤트를 위해 특정 AWS 리전의 3개의 	3		12	1
55	2024-07-08 13:22:50.812634+09	528	['Q163. 한 회사는 최근 AWS 계정의 Amazon EC2 인스턴스에서 다양한 새로운	3		12	1
56	2024-07-08 13:22:50.816874+09	527	['Q162. 회사는 온프레미스에 컨테이너화된 애플리케이션을 구축하고 있으며 애플리케이션을	3		12	1
57	2024-07-08 13:22:50.821233+09	526	['Q161. 회사는 대규모 Amazon EC2 인스턴스 집합에서 애플리케이션을 실행합니다	3		12	1
58	2024-07-08 13:22:50.826493+09	525	['Q159. 솔루션 설계자가 애플리케이션을 위한 새로운 Amazon CloudFront 	3		12	1
59	2024-07-08 13:22:50.832671+09	524	['Q158. 회사에서 AWS에 새로운 공개 웹 애플리케이션을 배포하고 있습니다. 애플리케	3		12	1
60	2024-07-08 13:22:50.839559+09	523	['Q157. 게임 회사에 점수를 표시하는 웹 응용 프로그램이 있습니다. 애플리케이션은 A	3		12	1
61	2024-07-08 13:22:50.844358+09	522	['Q156. 회사는 여러 가용 영역의 Amazon EC2 인스턴스에서 실행되는 웹 기반 	3		12	1
62	2024-07-08 13:22:50.848968+09	521	['Q155. 회사는 Amazon S3를 사용하여 기밀 감사 문서를 저장합니다. S3 버킷	3		12	1
63	2024-07-08 13:22:50.853471+09	520	['Q154. 한 회사는 최근에 메시지 처리 시스템을 AWS로 마이그레이션했습니다. 시스템	3		12	1
64	2024-07-08 13:22:50.858111+09	519	['Q153. 회사는 품목 가격을 기반으로 세금 계산 조회를 자동화하는 API를 사용자에게	3		12	1
65	2024-07-08 13:22:50.863169+09	518	['Q152. 회사는 중요한 애플리케이션에 대한 애플리케이션 로그 파일을 10년 동안 보관	3		12	1
66	2024-07-08 13:22:50.867431+09	517	['Q151. 글로벌 회사는 ALB(Application Load Balancer) 뒤의 	3		12	1
67	2024-07-08 13:22:50.871872+09	516	['Q150. 회사에서 Amazon S3 Standard 스토리지를 사용하여 백업 파일을 	3		12	1
68	2024-07-08 13:22:50.876959+09	515	['Q149. 솔루션 설계자는 AWS 클라우드에 배포되는 새 애플리케이션의 아키텍처를 설계	3		12	1
69	2024-07-08 13:22:50.881107+09	514	['Q148. 회사에 AWS에 배포된 3계층 웹 애플리케이션이 있습니다. 웹 서버는 VPC	3		12	1
70	2024-07-08 13:22:50.885615+09	513	['Q147. 회사의 컨테이너화된 애플리케이션은 Amazon EC2 인스턴스에서 실행됩니다	3		12	1
71	2024-07-08 13:22:50.889549+09	512	['Q145. 회사는 독점 애플리케이션의 로그 파일을 분석할 수 있는 능력이 필요합니다. 	3		12	1
72	2024-07-08 13:22:50.893415+09	511	['Q144. AA 회사의 동적 웹 사이트는 미국의 온프레미스 서버를 사용하여 호스팅됩니다	3		12	1
73	2024-07-08 13:22:50.897373+09	510	['Q143. 회사는 의료 시험의 결과를 Amazon S3 리포지토리에 저장해야 합니다. 	3		12	1
74	2024-07-08 13:22:50.901358+09	509	['Q142. 최근에 AWS로 마이그레이션한 회사가 프로덕션 VPC로 들어오고 나가는 트래	3		12	1
75	2024-07-08 13:22:50.905119+09	508	['Q141. 회사는 Amazon S3에서 정적 웹 사이트를 호스팅하고 DNS에 Amazo	3		12	1
76	2024-07-08 13:22:50.909114+09	507	['Q140. 회사는 가장 최근 청구서에서 Amazon EC2 비용 증가를 관찰했습니다. 	3		12	1
77	2024-07-08 13:22:50.913179+09	506	['Q139. 전자 상거래 회사에 Amazon API Gateway와 AWS Lambda 	3		12	1
78	2024-07-08 13:22:50.916559+09	505	['Q138. 회사는 매월 통화 기록 파일을 저장합니다. 사용자는 통화 후 1년 이내에 파	3		12	1
79	2024-07-08 13:22:50.920143+09	504	['Q137. 전자 상거래 회사는 AWS에서 하루 1회 웹 사이트를 시작하려고 합니다. 매	3		12	1
80	2024-07-08 13:22:50.923992+09	503	['Q136. 회사는 AWS 인프라에 대한 월별 유지 관리를 수행합니다. 이러한 유지 관리	3		12	1
81	2024-07-08 13:22:50.928103+09	502	['Q135. 회사에는 다음 구성 요소가 포함된 데이터 수집 워크플로가 있습니다. 새로운 	3		12	1
82	2024-07-08 13:22:50.931877+09	501	['Q134. 회사에 다양한 런타임으로 AWS Lambda 함수를 분당 최대 800번 호출	3		12	1
83	2024-07-08 13:22:50.935358+09	500	['Q133. 솔루션 설계자는 애플리케이션이 Amazon RDS DB 인스턴스에 액세스하는	3		12	1
84	2024-07-08 13:22:50.938799+09	499	['Q132. 게임 회사는 AWS에서 브라우저 기반 애플리케이션을 호스팅합니다. 애플리케이	3		12	1
85	2024-07-08 13:22:50.942169+09	498	['Q131. 회사에서 분산 애플리케이션을 AWS로 마이그레이션하고 있습니다. 애플리케이션	3		12	1
86	2024-07-08 13:22:50.945819+09	497	['Q130. 회사는 AWS 클라우드를 사용하여 기존 애플리케이션을 고가용성 및 복원력으로	3		12	1
87	2024-07-08 13:22:50.949346+09	496	['Q129. AA 회사는 애플리케이션의 성능을 개선하기 위해 다계층 애플리케이션을 온프레	3		12	1
88	2024-07-08 13:22:50.952573+09	495	['Q128. 회사는 여러 Amazon EC2 인스턴스에서 애플리케이션을 호스팅합니다. 애	3		12	1
89	2024-07-08 13:22:50.95582+09	494	['Q127. 회사는 단일 VPC의 Amazon EC2 인스턴스에서 고가용성 이미지 처리 	3		12	1
90	2024-07-08 13:22:50.959263+09	493	['Q126. 솔루션 설계자는 회사의 고객 대면 애플리케이션을 설계하고 있습니다. 애플리케	3		12	1
91	2024-07-08 13:22:50.963177+09	492	['Q125. 회사는 온프레미스 서버에서 Amazon EC2 인스턴스로 애플리케이션을 마이	3		12	1
92	2024-07-08 13:22:50.966508+09	491	['Q123. 회사에서 새 애플리케이션을 시작하고 Amazon CloudWatch 대시보드	3		12	1
93	2024-07-08 13:22:50.969765+09	490	['Q122. 회사에 AWS에서 호스팅되는 웹 사이트가 있습니다. 웹 사이트는 HTTP와 	3		12	1
94	2024-07-08 13:22:50.973052+09	489	['Q121. 솔루션 설계자는 퍼블릭 및 프라이빗 서브넷이 있는 VPC를 설계하고 있습니다	3		12	1
95	2024-07-08 13:22:50.976578+09	488	['Q120. 회사에는 공통 Amazon RDS MySQL 다중 AZ DB 인스턴스에 자주	3		12	1
96	2024-07-08 13:22:50.980901+09	487	['Q119. 솔루션 설계자는 Amazon S3 오리진과 함께 Amazon CloudFro	3		12	1
97	2024-07-08 13:22:50.984834+09	486	['Q118. 회사에서 Amazon EC2 인스턴스에서 배치 애플리케이션을 실행하고 있습니	3		12	1
98	2024-07-08 13:22:50.988708+09	485	['Q117. 솔루션 설계자는 Amazon S3를 사용하여 새로운 디지털 미디어 애플리케이	3		12	1
99	2024-07-08 13:22:50.993045+09	484	['Q115. 회사는 AWS에서 전자 상거래 애플리케이션을 실행합니다. 모든 새 주문은 단	3		12	1
100	2024-07-08 13:22:50.997388+09	483	['Q113. 자전거 공유 회사는 피크 운영 시간 동안 자전거의 위치를 추적하기 위해 다층	3		12	1
101	2024-07-08 13:22:51.00107+09	482	['Q112. 회사는 AWS에서 여러 Windows 워크로드를 실행합니다. 회사 직원은 두	3		12	1
102	2024-07-08 13:22:51.004943+09	481	['Q111. 회사에서 AWS 클라우드의 Auto Scaling 그룹에 속한 Amazon 	3		12	1
103	2024-07-08 13:22:51.008663+09	480	['Q110. 회사는 사용자 트랜잭션 데이터를 Amazon DynamoDB 테이블에 보관해	3		12	1
104	2024-07-08 13:22:56.603825+09	479	['Q109. 회사 웹 사이트는 항목 카탈로그에 Amazon EC2 인스턴스 스토어를 사용	3		12	1
105	2024-07-08 13:22:56.609619+09	478	['Q108. 회사는 기존 3계층 웹 아키텍처의 비용을 절감하려고 합니다. 웹, 애플리케이	3		12	1
106	2024-07-08 13:22:56.615482+09	477	['Q107. 회사는 사용자 요청을 수집하고 요청 유형에 따라 처리를 위해 적절한 마이크로	3		12	1
107	2024-07-08 13:22:56.621011+09	476	['Q106. 회사는 NFS를 사용하여 온프레미스 네트워크 연결 스토리지에 대용량 비디오 	3		12	1
108	2024-07-08 13:22:56.626379+09	475	['Q105. 글로벌 이벤트 주최자는 일일 보고서를 정적 HTML 페이지로 온라인에 게시하	3		12	1
109	2024-07-08 13:22:56.63095+09	474	['Q104. 팀의 모든 AWS 계정에서 특정 서비스 또는 작업에 대한 액세스를 제한하는 	3		12	1
110	2024-07-08 13:22:56.635722+09	473	['Q103. 대규모 미디어 회사는 AWS에서 웹 애플리케이션을 호스팅합니다. 이 회사는 	3		12	1
111	2024-07-08 13:22:56.640535+09	472	['Q102. 회사의 웹사이트는 사용자에게 다운로드 가능한 과거 성과 보고서를 제공합니다.	3		12	1
112	2024-07-08 13:22:56.645362+09	471	['Q100. 게임 회사는 고가용성 아키텍처를 설계하고 있습니다. 애플리케이션은 수정된 L	3		12	1
113	2024-07-08 13:22:56.65071+09	470	['Q99. 회사는 AWS 클라우드에서 웹 애플리케이션을 호스팅합니다. 회사는 AWS Ce	3		12	1
114	2024-07-08 13:22:56.656089+09	469	['Q98. 회사는 Amazon S3에 회계 기록을 저장해야 합니다. 기록은 1년 동안 즉	3		12	1
115	2024-07-08 13:22:56.661366+09	468	['Q97. 회사는 AWS에서 워크로드를 실행합니다. 회사는 외부 공급자의 서비스에 연결해	3		12	1
116	2024-07-08 13:22:56.666714+09	467	['Q96. 회사에 AWS로 마이그레이션해야 하는 Windows 기반 애플리케이션이 있습니	3		12	1
117	2024-07-08 13:22:56.671655+09	466	['Q95. 한 회사에 데이터베이스에 주문을 작성하고 결제를 처리하기 위해 서비스를 호출하	3		12	1
118	2024-07-08 13:22:56.676544+09	465	['Q94. 한 회사는 최근 애플리케이션 마이그레이션 이니셔티브에 대한 지원을 위해 AWS	3		12	1
119	2024-07-08 13:22:56.691435+09	464	['Q93. 회사에서 데이터 저장을 위해 Amazon DynamoDB 테이블을 사용할 계획	3		12	1
120	2024-07-08 13:22:56.698179+09	463	['Q92. 한 미디어 회사가 시스템을 AWS 클라우드로 이전할 가능성을 평가하고 있습니다	3		12	1
121	2024-07-08 13:22:56.703629+09	462	['Q91. 회사는 AWS Organizations를 사용하여 각 사업부에 대한 전용 AW	3		12	1
122	2024-07-08 13:22:56.70827+09	461	['Q89. 회사는 Amazon ECS를 사용하여 애플리케이션을 실행합니다. 애플리케이션은	3		12	1
123	2024-07-08 13:22:56.713468+09	460	['Q88. 한 회사에서 인기 있는 소셜 미디어 웹사이트를 운영하고 있습니다. 웹사이트는 	3		12	1
124	2024-07-08 13:22:56.718453+09	459	['Q87. 회사에 이벤트 데이터를 생성하는 서비스가 있습니다. 회사는 AWS를 사용하여 	3		12	1
125	2024-07-08 13:22:56.723209+09	458	['Q86. 회사는 ALB(Application Load Balancer) 뒤에 있는 Am	3		12	1
126	2024-07-08 13:22:56.728038+09	457	['Q85. 회사에 Java 및 PHP를 기반으로 하는 웹 응용 프로그램이 있습니다. 회사	3		12	1
127	2024-07-08 13:22:56.733262+09	456	['Q83. 회사는 여러 대륙에 걸쳐 도시의 온도, 습도 및 대기압 데이터를 수집합니다. 	3		12	1
128	2024-07-08 13:22:56.738627+09	455	['Q82. 회사에서 기존 온프레미스 모놀리식 애플리케이션을 AWS로 마이그레이션하려고 합	3		12	1
129	2024-07-08 13:22:56.743373+09	454	['Q81. 회사는 Amazon CloudWatch Logs 로그 그룹에 애플리케이션 로그	3		12	1
130	2024-07-08 13:22:56.748435+09	453	['Q80. 회사는 새로운 비즈니스 애플리케이션을 구현하고 있습니다. 애플리케이션은 두 개	3		12	1
131	2024-07-08 13:22:56.754015+09	452	['Q79. 온라인 소매 회사는 5천만 명 이상의 활성 고객을 보유하고 있으며 매일 25,	3		12	1
132	2024-07-08 13:22:56.758706+09	451	['Q78. 회사에 Amazon S3에 백업되는 시간에 민감한 대량의 데이터를 생성하는 온	3		12	1
133	2024-07-08 13:22:56.764111+09	450	['Q77. Amazon EC2 관리자는 여러 사용자가 포함된 IAM 그룹과 연결된 다음 	3		12	1
134	2024-07-08 13:22:56.769085+09	449	['Q76. 회사는 온프레미스 데이터 센터에서 마케팅 웹사이트를 호스팅합니다. 웹 사이트는	3		12	1
135	2024-07-08 13:22:56.773675+09	448	['Q75. 회사는 Application Load Balancer 뒤의 Amazon EC2	3		12	1
136	2024-07-08 13:22:56.778702+09	447	['Q74. 애플리케이션은 프라이빗 서브넷의 Amazon EC2 인스턴스에서 실행됩니다. 	3		12	1
137	2024-07-08 13:22:56.783504+09	446	['Q73. 회사는 AWS 클라우드 배포를 검토하여 Amazon S3 버킷에 무단 구성 변	3		12	1
138	2024-07-08 13:22:56.788924+09	445	['Q72. 글로벌 회사는 Amazon API Gateway를 사용하여 us-east-1 	3		12	1
139	2024-07-08 13:22:56.793924+09	444	['Q71. 회사에 매장에 마케팅 서비스를 제공하는 애플리케이션이 있습니다. 매장 고객의 	3		12	1
140	2024-07-08 13:22:56.827043+09	443	['Q70. 한 회사가 AWS 클라우드에서 공개 웹 애플리케이션 출시를 준비하고 있습니다.	3		12	1
141	2024-07-08 13:22:56.831405+09	442	['Q69. 회사는 us-east-1 리전 내의 3개의 개별 VPC에서 여러 비즈니스 애플	3		12	1
142	2024-07-08 13:22:56.835785+09	441	['Q67. 회사는 Amazon S3에 데이터를 저장해야 하며 데이터가 변경되지 않도록 해	3		12	1
143	2024-07-08 13:22:56.839606+09	440	['Q66. 회사는 Application Load Balancer 뒤의 Amazon EC2	3		12	1
144	2024-07-08 13:22:56.843334+09	439	['Q65. 설문 조사 회사는 미국 지역에서 수년 동안 데이터를 수집했습니다. 이 회사는 	3		12	1
145	2024-07-08 13:22:56.846716+09	438	['Q64. 회사는 AWS에서 OLTP(온라인 트랜잭션 처리: online transact	3		12	1
146	2024-07-08 13:22:56.850396+09	437	['Q63. 이미지 처리 회사에는 사용자가 이미지를 업로드하는 데 사용하는 웹 응용 프로그	3		12	1
147	2024-07-08 13:22:56.854192+09	436	['Q62. 회사는 AWS에서 데이터 레이크를 호스팅합니다. 데이터 레이크는 Amazon 	3		12	1
148	2024-07-08 13:22:56.85786+09	435	['Q61. 회사에는 매일 1TB의 상태 알림을 집합적으로 생성하는 수천 개의 에지 장치가	3		12	1
149	2024-07-08 13:22:56.861674+09	434	['Q60. 회사는 300개 이상의 글로벌 웹사이트 및 애플리케이션을 호스팅합니다. 이 회	3		12	1
150	2024-07-08 13:22:56.866284+09	433	['Q59. 회사에서 AWS 클라우드의 컨테이너에서 애플리케이션을 실행하려고 합니다. 이러	3		12	1
151	2024-07-08 13:22:56.872307+09	432	['Q58. 회사에서 데이터를 Amazon S3 버킷으로 이동할 계획입니다. 데이터는 S3	3		12	1
152	2024-07-08 13:22:56.876651+09	431	['Q57. 회사는 온프레미스에서 Oracle 데이터베이스를 실행합니다. 회사는 AWS로 	3		12	1
153	2024-07-08 13:22:56.880626+09	430	['Q56. 회사에 1,000개의 Amazon EC2 Linux 인스턴스에서 실행되는 프로	3		12	1
154	2024-07-08 13:22:56.888122+09	429	['Q55. AWS에서 웹 애플리케이션을 호스팅하는 회사는 모든 Amazon EC2 인스턴	3		12	1
155	2024-07-08 13:22:56.891854+09	428	['Q54. 회사에 VPC의 Amazon EC2 인스턴스에서 실행되는 애플리케이션이 있습니	3		12	1
156	2024-07-08 13:22:56.895441+09	427	['Q53. 회사에 사용자가 웹 인터페이스 또는 모바일 앱을 통해 문서를 업로드하는 프로덕	3		12	1
157	2024-07-08 13:22:56.90021+09	426	['Q52. 빠르게 성장하는 전자 상거래 회사는 단일 AWS 리전에서 워크로드를 실행하고 	3		12	1
158	2024-07-08 13:22:56.904738+09	425	['Q50. 솔루션 설계자는 회사의 스토리지 비용을 줄이기 위한 솔루션을 구현해야 합니다.	3		12	1
159	2024-07-08 13:22:56.908605+09	424	['Q49. 회사에서 3계층 웹 응용 프로그램을 사용하여 신입 직원에게 교육을 제공합니다.	3		12	1
160	2024-07-08 13:22:56.912263+09	423	['Q48. 한 회사에서 사용자가 Amazon S3에 작은 파일을 업로드하는 애플리케이션을	3		12	1
161	2024-07-08 13:22:56.916518+09	422	['Q47. 회사는 Amazon EC2 인스턴스 집합에서 프로덕션 애플리케이션을 실행합니다	3		12	1
162	2024-07-08 13:22:56.920876+09	421	['Q46. 솔루션 설계자는 AWS에 배포되는 새 애플리케이션을 위한 클라우드 아키텍처를 	3		12	1
163	2024-07-08 13:22:56.924765+09	420	['Q45. 한 회사는 사용자에게 글로벌 속보, 지역 경보 및 날씨 업데이트를 제공하는 웹	3		12	1
164	2024-07-08 13:22:56.92834+09	419	['Q44. 솔루션 설계자가 다중 서브넷 VPC 아키텍처를 개발 중입니다. 솔루션은 2개의	3		12	1
165	2024-07-08 13:22:56.931877+09	418	['Q43. 회사는 사용자 업로드 문서를 Amazon EBS 볼륨에 저장하는 단일 Amaz	3		12	1
166	2024-07-08 13:22:56.93579+09	417	['Q42. 회사에서 SQL 데이터베이스를 사용하여 공개적으로 액세스할 수 있는 영화 데이	3		12	1
167	2024-07-08 13:22:56.939556+09	416	['Q41. 회사에서 애플리케이션을 AWS로 마이그레이션하고 있습니다. 응용 프로그램은 다	3		12	1
168	2024-07-08 13:22:56.943088+09	415	['Q40. 회사에는 Microsoft Windows 공유 파일 저장소가 필요한 온프레미스	3		12	1
169	2024-07-08 13:22:56.946439+09	414	['Q39. 회사에서 동일한 AWS 리전의 테스트 환경에 대량의 프로덕션 데이터를 복제하는	3		12	1
170	2024-07-08 13:22:56.949975+09	413	['Q34. 회사는 AWS 에서 온라인 마켓플레이스 웹 애플리케이션을 실행합니다. 이 애플	3		12	1
171	2024-07-08 13:22:56.953976+09	412	['Q33. 회사는 Application Load Balancer 뒤의 Amazon EC2	3		12	1
172	2024-07-08 13:22:56.957801+09	411	['Q31. 회사에서 새 애플리케이션을 시작하고 Amazon CloudWatch 대시보드에	3		12	1
173	2024-07-08 13:22:56.971801+09	410	['Q30. 회사는 Amazon EC2 인스턴스에서 Amazon S3 버킷으로 데이터를 이	3		12	1
174	2024-07-08 13:22:56.98017+09	409	['Q29. 한 회사에 Amazon RDS 의 데이터베이스에 목록을 저장하는 자동차 판매 	3		12	1
175	2024-07-08 13:22:57.043003+09	408	['Q28. 회사에는 ALB(Application Load Balancer) 뒤의 단일 가	3		12	1
176	2024-07-08 13:22:57.047293+09	407	['Q26. 회사는 AWS Organizations 를 사용하여 여러 부서의 여러 AWS 	3		12	1
177	2024-07-08 13:22:57.051386+09	406	['Q24. 회사는 최근 웹 공격으로 인해 공개 웹 응용 프로그램의 보안에 대해 우려하고 	3		12	1
178	2024-07-08 13:22:57.055579+09	405	['Q23. 회사는 웹 사이트에서 검색 가능한 항목 저장소를 유지 관리합니다. 데이터는 천	3		12	1
179	2024-07-08 13:22:57.059716+09	404	['Q22. 회사는 AWS 에서 인프라를 실행하고 문서 관리 애플리케이션에 대해 700,0	3		12	1
180	2024-07-08 13:22:57.06335+09	403	['Q21. 회사는 보고를 위해 50TB 의 데이터를 사용합니다. 회사는 이 데이터를 온프	3		12	1
181	2024-07-08 13:22:57.067257+09	402	['Q20. 한 회사에서 Amazon S3 버킷을 스토리지로 사용할 파일 공유 애플리케이션	3		12	1
182	2024-07-08 13:22:57.07167+09	401	['Q19. 회사는 데이터 센터에서 SMB 파일 서버를 실행하고 있습니다. 파일 서버는 파	3		12	1
183	2024-07-08 13:22:57.076455+09	400	['Q18. 텔레마케팅 회사는 AWS 에서 고객 콜 센터 기능을 설계하고 있습니다. 회사는	3		12	1
184	2024-07-08 13:22:57.080687+09	399	['Q16. 회사에서 Amazon S3 에 기밀 데이터를 저장할 준비를 하고 있습니다. 규	3		12	1
185	2024-07-08 13:22:57.084716+09	398	['Q14. 회사는 Application Load Balancer 뒤의 Amazon EC2	3		12	1
186	2024-07-08 13:22:57.089458+09	397	['Q13. 회사의 응용 프로그램에 성능 문제가 있습니다. 애플리케이션은 스테이트풀(Sta	3		12	1
187	2024-07-08 13:22:57.094317+09	396	['Q12. 회사는 AWS 에서 다중 계층 애플리케이션을 호스팅합니다. 규정 준수, 거버넌	3		12	1
188	2024-07-08 13:22:57.098758+09	395	['Q11. 회사에는 매일 동시에 실행되는 AWS Glue 추출, 변환 및 로드(ETL) 	3		12	1
189	2024-07-08 13:22:57.103712+09	394	['Q10. 회사는 재무 위험 모델링을 위해 AWS 에서 고성능 컴퓨팅(HPC) 인프라를 	3		12	1
190	2024-07-08 13:22:57.109183+09	393	['Q8. 회사는 Amazon API Gateway API 에 의해 호출되는 AWS Lam	3		12	1
191	2024-07-08 13:22:57.11395+09	392	['Q6. 회사에 들어오는 메시지를 수집하는 응용 프로그램이 있습니다. 그런 다음 이러한 	3		12	1
192	2024-07-08 13:22:57.11845+09	391	['Q5. 회사의 HTTP 애플리케이션은 NLB(Network Load Balancer) 	3		12	1
193	2024-07-08 13:22:57.12347+09	390	['Q4. 회사는 Application Load Balancer 뒤의 Amazon EC2 	3		12	1
194	2024-07-08 13:22:57.128268+09	389	['Q3. 회사는 동일한 AWS 리전에 있는 Amazon S3 버킷에서 사진을 자주 업로드	3		12	1
195	2024-07-08 13:22:57.133177+09	388	['Q2. 회사는 AWS 에서 호스팅되는 서비스 솔루션으로 고성능 컴퓨팅(HPC) 워크로드	3		12	1
985	2024-07-08 16:03:51.101155+09	1337	aws object (1337)	3		12	1
196	2024-07-08 13:22:57.138686+09	387	['Q1. 전자 상거래 회사는 AWS 클라우드에서 분석 애플리케이션을 호스팅합니다. 애플리	3		12	1
197	2024-07-08 13:22:57.144482+09	386	['Q222. 회사 데이터 센터의 NAS(Network Attached Storage)에 	3		12	1
198	2024-07-08 13:22:57.149373+09	385	['Q221. 회사는 AWS에서 애플리케이션을 호스팅합니다. 회사는 Amazon Cogni	3		12	1
199	2024-07-08 13:22:57.154158+09	384	['Q220. 개발 팀은 성능 개선 도우미가 활성화된 MySQL DB 인스턴스용 범용 Am	3		12	1
200	2024-07-08 13:22:57.158946+09	383	['Q219. 한 회사가 AWS에서 2계층 웹 애플리케이션을 개발하고 있습니다. 회사 개발	3		12	1
201	2024-07-08 13:22:57.164385+09	382	['Q218. 회사는 들어오는 요청을 처리하는 온프레미스 서버 집합에서 컨테이너화된 웹 애	3		12	1
202	2024-07-08 13:22:57.169255+09	381	['Q216. 회사는 단일 공장에 있는 여러 기계에서 매일 10TB의 계측 데이터를 수신합	3		12	1
203	2024-07-08 13:22:57.17424+09	380	['Q215. 회사에서 MySQL 데이터베이스를 온프레미스에서 AWS로 마이그레이션하려고 	3		12	1
204	2024-07-08 13:23:02.023531+09	379	['Q214. 솔루션 설계자는 AWS 클라우드에 배포되는 새 애플리케이션의 아키텍처를 설계	3		12	1
205	2024-07-08 13:23:02.02889+09	378	['Q213. 한 회사는 최근 글로벌 전자 상거래 애플리케이션의 데이터 저장소로 Amazo	3		12	1
206	2024-07-08 13:23:02.034206+09	377	['Q210. 회사에 각각 크기가 약 5MB인 많은 수의 파일을 생성하는 응용 프로그램이 	3		12	1
207	2024-07-08 13:23:02.038863+09	376	['Q209. 회사는 단일 Amazon EC2 온디맨드 인스턴스에서 웹 사이트 분석 애플리	3		12	1
208	2024-07-08 13:23:02.043835+09	375	['Q208. 회사에는 처리할 페이로드가 있는 메시지를 보내는 발신자 응용 프로그램과 페이	3		12	1
209	2024-07-08 13:23:02.048541+09	374	['Q207. 병원은 최근 Amazon API Gateway 및 AWS Lambda와 함께	3		12	1
210	2024-07-08 13:23:02.053214+09	373	['Q206. 회사는 Amazon EC2 인스턴스 및 Amazon RDS에서 2계층 애플리	3		12	1
211	2024-07-08 13:23:02.057817+09	372	['Q203. 회사는 응용 프로그램의 데이터를 암호화해야 하는 개발자를 지원하기 위해 확장	3		12	1
212	2024-07-08 13:23:02.06309+09	371	['Q202. 애플리케이션은 여러 가용 영역의 Amazon EC2 인스턴스에서 실행됩니다.	3		12	1
213	2024-07-08 13:23:02.067842+09	370	['Q201. 회사는 확장성 및 가용성에 대한 요구 사항을 충족하기 위해 컨테이너에서 중요	3		12	1
214	2024-07-08 13:23:02.072753+09	369	['Q200. 회사에 많은 Amazon EC2 인스턴스를 사용하여 완료하는 매우 동적인 배	3		12	1
215	2024-07-08 13:23:02.077544+09	368	['Q199. 의료 기록 회사는 Amazon EC2 인스턴스에서 애플리케이션을 호스팅하고 	3		12	1
216	2024-07-08 13:23:02.082794+09	367	['Q198. 회사는 온프레미스 데이터 센터의 Kubernetes 클러스터에서 컨테이너화된	3		12	1
217	2024-07-08 13:23:02.087399+09	366	['Q197. 회사에서 인기 있는 노래 클립으로 만든 벨소리를 판매합니다. 벨소리가 포함된	3		12	1
218	2024-07-08 13:23:02.092232+09	365	['Q196. 한 회사는 사용자가 사진을 업로드하고 이미지에 액자를 추가할 수 있는 이미지	3		12	1
219	2024-07-08 13:23:02.097657+09	364	['Q195. 회사의 웹 애플리케이션이 Application Load Balancer 뒤의	3		12	1
220	2024-07-08 13:23:02.102758+09	363	['Q194. 솔루션 아키텍트가 다가오는 뮤지컬 이벤트를 위해 웹사이트를 최적화하고 있습니	3		12	1
221	2024-07-08 13:23:02.107378+09	362	['Q193. 회사에서 Amazon 머신 이미지(AMI)를 관리하려고 합니다. 회사는 현재	3		12	1
222	2024-07-08 13:23:02.112082+09	361	['Q192. 회사는 UDP 연결을 사용하는 VoIP(Voice over Internet 	3		12	1
223	2024-07-08 13:23:02.116748+09	360	['Q191. 회사에서 새로운 동적 주문 웹사이트를 구축하고 있습니다. 회사는 서버 유지 	3		12	1
224	2024-07-08 13:23:02.121375+09	359	['Q190. 회사는 AWS에서 고성능 컴퓨팅(HPC) 워크로드를 실행합니다. 워크로드에는	3		12	1
225	2024-07-08 13:23:02.12647+09	358	['Q189. 애플리케이션은 VPC의 Amazon EC2 인스턴스에서 실행됩니다. 애플리케	3		12	1
226	2024-07-08 13:23:02.132142+09	357	['Q188. 회사는 Amazon Route 53에 도메인 이름을 등록했습니다. 이 회사는	3		12	1
227	2024-07-08 13:23:02.137557+09	356	['Q187. 회사에 소프트웨어 엔지니어링에 사용되는 AWS 계정이 있습니다. AWS 계정	3		12	1
228	2024-07-08 13:23:02.14215+09	355	['Q186. 회사에서 새로운 서버리스 워크로드를 배포할 준비를 하고 있습니다. 솔루션 설	3		12	1
229	2024-07-08 13:23:02.14686+09	354	['Q185. 솔루션 설계자는 회사가 온프레미스 인프라를 AWS로 확장하기 위해 새로운 하	3		12	1
230	2024-07-08 13:23:02.151982+09	353	['Q184. 한 회사에서 애플리케이션을 서버리스 솔루션으로 이동하려고 합니다. 서버리스 	3		12	1
231	2024-07-08 13:23:02.157535+09	352	['Q183. 회사는 애플리케이션에 대한 실시간 데이터 수집 아키텍처를 구성해야 합니다. 	3		12	1
232	2024-07-08 13:23:02.162972+09	351	['Q182. 한 회사는 Amazon DynamoDB를 사용하여 고객 정보를 저장하는 쇼핑	3		12	1
233	2024-07-08 13:23:02.168185+09	350	['Q181. 회사는 회사의 기본 웹 사이트를 사용할 수 없는 경우 사용자를 백업 정적 오	3		12	1
234	2024-07-08 13:23:02.173216+09	349	['Q180. 회사는 AWS에서 전자 상거래 웹 애플리케이션을 구축하고 있습니다. 애플리케	3		12	1
235	2024-07-08 13:23:02.17842+09	348	['Q179. 회사는 AWS 클라우드에서 호스팅되는 미디어 애플리케이션을 위한 공유 스토리	3		12	1
236	2024-07-08 13:23:02.183236+09	347	['Q178. 회사에 Amazon EC2 인스턴스에서 실행되고 Amazon Aurora 데	3		12	1
237	2024-07-08 13:23:02.188194+09	346	['Q177. 개발 팀은 다른 팀이 액세스할 웹사이트를 호스팅해야 합니다. 웹사이트 콘텐츠	3		12	1
238	2024-07-08 13:23:02.192475+09	345	['Q176. 한 엔터테인먼트 회사에서 Amazon DynamoDB를 사용하여 미디어 메타	3		12	1
239	2024-07-08 13:23:02.196674+09	344	['Q175. 회사의 주문 시스템은 클라이언트에서 Amazon EC2 인스턴스로 요청을 보	3		12	1
240	2024-07-08 13:23:02.200967+09	343	['Q173. 회사에 Amazon EC2 인스턴스에서 실행되는 레거시 데이터 처리 애플리케	3		12	1
241	2024-07-08 13:23:02.205362+09	342	['Q172. 회사는 AWS 클라우드에서 애플리케이션을 구축하고 있습니다. 애플리케이션은 	3		12	1
242	2024-07-08 13:23:02.209537+09	341	['Q171. 회사에 두 개의 Amazon EC2 인스턴스에서 호스팅되는 동적 웹 애플리케	3		12	1
243	2024-07-08 13:23:02.214199+09	340	['Q169. 회사의 애플리케이션은 데이터 수집을 위해 여러 SaaS(Software-as	3		12	1
390	2024-07-08 13:23:06.118282+09	193	['Q222. 회사 데이터 센터의 NAS(Network Attached Storage)에 	3		12	1
244	2024-07-08 13:23:02.218989+09	339	['Q168. 회사에서 온프레미스 애플리케이션을 AWS로 마이그레이션하려고 합니다. 애플리	3		12	1
245	2024-07-08 13:23:02.223777+09	338	['Q167. 회사는 MySQL 데이터베이스로 구동되는 온프레미스 애플리케이션을 실행합니다	3		12	1
246	2024-07-08 13:23:02.229066+09	337	['Q166. 응용 프로그램을 사용하면 회사 본사의 사용자가 제품 데이터에 액세스할 수 있	3		12	1
247	2024-07-08 13:23:02.234272+09	336	['Q164. 회사는 1주일 동안 진행될 예정된 이벤트를 위해 특정 AWS 리전의 3개의 	3		12	1
248	2024-07-08 13:23:02.238851+09	335	['Q163. 한 회사는 최근 AWS 계정의 Amazon EC2 인스턴스에서 다양한 새로운	3		12	1
249	2024-07-08 13:23:02.243937+09	334	['Q162. 회사는 온프레미스에 컨테이너화된 애플리케이션을 구축하고 있으며 애플리케이션을	3		12	1
250	2024-07-08 13:23:02.248548+09	333	['Q161. 회사는 대규모 Amazon EC2 인스턴스 집합에서 애플리케이션을 실행합니다	3		12	1
251	2024-07-08 13:23:02.255775+09	332	['Q159. 솔루션 설계자가 애플리케이션을 위한 새로운 Amazon CloudFront 	3		12	1
252	2024-07-08 13:23:02.261579+09	331	['Q158. 회사에서 AWS에 새로운 공개 웹 애플리케이션을 배포하고 있습니다. 애플리케	3		12	1
253	2024-07-08 13:23:02.266624+09	330	['Q157. 게임 회사에 점수를 표시하는 웹 응용 프로그램이 있습니다. 애플리케이션은 A	3		12	1
254	2024-07-08 13:23:02.271394+09	329	['Q156. 회사는 여러 가용 영역의 Amazon EC2 인스턴스에서 실행되는 웹 기반 	3		12	1
255	2024-07-08 13:23:02.276389+09	328	['Q155. 회사는 Amazon S3를 사용하여 기밀 감사 문서를 저장합니다. S3 버킷	3		12	1
256	2024-07-08 13:23:02.281293+09	327	['Q154. 한 회사는 최근에 메시지 처리 시스템을 AWS로 마이그레이션했습니다. 시스템	3		12	1
257	2024-07-08 13:23:02.286302+09	326	['Q153. 회사는 품목 가격을 기반으로 세금 계산 조회를 자동화하는 API를 사용자에게	3		12	1
258	2024-07-08 13:23:02.291213+09	325	['Q152. 회사는 중요한 애플리케이션에 대한 애플리케이션 로그 파일을 10년 동안 보관	3		12	1
259	2024-07-08 13:23:02.296625+09	324	['Q151. 글로벌 회사는 ALB(Application Load Balancer) 뒤의 	3		12	1
260	2024-07-08 13:23:02.302251+09	323	['Q150. 회사에서 Amazon S3 Standard 스토리지를 사용하여 백업 파일을 	3		12	1
261	2024-07-08 13:23:02.307413+09	322	['Q149. 솔루션 설계자는 AWS 클라우드에 배포되는 새 애플리케이션의 아키텍처를 설계	3		12	1
262	2024-07-08 13:23:02.312185+09	321	['Q148. 회사에 AWS에 배포된 3계층 웹 애플리케이션이 있습니다. 웹 서버는 VPC	3		12	1
263	2024-07-08 13:23:02.317574+09	320	['Q147. 회사의 컨테이너화된 애플리케이션은 Amazon EC2 인스턴스에서 실행됩니다	3		12	1
264	2024-07-08 13:23:02.321928+09	319	['Q145. 회사는 독점 애플리케이션의 로그 파일을 분석할 수 있는 능력이 필요합니다. 	3		12	1
265	2024-07-08 13:23:02.326592+09	318	['Q144. AA 회사의 동적 웹 사이트는 미국의 온프레미스 서버를 사용하여 호스팅됩니다	3		12	1
266	2024-07-08 13:23:02.330877+09	317	['Q143. 회사는 의료 시험의 결과를 Amazon S3 리포지토리에 저장해야 합니다. 	3		12	1
267	2024-07-08 13:23:02.335416+09	316	['Q142. 최근에 AWS로 마이그레이션한 회사가 프로덕션 VPC로 들어오고 나가는 트래	3		12	1
268	2024-07-08 13:23:02.339789+09	315	['Q141. 회사는 Amazon S3에서 정적 웹 사이트를 호스팅하고 DNS에 Amazo	3		12	1
269	2024-07-08 13:23:02.344009+09	314	['Q140. 회사는 가장 최근 청구서에서 Amazon EC2 비용 증가를 관찰했습니다. 	3		12	1
270	2024-07-08 13:23:02.348209+09	313	['Q139. 전자 상거래 회사에 Amazon API Gateway와 AWS Lambda 	3		12	1
271	2024-07-08 13:23:02.357075+09	312	['Q138. 회사는 매월 통화 기록 파일을 저장합니다. 사용자는 통화 후 1년 이내에 파	3		12	1
272	2024-07-08 13:23:02.361575+09	311	['Q137. 전자 상거래 회사는 AWS에서 하루 1회 웹 사이트를 시작하려고 합니다. 매	3		12	1
273	2024-07-08 13:23:02.365537+09	310	['Q136. 회사는 AWS 인프라에 대한 월별 유지 관리를 수행합니다. 이러한 유지 관리	3		12	1
274	2024-07-08 13:23:02.369186+09	309	['Q135. 회사에는 다음 구성 요소가 포함된 데이터 수집 워크플로가 있습니다. 새로운 	3		12	1
275	2024-07-08 13:23:02.373499+09	308	['Q134. 회사에 다양한 런타임으로 AWS Lambda 함수를 분당 최대 800번 호출	3		12	1
276	2024-07-08 13:23:02.397104+09	307	['Q133. 솔루션 설계자는 애플리케이션이 Amazon RDS DB 인스턴스에 액세스하는	3		12	1
277	2024-07-08 13:23:02.401894+09	306	['Q132. 게임 회사는 AWS에서 브라우저 기반 애플리케이션을 호스팅합니다. 애플리케이	3		12	1
278	2024-07-08 13:23:02.406055+09	305	['Q131. 회사에서 분산 애플리케이션을 AWS로 마이그레이션하고 있습니다. 애플리케이션	3		12	1
279	2024-07-08 13:23:02.410147+09	304	['Q130. 회사는 AWS 클라우드를 사용하여 기존 애플리케이션을 고가용성 및 복원력으로	3		12	1
280	2024-07-08 13:23:02.414354+09	303	['Q129. AA 회사는 애플리케이션의 성능을 개선하기 위해 다계층 애플리케이션을 온프레	3		12	1
281	2024-07-08 13:23:02.418634+09	302	['Q128. 회사는 여러 Amazon EC2 인스턴스에서 애플리케이션을 호스팅합니다. 애	3		12	1
282	2024-07-08 13:23:02.423298+09	301	['Q127. 회사는 단일 VPC의 Amazon EC2 인스턴스에서 고가용성 이미지 처리 	3		12	1
283	2024-07-08 13:23:02.427837+09	300	['Q126. 솔루션 설계자는 회사의 고객 대면 애플리케이션을 설계하고 있습니다. 애플리케	3		12	1
284	2024-07-08 13:23:02.432379+09	299	['Q125. 회사는 온프레미스 서버에서 Amazon EC2 인스턴스로 애플리케이션을 마이	3		12	1
285	2024-07-08 13:23:02.438458+09	298	['Q123. 회사에서 새 애플리케이션을 시작하고 Amazon CloudWatch 대시보드	3		12	1
286	2024-07-08 13:23:02.443349+09	297	['Q122. 회사에 AWS에서 호스팅되는 웹 사이트가 있습니다. 웹 사이트는 HTTP와 	3		12	1
287	2024-07-08 13:23:02.447421+09	296	['Q121. 솔루션 설계자는 퍼블릭 및 프라이빗 서브넷이 있는 VPC를 설계하고 있습니다	3		12	1
288	2024-07-08 13:23:02.451897+09	295	['Q120. 회사에는 공통 Amazon RDS MySQL 다중 AZ DB 인스턴스에 자주	3		12	1
289	2024-07-08 13:23:02.457408+09	294	['Q119. 솔루션 설계자는 Amazon S3 오리진과 함께 Amazon CloudFro	3		12	1
290	2024-07-08 13:23:02.46167+09	293	['Q118. 회사에서 Amazon EC2 인스턴스에서 배치 애플리케이션을 실행하고 있습니	3		12	1
291	2024-07-08 13:23:02.465959+09	292	['Q117. 솔루션 설계자는 Amazon S3를 사용하여 새로운 디지털 미디어 애플리케이	3		12	1
980	2024-07-08 16:03:51.074564+09	1342	aws object (1342)	3		12	1
292	2024-07-08 13:23:02.47057+09	291	['Q115. 회사는 AWS에서 전자 상거래 애플리케이션을 실행합니다. 모든 새 주문은 단	3		12	1
293	2024-07-08 13:23:02.476003+09	290	['Q113. 자전거 공유 회사는 피크 운영 시간 동안 자전거의 위치를 추적하기 위해 다층	3		12	1
294	2024-07-08 13:23:02.480859+09	289	['Q112. 회사는 AWS에서 여러 Windows 워크로드를 실행합니다. 회사 직원은 두	3		12	1
295	2024-07-08 13:23:02.489649+09	288	['Q111. 회사에서 AWS 클라우드의 Auto Scaling 그룹에 속한 Amazon 	3		12	1
296	2024-07-08 13:23:02.494845+09	287	['Q110. 회사는 사용자 트랜잭션 데이터를 Amazon DynamoDB 테이블에 보관해	3		12	1
297	2024-07-08 13:23:02.500114+09	286	['Q109. 회사 웹 사이트는 항목 카탈로그에 Amazon EC2 인스턴스 스토어를 사용	3		12	1
298	2024-07-08 13:23:02.508746+09	285	['Q108. 회사는 기존 3계층 웹 아키텍처의 비용을 절감하려고 합니다. 웹, 애플리케이	3		12	1
299	2024-07-08 13:23:02.513838+09	284	['Q107. 회사는 사용자 요청을 수집하고 요청 유형에 따라 처리를 위해 적절한 마이크로	3		12	1
300	2024-07-08 13:23:02.518955+09	283	['Q106. 회사는 NFS를 사용하여 온프레미스 네트워크 연결 스토리지에 대용량 비디오 	3		12	1
301	2024-07-08 13:23:02.524186+09	282	['Q105. 글로벌 이벤트 주최자는 일일 보고서를 정적 HTML 페이지로 온라인에 게시하	3		12	1
302	2024-07-08 13:23:02.528935+09	281	['Q104. 팀의 모든 AWS 계정에서 특정 서비스 또는 작업에 대한 액세스를 제한하는 	3		12	1
303	2024-07-08 13:23:02.533178+09	280	['Q103. 대규모 미디어 회사는 AWS에서 웹 애플리케이션을 호스팅합니다. 이 회사는 	3		12	1
304	2024-07-08 13:23:05.711981+09	279	['Q102. 회사의 웹사이트는 사용자에게 다운로드 가능한 과거 성과 보고서를 제공합니다.	3		12	1
305	2024-07-08 13:23:05.717421+09	278	['Q100. 게임 회사는 고가용성 아키텍처를 설계하고 있습니다. 애플리케이션은 수정된 L	3		12	1
306	2024-07-08 13:23:05.72193+09	277	['Q99. 회사는 AWS 클라우드에서 웹 애플리케이션을 호스팅합니다. 회사는 AWS Ce	3		12	1
307	2024-07-08 13:23:05.726792+09	276	['Q98. 회사는 Amazon S3에 회계 기록을 저장해야 합니다. 기록은 1년 동안 즉	3		12	1
308	2024-07-08 13:23:05.731561+09	275	['Q97. 회사는 AWS에서 워크로드를 실행합니다. 회사는 외부 공급자의 서비스에 연결해	3		12	1
309	2024-07-08 13:23:05.740082+09	274	['Q96. 회사에 AWS로 마이그레이션해야 하는 Windows 기반 애플리케이션이 있습니	3		12	1
310	2024-07-08 13:23:05.744097+09	273	['Q95. 한 회사에 데이터베이스에 주문을 작성하고 결제를 처리하기 위해 서비스를 호출하	3		12	1
311	2024-07-08 13:23:05.748382+09	272	['Q94. 한 회사는 최근 애플리케이션 마이그레이션 이니셔티브에 대한 지원을 위해 AWS	3		12	1
312	2024-07-08 13:23:05.753445+09	271	['Q93. 회사에서 데이터 저장을 위해 Amazon DynamoDB 테이블을 사용할 계획	3		12	1
313	2024-07-08 13:23:05.758292+09	270	['Q92. 한 미디어 회사가 시스템을 AWS 클라우드로 이전할 가능성을 평가하고 있습니다	3		12	1
314	2024-07-08 13:23:05.763314+09	269	['Q91. 회사는 AWS Organizations를 사용하여 각 사업부에 대한 전용 AW	3		12	1
315	2024-07-08 13:23:05.768289+09	268	['Q89. 회사는 Amazon ECS를 사용하여 애플리케이션을 실행합니다. 애플리케이션은	3		12	1
316	2024-07-08 13:23:05.773175+09	267	['Q88. 한 회사에서 인기 있는 소셜 미디어 웹사이트를 운영하고 있습니다. 웹사이트는 	3		12	1
317	2024-07-08 13:23:05.777662+09	266	['Q87. 회사에 이벤트 데이터를 생성하는 서비스가 있습니다. 회사는 AWS를 사용하여 	3		12	1
318	2024-07-08 13:23:05.782622+09	265	['Q86. 회사는 ALB(Application Load Balancer) 뒤에 있는 Am	3		12	1
319	2024-07-08 13:23:05.786989+09	264	['Q85. 회사에 Java 및 PHP를 기반으로 하는 웹 응용 프로그램이 있습니다. 회사	3		12	1
320	2024-07-08 13:23:05.791845+09	263	['Q83. 회사는 여러 대륙에 걸쳐 도시의 온도, 습도 및 대기압 데이터를 수집합니다. 	3		12	1
321	2024-07-08 13:23:05.79707+09	262	['Q82. 회사에서 기존 온프레미스 모놀리식 애플리케이션을 AWS로 마이그레이션하려고 합	3		12	1
322	2024-07-08 13:23:05.802048+09	261	['Q81. 회사는 Amazon CloudWatch Logs 로그 그룹에 애플리케이션 로그	3		12	1
323	2024-07-08 13:23:05.806854+09	260	['Q80. 회사는 새로운 비즈니스 애플리케이션을 구현하고 있습니다. 애플리케이션은 두 개	3		12	1
324	2024-07-08 13:23:05.811956+09	259	['Q79. 온라인 소매 회사는 5천만 명 이상의 활성 고객을 보유하고 있으며 매일 25,	3		12	1
325	2024-07-08 13:23:05.816877+09	258	['Q78. 회사에 Amazon S3에 백업되는 시간에 민감한 대량의 데이터를 생성하는 온	3		12	1
326	2024-07-08 13:23:05.821661+09	257	['Q77. Amazon EC2 관리자는 여러 사용자가 포함된 IAM 그룹과 연결된 다음 	3		12	1
327	2024-07-08 13:23:05.826711+09	256	['Q76. 회사는 온프레미스 데이터 센터에서 마케팅 웹사이트를 호스팅합니다. 웹 사이트는	3		12	1
328	2024-07-08 13:23:05.83154+09	255	['Q75. 회사는 Application Load Balancer 뒤의 Amazon EC2	3		12	1
329	2024-07-08 13:23:05.836093+09	254	['Q74. 애플리케이션은 프라이빗 서브넷의 Amazon EC2 인스턴스에서 실행됩니다. 	3		12	1
330	2024-07-08 13:23:05.840898+09	253	['Q73. 회사는 AWS 클라우드 배포를 검토하여 Amazon S3 버킷에 무단 구성 변	3		12	1
331	2024-07-08 13:23:05.846737+09	252	['Q72. 글로벌 회사는 Amazon API Gateway를 사용하여 us-east-1 	3		12	1
332	2024-07-08 13:23:05.851401+09	251	['Q71. 회사에 매장에 마케팅 서비스를 제공하는 애플리케이션이 있습니다. 매장 고객의 	3		12	1
333	2024-07-08 13:23:05.856208+09	250	['Q70. 한 회사가 AWS 클라우드에서 공개 웹 애플리케이션 출시를 준비하고 있습니다.	3		12	1
334	2024-07-08 13:23:05.861516+09	249	['Q69. 회사는 us-east-1 리전 내의 3개의 개별 VPC에서 여러 비즈니스 애플	3		12	1
335	2024-07-08 13:23:05.866375+09	248	['Q67. 회사는 Amazon S3에 데이터를 저장해야 하며 데이터가 변경되지 않도록 해	3		12	1
336	2024-07-08 13:23:05.871374+09	247	['Q66. 회사는 Application Load Balancer 뒤의 Amazon EC2	3		12	1
337	2024-07-08 13:23:05.876325+09	246	['Q65. 설문 조사 회사는 미국 지역에서 수년 동안 데이터를 수집했습니다. 이 회사는 	3		12	1
338	2024-07-08 13:23:05.881944+09	245	['Q64. 회사는 AWS에서 OLTP(온라인 트랜잭션 처리: online transact	3		12	1
339	2024-07-08 13:23:05.886567+09	244	['Q63. 이미지 처리 회사에는 사용자가 이미지를 업로드하는 데 사용하는 웹 응용 프로그	3		12	1
340	2024-07-08 13:23:05.891457+09	243	['Q62. 회사는 AWS에서 데이터 레이크를 호스팅합니다. 데이터 레이크는 Amazon 	3		12	1
341	2024-07-08 13:23:05.896526+09	242	['Q61. 회사에는 매일 1TB의 상태 알림을 집합적으로 생성하는 수천 개의 에지 장치가	3		12	1
342	2024-07-08 13:23:05.900541+09	241	['Q60. 회사는 300개 이상의 글로벌 웹사이트 및 애플리케이션을 호스팅합니다. 이 회	3		12	1
343	2024-07-08 13:23:05.904048+09	240	['Q59. 회사에서 AWS 클라우드의 컨테이너에서 애플리케이션을 실행하려고 합니다. 이러	3		12	1
344	2024-07-08 13:23:05.907823+09	239	['Q58. 회사에서 데이터를 Amazon S3 버킷으로 이동할 계획입니다. 데이터는 S3	3		12	1
345	2024-07-08 13:23:05.9118+09	238	['Q57. 회사는 온프레미스에서 Oracle 데이터베이스를 실행합니다. 회사는 AWS로 	3		12	1
346	2024-07-08 13:23:05.916684+09	237	['Q56. 회사에 1,000개의 Amazon EC2 Linux 인스턴스에서 실행되는 프로	3		12	1
347	2024-07-08 13:23:05.920246+09	236	['Q55. AWS에서 웹 애플리케이션을 호스팅하는 회사는 모든 Amazon EC2 인스턴	3		12	1
348	2024-07-08 13:23:05.923909+09	235	['Q54. 회사에 VPC의 Amazon EC2 인스턴스에서 실행되는 애플리케이션이 있습니	3		12	1
349	2024-07-08 13:23:05.927687+09	234	['Q53. 회사에 사용자가 웹 인터페이스 또는 모바일 앱을 통해 문서를 업로드하는 프로덕	3		12	1
350	2024-07-08 13:23:05.931713+09	233	['Q52. 빠르게 성장하는 전자 상거래 회사는 단일 AWS 리전에서 워크로드를 실행하고 	3		12	1
351	2024-07-08 13:23:05.952853+09	232	['Q50. 솔루션 설계자는 회사의 스토리지 비용을 줄이기 위한 솔루션을 구현해야 합니다.	3		12	1
352	2024-07-08 13:23:05.960618+09	231	['Q49. 회사에서 3계층 웹 응용 프로그램을 사용하여 신입 직원에게 교육을 제공합니다.	3		12	1
353	2024-07-08 13:23:05.965489+09	230	['Q48. 한 회사에서 사용자가 Amazon S3에 작은 파일을 업로드하는 애플리케이션을	3		12	1
354	2024-07-08 13:23:05.97032+09	229	['Q47. 회사는 Amazon EC2 인스턴스 집합에서 프로덕션 애플리케이션을 실행합니다	3		12	1
355	2024-07-08 13:23:05.976077+09	228	['Q46. 솔루션 설계자는 AWS에 배포되는 새 애플리케이션을 위한 클라우드 아키텍처를 	3		12	1
356	2024-07-08 13:23:05.981353+09	227	['Q45. 한 회사는 사용자에게 글로벌 속보, 지역 경보 및 날씨 업데이트를 제공하는 웹	3		12	1
357	2024-07-08 13:23:05.986588+09	226	['Q44. 솔루션 설계자가 다중 서브넷 VPC 아키텍처를 개발 중입니다. 솔루션은 2개의	3		12	1
358	2024-07-08 13:23:05.99213+09	225	['Q43. 회사는 사용자 업로드 문서를 Amazon EBS 볼륨에 저장하는 단일 Amaz	3		12	1
359	2024-07-08 13:23:05.997144+09	224	['Q42. 회사에서 SQL 데이터베이스를 사용하여 공개적으로 액세스할 수 있는 영화 데이	3		12	1
360	2024-07-08 13:23:06.001833+09	223	['Q41. 회사에서 애플리케이션을 AWS로 마이그레이션하고 있습니다. 응용 프로그램은 다	3		12	1
361	2024-07-08 13:23:06.00632+09	222	['Q40. 회사에는 Microsoft Windows 공유 파일 저장소가 필요한 온프레미스	3		12	1
362	2024-07-08 13:23:06.011167+09	221	['Q39. 회사에서 동일한 AWS 리전의 테스트 환경에 대량의 프로덕션 데이터를 복제하는	3		12	1
363	2024-07-08 13:23:06.016125+09	220	['Q34. 회사는 AWS 에서 온라인 마켓플레이스 웹 애플리케이션을 실행합니다. 이 애플	3		12	1
364	2024-07-08 13:23:06.020097+09	219	['Q33. 회사는 Application Load Balancer 뒤의 Amazon EC2	3		12	1
365	2024-07-08 13:23:06.024046+09	218	['Q31. 회사에서 새 애플리케이션을 시작하고 Amazon CloudWatch 대시보드에	3		12	1
366	2024-07-08 13:23:06.02812+09	217	['Q30. 회사는 Amazon EC2 인스턴스에서 Amazon S3 버킷으로 데이터를 이	3		12	1
367	2024-07-08 13:23:06.032009+09	216	['Q29. 한 회사에 Amazon RDS 의 데이터베이스에 목록을 저장하는 자동차 판매 	3		12	1
368	2024-07-08 13:23:06.036021+09	215	['Q28. 회사에는 ALB(Application Load Balancer) 뒤의 단일 가	3		12	1
369	2024-07-08 13:23:06.039675+09	214	['Q26. 회사는 AWS Organizations 를 사용하여 여러 부서의 여러 AWS 	3		12	1
370	2024-07-08 13:23:06.043685+09	213	['Q24. 회사는 최근 웹 공격으로 인해 공개 웹 응용 프로그램의 보안에 대해 우려하고 	3		12	1
371	2024-07-08 13:23:06.047687+09	212	['Q23. 회사는 웹 사이트에서 검색 가능한 항목 저장소를 유지 관리합니다. 데이터는 천	3		12	1
372	2024-07-08 13:23:06.051726+09	211	['Q22. 회사는 AWS 에서 인프라를 실행하고 문서 관리 애플리케이션에 대해 700,0	3		12	1
373	2024-07-08 13:23:06.055547+09	210	['Q21. 회사는 보고를 위해 50TB 의 데이터를 사용합니다. 회사는 이 데이터를 온프	3		12	1
374	2024-07-08 13:23:06.059417+09	209	['Q20. 한 회사에서 Amazon S3 버킷을 스토리지로 사용할 파일 공유 애플리케이션	3		12	1
375	2024-07-08 13:23:06.063284+09	208	['Q19. 회사는 데이터 센터에서 SMB 파일 서버를 실행하고 있습니다. 파일 서버는 파	3		12	1
376	2024-07-08 13:23:06.066815+09	207	['Q18. 텔레마케팅 회사는 AWS 에서 고객 콜 센터 기능을 설계하고 있습니다. 회사는	3		12	1
377	2024-07-08 13:23:06.070127+09	206	['Q16. 회사에서 Amazon S3 에 기밀 데이터를 저장할 준비를 하고 있습니다. 규	3		12	1
378	2024-07-08 13:23:06.073632+09	205	['Q14. 회사는 Application Load Balancer 뒤의 Amazon EC2	3		12	1
379	2024-07-08 13:23:06.077209+09	204	['Q13. 회사의 응용 프로그램에 성능 문제가 있습니다. 애플리케이션은 스테이트풀(Sta	3		12	1
380	2024-07-08 13:23:06.08107+09	203	['Q12. 회사는 AWS 에서 다중 계층 애플리케이션을 호스팅합니다. 규정 준수, 거버넌	3		12	1
381	2024-07-08 13:23:06.084673+09	202	['Q11. 회사에는 매일 동시에 실행되는 AWS Glue 추출, 변환 및 로드(ETL) 	3		12	1
382	2024-07-08 13:23:06.088489+09	201	['Q10. 회사는 재무 위험 모델링을 위해 AWS 에서 고성능 컴퓨팅(HPC) 인프라를 	3		12	1
383	2024-07-08 13:23:06.092058+09	200	['Q8. 회사는 Amazon API Gateway API 에 의해 호출되는 AWS Lam	3		12	1
384	2024-07-08 13:23:06.096104+09	199	['Q6. 회사에 들어오는 메시지를 수집하는 응용 프로그램이 있습니다. 그런 다음 이러한 	3		12	1
385	2024-07-08 13:23:06.099559+09	198	['Q5. 회사의 HTTP 애플리케이션은 NLB(Network Load Balancer) 	3		12	1
386	2024-07-08 13:23:06.102954+09	197	['Q4. 회사는 Application Load Balancer 뒤의 Amazon EC2 	3		12	1
387	2024-07-08 13:23:06.106378+09	196	['Q3. 회사는 동일한 AWS 리전에 있는 Amazon S3 버킷에서 사진을 자주 업로드	3		12	1
388	2024-07-08 13:23:06.11015+09	195	['Q2. 회사는 AWS 에서 호스팅되는 서비스 솔루션으로 고성능 컴퓨팅(HPC) 워크로드	3		12	1
389	2024-07-08 13:23:06.114661+09	194	['Q1. 전자 상거래 회사는 AWS 클라우드에서 분석 애플리케이션을 호스팅합니다. 애플리	3		12	1
981	2024-07-08 16:03:51.079191+09	1341	aws object (1341)	3		12	1
391	2024-07-08 13:23:06.122142+09	192	['Q221. 회사는 AWS에서 애플리케이션을 호스팅합니다. 회사는 Amazon Cogni	3		12	1
392	2024-07-08 13:23:06.126131+09	191	['Q220. 개발 팀은 성능 개선 도우미가 활성화된 MySQL DB 인스턴스용 범용 Am	3		12	1
393	2024-07-08 13:23:06.130841+09	190	['Q219. 한 회사가 AWS에서 2계층 웹 애플리케이션을 개발하고 있습니다. 회사 개발	3		12	1
394	2024-07-08 13:23:06.135177+09	189	['Q218. 회사는 들어오는 요청을 처리하는 온프레미스 서버 집합에서 컨테이너화된 웹 애	3		12	1
395	2024-07-08 13:23:06.139528+09	188	['Q216. 회사는 단일 공장에 있는 여러 기계에서 매일 10TB의 계측 데이터를 수신합	3		12	1
396	2024-07-08 13:23:06.144266+09	187	['Q215. 회사에서 MySQL 데이터베이스를 온프레미스에서 AWS로 마이그레이션하려고 	3		12	1
397	2024-07-08 13:23:06.149576+09	186	['Q214. 솔루션 설계자는 AWS 클라우드에 배포되는 새 애플리케이션의 아키텍처를 설계	3		12	1
398	2024-07-08 13:23:06.153738+09	185	['Q213. 한 회사는 최근 글로벌 전자 상거래 애플리케이션의 데이터 저장소로 Amazo	3		12	1
399	2024-07-08 13:23:06.158374+09	184	['Q210. 회사에 각각 크기가 약 5MB인 많은 수의 파일을 생성하는 응용 프로그램이 	3		12	1
400	2024-07-08 13:23:06.163221+09	183	['Q209. 회사는 단일 Amazon EC2 온디맨드 인스턴스에서 웹 사이트 분석 애플리	3		12	1
401	2024-07-08 13:23:06.169277+09	182	['Q208. 회사에는 처리할 페이로드가 있는 메시지를 보내는 발신자 응용 프로그램과 페이	3		12	1
402	2024-07-08 13:23:06.174366+09	181	['Q207. 병원은 최근 Amazon API Gateway 및 AWS Lambda와 함께	3		12	1
403	2024-07-08 13:23:06.179419+09	180	['Q206. 회사는 Amazon EC2 인스턴스 및 Amazon RDS에서 2계층 애플리	3		12	1
404	2024-07-08 13:23:15.686021+09	179	['Q203. 회사는 응용 프로그램의 데이터를 암호화해야 하는 개발자를 지원하기 위해 확장	3		12	1
405	2024-07-08 13:23:15.692165+09	178	['Q202. 애플리케이션은 여러 가용 영역의 Amazon EC2 인스턴스에서 실행됩니다.	3		12	1
406	2024-07-08 13:23:15.697312+09	177	['Q201. 회사는 확장성 및 가용성에 대한 요구 사항을 충족하기 위해 컨테이너에서 중요	3		12	1
407	2024-07-08 13:23:15.71425+09	176	['Q200. 회사에 많은 Amazon EC2 인스턴스를 사용하여 완료하는 매우 동적인 배	3		12	1
408	2024-07-08 13:23:15.719053+09	175	['Q199. 의료 기록 회사는 Amazon EC2 인스턴스에서 애플리케이션을 호스팅하고 	3		12	1
409	2024-07-08 13:23:15.723405+09	174	['Q198. 회사는 온프레미스 데이터 센터의 Kubernetes 클러스터에서 컨테이너화된	3		12	1
410	2024-07-08 13:23:15.728517+09	173	['Q197. 회사에서 인기 있는 노래 클립으로 만든 벨소리를 판매합니다. 벨소리가 포함된	3		12	1
411	2024-07-08 13:23:15.734026+09	172	['Q196. 한 회사는 사용자가 사진을 업로드하고 이미지에 액자를 추가할 수 있는 이미지	3		12	1
412	2024-07-08 13:23:15.739257+09	171	['Q195. 회사의 웹 애플리케이션이 Application Load Balancer 뒤의	3		12	1
413	2024-07-08 13:23:15.744423+09	170	['Q194. 솔루션 아키텍트가 다가오는 뮤지컬 이벤트를 위해 웹사이트를 최적화하고 있습니	3		12	1
414	2024-07-08 13:23:15.749934+09	169	['Q193. 회사에서 Amazon 머신 이미지(AMI)를 관리하려고 합니다. 회사는 현재	3		12	1
415	2024-07-08 13:23:15.754948+09	168	['Q192. 회사는 UDP 연결을 사용하는 VoIP(Voice over Internet 	3		12	1
416	2024-07-08 13:23:15.760014+09	167	['Q191. 회사에서 새로운 동적 주문 웹사이트를 구축하고 있습니다. 회사는 서버 유지 	3		12	1
417	2024-07-08 13:23:15.764919+09	166	['Q190. 회사는 AWS에서 고성능 컴퓨팅(HPC) 워크로드를 실행합니다. 워크로드에는	3		12	1
418	2024-07-08 13:23:15.770456+09	165	['Q189. 애플리케이션은 VPC의 Amazon EC2 인스턴스에서 실행됩니다. 애플리케	3		12	1
419	2024-07-08 13:23:15.775531+09	164	['Q188. 회사는 Amazon Route 53에 도메인 이름을 등록했습니다. 이 회사는	3		12	1
420	2024-07-08 13:23:15.780045+09	163	['Q187. 회사에 소프트웨어 엔지니어링에 사용되는 AWS 계정이 있습니다. AWS 계정	3		12	1
421	2024-07-08 13:23:15.784867+09	162	['Q186. 회사에서 새로운 서버리스 워크로드를 배포할 준비를 하고 있습니다. 솔루션 설	3		12	1
422	2024-07-08 13:23:15.789819+09	161	['Q185. 솔루션 설계자는 회사가 온프레미스 인프라를 AWS로 확장하기 위해 새로운 하	3		12	1
423	2024-07-08 13:23:15.795692+09	160	['Q184. 한 회사에서 애플리케이션을 서버리스 솔루션으로 이동하려고 합니다. 서버리스 	3		12	1
424	2024-07-08 13:23:15.801372+09	159	['Q183. 회사는 애플리케이션에 대한 실시간 데이터 수집 아키텍처를 구성해야 합니다. 	3		12	1
425	2024-07-08 13:23:15.805707+09	158	['Q182. 한 회사는 Amazon DynamoDB를 사용하여 고객 정보를 저장하는 쇼핑	3		12	1
426	2024-07-08 13:23:15.809778+09	157	['Q181. 회사는 회사의 기본 웹 사이트를 사용할 수 없는 경우 사용자를 백업 정적 오	3		12	1
427	2024-07-08 13:23:15.814674+09	156	['Q180. 회사는 AWS에서 전자 상거래 웹 애플리케이션을 구축하고 있습니다. 애플리케	3		12	1
428	2024-07-08 13:23:15.81882+09	155	['Q179. 회사는 AWS 클라우드에서 호스팅되는 미디어 애플리케이션을 위한 공유 스토리	3		12	1
429	2024-07-08 13:23:15.823134+09	154	['Q178. 회사에 Amazon EC2 인스턴스에서 실행되고 Amazon Aurora 데	3		12	1
430	2024-07-08 13:23:15.827562+09	153	['Q177. 개발 팀은 다른 팀이 액세스할 웹사이트를 호스팅해야 합니다. 웹사이트 콘텐츠	3		12	1
431	2024-07-08 13:23:15.833017+09	152	['Q176. 한 엔터테인먼트 회사에서 Amazon DynamoDB를 사용하여 미디어 메타	3		12	1
432	2024-07-08 13:23:15.837659+09	151	['Q175. 회사의 주문 시스템은 클라이언트에서 Amazon EC2 인스턴스로 요청을 보	3		12	1
433	2024-07-08 13:23:15.842641+09	150	['Q173. 회사에 Amazon EC2 인스턴스에서 실행되는 레거시 데이터 처리 애플리케	3		12	1
434	2024-07-08 13:23:15.848646+09	149	['Q172. 회사는 AWS 클라우드에서 애플리케이션을 구축하고 있습니다. 애플리케이션은 	3		12	1
435	2024-07-08 13:23:15.853748+09	148	['Q171. 회사에 두 개의 Amazon EC2 인스턴스에서 호스팅되는 동적 웹 애플리케	3		12	1
436	2024-07-08 13:23:15.858036+09	147	['Q169. 회사의 애플리케이션은 데이터 수집을 위해 여러 SaaS(Software-as	3		12	1
437	2024-07-08 13:23:15.862403+09	146	['Q168. 회사에서 온프레미스 애플리케이션을 AWS로 마이그레이션하려고 합니다. 애플리	3		12	1
438	2024-07-08 13:23:15.867367+09	145	['Q167. 회사는 MySQL 데이터베이스로 구동되는 온프레미스 애플리케이션을 실행합니다	3		12	1
982	2024-07-08 16:03:51.08607+09	1340	aws object (1340)	3		12	1
439	2024-07-08 13:23:15.872125+09	144	['Q166. 응용 프로그램을 사용하면 회사 본사의 사용자가 제품 데이터에 액세스할 수 있	3		12	1
440	2024-07-08 13:23:15.877477+09	143	['Q164. 회사는 1주일 동안 진행될 예정된 이벤트를 위해 특정 AWS 리전의 3개의 	3		12	1
441	2024-07-08 13:23:15.883639+09	142	['Q163. 한 회사는 최근 AWS 계정의 Amazon EC2 인스턴스에서 다양한 새로운	3		12	1
442	2024-07-08 13:23:15.888683+09	141	['Q162. 회사는 온프레미스에 컨테이너화된 애플리케이션을 구축하고 있으며 애플리케이션을	3		12	1
443	2024-07-08 13:23:15.893714+09	140	['Q161. 회사는 대규모 Amazon EC2 인스턴스 집합에서 애플리케이션을 실행합니다	3		12	1
444	2024-07-08 13:23:15.899089+09	139	['Q159. 솔루션 설계자가 애플리케이션을 위한 새로운 Amazon CloudFront 	3		12	1
445	2024-07-08 13:23:15.90458+09	138	['Q158. 회사에서 AWS에 새로운 공개 웹 애플리케이션을 배포하고 있습니다. 애플리케	3		12	1
446	2024-07-08 13:23:15.908424+09	137	['Q157. 게임 회사에 점수를 표시하는 웹 응용 프로그램이 있습니다. 애플리케이션은 A	3		12	1
447	2024-07-08 13:23:15.912809+09	136	['Q156. 회사는 여러 가용 영역의 Amazon EC2 인스턴스에서 실행되는 웹 기반 	3		12	1
448	2024-07-08 13:23:15.91743+09	135	['Q155. 회사는 Amazon S3를 사용하여 기밀 감사 문서를 저장합니다. S3 버킷	3		12	1
449	2024-07-08 13:23:15.92105+09	134	['Q154. 한 회사는 최근에 메시지 처리 시스템을 AWS로 마이그레이션했습니다. 시스템	3		12	1
450	2024-07-08 13:23:15.924486+09	133	['Q153. 회사는 품목 가격을 기반으로 세금 계산 조회를 자동화하는 API를 사용자에게	3		12	1
451	2024-07-08 13:23:15.928157+09	132	['Q152. 회사는 중요한 애플리케이션에 대한 애플리케이션 로그 파일을 10년 동안 보관	3		12	1
452	2024-07-08 13:23:15.933455+09	131	['Q151. 글로벌 회사는 ALB(Application Load Balancer) 뒤의 	3		12	1
453	2024-07-08 13:23:15.941834+09	130	['Q150. 회사에서 Amazon S3 Standard 스토리지를 사용하여 백업 파일을 	3		12	1
454	2024-07-08 13:23:15.94687+09	129	['Q149. 솔루션 설계자는 AWS 클라우드에 배포되는 새 애플리케이션의 아키텍처를 설계	3		12	1
455	2024-07-08 13:23:15.952089+09	128	['Q148. 회사에 AWS에 배포된 3계층 웹 애플리케이션이 있습니다. 웹 서버는 VPC	3		12	1
456	2024-07-08 13:23:15.956937+09	127	['Q147. 회사의 컨테이너화된 애플리케이션은 Amazon EC2 인스턴스에서 실행됩니다	3		12	1
457	2024-07-08 13:23:15.961997+09	126	['Q145. 회사는 독점 애플리케이션의 로그 파일을 분석할 수 있는 능력이 필요합니다. 	3		12	1
458	2024-07-08 13:23:15.968121+09	125	['Q144. AA 회사의 동적 웹 사이트는 미국의 온프레미스 서버를 사용하여 호스팅됩니다	3		12	1
459	2024-07-08 13:23:15.97678+09	124	['Q143. 회사는 의료 시험의 결과를 Amazon S3 리포지토리에 저장해야 합니다. 	3		12	1
460	2024-07-08 13:23:15.981022+09	123	['Q142. 최근에 AWS로 마이그레이션한 회사가 프로덕션 VPC로 들어오고 나가는 트래	3		12	1
461	2024-07-08 13:23:15.985495+09	122	['Q141. 회사는 Amazon S3에서 정적 웹 사이트를 호스팅하고 DNS에 Amazo	3		12	1
462	2024-07-08 13:23:15.989517+09	121	['Q140. 회사는 가장 최근 청구서에서 Amazon EC2 비용 증가를 관찰했습니다. 	3		12	1
463	2024-07-08 13:23:15.993558+09	120	['Q139. 전자 상거래 회사에 Amazon API Gateway와 AWS Lambda 	3		12	1
464	2024-07-08 13:23:15.997648+09	119	['Q138. 회사는 매월 통화 기록 파일을 저장합니다. 사용자는 통화 후 1년 이내에 파	3		12	1
465	2024-07-08 13:23:16.001751+09	118	['Q137. 전자 상거래 회사는 AWS에서 하루 1회 웹 사이트를 시작하려고 합니다. 매	3		12	1
466	2024-07-08 13:23:16.005728+09	117	['Q136. 회사는 AWS 인프라에 대한 월별 유지 관리를 수행합니다. 이러한 유지 관리	3		12	1
467	2024-07-08 13:23:16.009528+09	116	['Q135. 회사에는 다음 구성 요소가 포함된 데이터 수집 워크플로가 있습니다. 새로운 	3		12	1
468	2024-07-08 13:23:16.013137+09	115	['Q134. 회사에 다양한 런타임으로 AWS Lambda 함수를 분당 최대 800번 호출	3		12	1
469	2024-07-08 13:23:16.017131+09	114	['Q133. 솔루션 설계자는 애플리케이션이 Amazon RDS DB 인스턴스에 액세스하는	3		12	1
470	2024-07-08 13:23:16.020796+09	113	['Q132. 게임 회사는 AWS에서 브라우저 기반 애플리케이션을 호스팅합니다. 애플리케이	3		12	1
471	2024-07-08 13:23:16.024277+09	112	['Q131. 회사에서 분산 애플리케이션을 AWS로 마이그레이션하고 있습니다. 애플리케이션	3		12	1
472	2024-07-08 13:23:16.027668+09	111	['Q130. 회사는 AWS 클라우드를 사용하여 기존 애플리케이션을 고가용성 및 복원력으로	3		12	1
473	2024-07-08 13:23:16.031644+09	110	['Q129. AA 회사는 애플리케이션의 성능을 개선하기 위해 다계층 애플리케이션을 온프레	3		12	1
474	2024-07-08 13:23:16.03649+09	109	['Q128. 회사는 여러 Amazon EC2 인스턴스에서 애플리케이션을 호스팅합니다. 애	3		12	1
475	2024-07-08 13:23:16.04097+09	108	['Q127. 회사는 단일 VPC의 Amazon EC2 인스턴스에서 고가용성 이미지 처리 	3		12	1
476	2024-07-08 13:23:16.046433+09	107	['Q126. 솔루션 설계자는 회사의 고객 대면 애플리케이션을 설계하고 있습니다. 애플리케	3		12	1
477	2024-07-08 13:23:16.053196+09	106	['Q125. 회사는 온프레미스 서버에서 Amazon EC2 인스턴스로 애플리케이션을 마이	3		12	1
478	2024-07-08 13:23:16.058512+09	105	['Q123. 회사에서 새 애플리케이션을 시작하고 Amazon CloudWatch 대시보드	3		12	1
479	2024-07-08 13:23:16.062594+09	104	['Q122. 회사에 AWS에서 호스팅되는 웹 사이트가 있습니다. 웹 사이트는 HTTP와 	3		12	1
480	2024-07-08 13:23:16.066839+09	103	['Q121. 솔루션 설계자는 퍼블릭 및 프라이빗 서브넷이 있는 VPC를 설계하고 있습니다	3		12	1
481	2024-07-08 13:23:16.070716+09	102	['Q120. 회사에는 공통 Amazon RDS MySQL 다중 AZ DB 인스턴스에 자주	3		12	1
482	2024-07-08 13:23:16.074519+09	101	['Q119. 솔루션 설계자는 Amazon S3 오리진과 함께 Amazon CloudFro	3		12	1
483	2024-07-08 13:23:16.078233+09	100	['Q118. 회사에서 Amazon EC2 인스턴스에서 배치 애플리케이션을 실행하고 있습니	3		12	1
484	2024-07-08 13:23:16.08216+09	99	['Q117. 솔루션 설계자는 Amazon S3를 사용하여 새로운 디지털 미디어 애플리케이	3		12	1
485	2024-07-08 13:23:16.086528+09	98	['Q115. 회사는 AWS에서 전자 상거래 애플리케이션을 실행합니다. 모든 새 주문은 단	3		12	1
486	2024-07-08 13:23:16.090279+09	97	['Q113. 자전거 공유 회사는 피크 운영 시간 동안 자전거의 위치를 추적하기 위해 다층	3		12	1
487	2024-07-08 13:23:16.096157+09	96	['Q112. 회사는 AWS에서 여러 Windows 워크로드를 실행합니다. 회사 직원은 두	3		12	1
488	2024-07-08 13:23:16.111763+09	95	['Q111. 회사에서 AWS 클라우드의 Auto Scaling 그룹에 속한 Amazon 	3		12	1
489	2024-07-08 13:23:16.125141+09	94	['Q110. 회사는 사용자 트랜잭션 데이터를 Amazon DynamoDB 테이블에 보관해	3		12	1
490	2024-07-08 13:23:16.132198+09	93	['Q109. 회사 웹 사이트는 항목 카탈로그에 Amazon EC2 인스턴스 스토어를 사용	3		12	1
491	2024-07-08 13:23:16.137223+09	92	['Q108. 회사는 기존 3계층 웹 아키텍처의 비용을 절감하려고 합니다. 웹, 애플리케이	3		12	1
492	2024-07-08 13:23:16.141653+09	91	['Q107. 회사는 사용자 요청을 수집하고 요청 유형에 따라 처리를 위해 적절한 마이크로	3		12	1
493	2024-07-08 13:23:16.146002+09	90	['Q106. 회사는 NFS를 사용하여 온프레미스 네트워크 연결 스토리지에 대용량 비디오 	3		12	1
494	2024-07-08 13:23:16.151037+09	89	['Q105. 글로벌 이벤트 주최자는 일일 보고서를 정적 HTML 페이지로 온라인에 게시하	3		12	1
495	2024-07-08 13:23:16.155687+09	88	['Q104. 팀의 모든 AWS 계정에서 특정 서비스 또는 작업에 대한 액세스를 제한하는 	3		12	1
496	2024-07-08 13:23:16.16381+09	87	['Q103. 대규모 미디어 회사는 AWS에서 웹 애플리케이션을 호스팅합니다. 이 회사는 	3		12	1
497	2024-07-08 13:23:16.169851+09	86	['Q102. 회사의 웹사이트는 사용자에게 다운로드 가능한 과거 성과 보고서를 제공합니다.	3		12	1
498	2024-07-08 13:23:16.174508+09	85	['Q100. 게임 회사는 고가용성 아키텍처를 설계하고 있습니다. 애플리케이션은 수정된 L	3		12	1
499	2024-07-08 13:23:16.17876+09	84	['Q99. 회사는 AWS 클라우드에서 웹 애플리케이션을 호스팅합니다. 회사는 AWS Ce	3		12	1
500	2024-07-08 13:23:16.183197+09	83	['Q98. 회사는 Amazon S3에 회계 기록을 저장해야 합니다. 기록은 1년 동안 즉	3		12	1
501	2024-07-08 13:23:16.188918+09	82	['Q97. 회사는 AWS에서 워크로드를 실행합니다. 회사는 외부 공급자의 서비스에 연결해	3		12	1
502	2024-07-08 13:23:16.194092+09	81	['Q96. 회사에 AWS로 마이그레이션해야 하는 Windows 기반 애플리케이션이 있습니	3		12	1
503	2024-07-08 13:23:16.199044+09	80	['Q95. 한 회사에 데이터베이스에 주문을 작성하고 결제를 처리하기 위해 서비스를 호출하	3		12	1
504	2024-07-08 13:23:21.029306+09	79	['Q94. 한 회사는 최근 애플리케이션 마이그레이션 이니셔티브에 대한 지원을 위해 AWS	3		12	1
505	2024-07-08 13:23:21.034566+09	78	['Q93. 회사에서 데이터 저장을 위해 Amazon DynamoDB 테이블을 사용할 계획	3		12	1
506	2024-07-08 13:23:21.039588+09	77	['Q92. 한 미디어 회사가 시스템을 AWS 클라우드로 이전할 가능성을 평가하고 있습니다	3		12	1
507	2024-07-08 13:23:21.044728+09	76	['Q91. 회사는 AWS Organizations를 사용하여 각 사업부에 대한 전용 AW	3		12	1
508	2024-07-08 13:23:21.04942+09	75	['Q89. 회사는 Amazon ECS를 사용하여 애플리케이션을 실행합니다. 애플리케이션은	3		12	1
509	2024-07-08 13:23:21.054061+09	74	['Q88. 한 회사에서 인기 있는 소셜 미디어 웹사이트를 운영하고 있습니다. 웹사이트는 	3		12	1
510	2024-07-08 13:23:21.058733+09	73	['Q87. 회사에 이벤트 데이터를 생성하는 서비스가 있습니다. 회사는 AWS를 사용하여 	3		12	1
511	2024-07-08 13:23:21.063467+09	72	['Q86. 회사는 ALB(Application Load Balancer) 뒤에 있는 Am	3		12	1
512	2024-07-08 13:23:21.068394+09	71	['Q85. 회사에 Java 및 PHP를 기반으로 하는 웹 응용 프로그램이 있습니다. 회사	3		12	1
513	2024-07-08 13:23:21.073343+09	70	['Q83. 회사는 여러 대륙에 걸쳐 도시의 온도, 습도 및 대기압 데이터를 수집합니다. 	3		12	1
514	2024-07-08 13:23:21.078878+09	69	['Q82. 회사에서 기존 온프레미스 모놀리식 애플리케이션을 AWS로 마이그레이션하려고 합	3		12	1
515	2024-07-08 13:23:21.083566+09	68	['Q81. 회사는 Amazon CloudWatch Logs 로그 그룹에 애플리케이션 로그	3		12	1
516	2024-07-08 13:23:21.08831+09	67	['Q80. 회사는 새로운 비즈니스 애플리케이션을 구현하고 있습니다. 애플리케이션은 두 개	3		12	1
517	2024-07-08 13:23:21.093402+09	66	['Q79. 온라인 소매 회사는 5천만 명 이상의 활성 고객을 보유하고 있으며 매일 25,	3		12	1
518	2024-07-08 13:23:21.098692+09	65	['Q78. 회사에 Amazon S3에 백업되는 시간에 민감한 대량의 데이터를 생성하는 온	3		12	1
519	2024-07-08 13:23:21.10369+09	64	['Q77. Amazon EC2 관리자는 여러 사용자가 포함된 IAM 그룹과 연결된 다음 	3		12	1
520	2024-07-08 13:23:21.108777+09	63	['Q76. 회사는 온프레미스 데이터 센터에서 마케팅 웹사이트를 호스팅합니다. 웹 사이트는	3		12	1
521	2024-07-08 13:23:21.113543+09	62	['Q75. 회사는 Application Load Balancer 뒤의 Amazon EC2	3		12	1
522	2024-07-08 13:23:21.118152+09	61	['Q74. 애플리케이션은 프라이빗 서브넷의 Amazon EC2 인스턴스에서 실행됩니다. 	3		12	1
523	2024-07-08 13:23:21.123019+09	60	['Q73. 회사는 AWS 클라우드 배포를 검토하여 Amazon S3 버킷에 무단 구성 변	3		12	1
524	2024-07-08 13:23:21.128112+09	59	['Q72. 글로벌 회사는 Amazon API Gateway를 사용하여 us-east-1 	3		12	1
525	2024-07-08 13:23:21.133089+09	58	['Q71. 회사에 매장에 마케팅 서비스를 제공하는 애플리케이션이 있습니다. 매장 고객의 	3		12	1
526	2024-07-08 13:23:21.138126+09	57	['Q70. 한 회사가 AWS 클라우드에서 공개 웹 애플리케이션 출시를 준비하고 있습니다.	3		12	1
527	2024-07-08 13:23:21.143232+09	56	['Q69. 회사는 us-east-1 리전 내의 3개의 개별 VPC에서 여러 비즈니스 애플	3		12	1
528	2024-07-08 13:23:21.147909+09	55	['Q67. 회사는 Amazon S3에 데이터를 저장해야 하며 데이터가 변경되지 않도록 해	3		12	1
529	2024-07-08 13:23:21.152668+09	54	['Q66. 회사는 Application Load Balancer 뒤의 Amazon EC2	3		12	1
530	2024-07-08 13:23:21.15729+09	53	['Q65. 설문 조사 회사는 미국 지역에서 수년 동안 데이터를 수집했습니다. 이 회사는 	3		12	1
531	2024-07-08 13:23:21.161957+09	52	['Q64. 회사는 AWS에서 OLTP(온라인 트랜잭션 처리: online transact	3		12	1
532	2024-07-08 13:23:21.166947+09	51	['Q63. 이미지 처리 회사에는 사용자가 이미지를 업로드하는 데 사용하는 웹 응용 프로그	3		12	1
533	2024-07-08 13:23:21.172107+09	50	['Q62. 회사는 AWS에서 데이터 레이크를 호스팅합니다. 데이터 레이크는 Amazon 	3		12	1
534	2024-07-08 13:23:21.177297+09	49	['Q61. 회사에는 매일 1TB의 상태 알림을 집합적으로 생성하는 수천 개의 에지 장치가	3		12	1
535	2024-07-08 13:23:21.181963+09	48	['Q60. 회사는 300개 이상의 글로벌 웹사이트 및 애플리케이션을 호스팅합니다. 이 회	3		12	1
536	2024-07-08 13:23:21.187012+09	47	['Q59. 회사에서 AWS 클라우드의 컨테이너에서 애플리케이션을 실행하려고 합니다. 이러	3		12	1
983	2024-07-08 16:03:51.091044+09	1339	aws object (1339)	3		12	1
537	2024-07-08 13:23:21.192015+09	46	['Q58. 회사에서 데이터를 Amazon S3 버킷으로 이동할 계획입니다. 데이터는 S3	3		12	1
538	2024-07-08 13:23:21.19747+09	45	['Q57. 회사는 온프레미스에서 Oracle 데이터베이스를 실행합니다. 회사는 AWS로 	3		12	1
539	2024-07-08 13:23:21.202317+09	44	['Q56. 회사에 1,000개의 Amazon EC2 Linux 인스턴스에서 실행되는 프로	3		12	1
540	2024-07-08 13:23:21.207446+09	43	['Q55. AWS에서 웹 애플리케이션을 호스팅하는 회사는 모든 Amazon EC2 인스턴	3		12	1
541	2024-07-08 13:23:21.212537+09	42	['Q54. 회사에 VPC의 Amazon EC2 인스턴스에서 실행되는 애플리케이션이 있습니	3		12	1
542	2024-07-08 13:23:21.217279+09	41	['Q53. 회사에 사용자가 웹 인터페이스 또는 모바일 앱을 통해 문서를 업로드하는 프로덕	3		12	1
543	2024-07-08 13:23:21.222052+09	40	['Q52. 빠르게 성장하는 전자 상거래 회사는 단일 AWS 리전에서 워크로드를 실행하고 	3		12	1
544	2024-07-08 13:23:21.226824+09	39	['Q50. 솔루션 설계자는 회사의 스토리지 비용을 줄이기 위한 솔루션을 구현해야 합니다.	3		12	1
545	2024-07-08 13:23:21.231344+09	38	['Q49. 회사에서 3계층 웹 응용 프로그램을 사용하여 신입 직원에게 교육을 제공합니다.	3		12	1
546	2024-07-08 13:23:21.236298+09	37	['Q48. 한 회사에서 사용자가 Amazon S3에 작은 파일을 업로드하는 애플리케이션을	3		12	1
547	2024-07-08 13:23:21.247965+09	36	['Q47. 회사는 Amazon EC2 인스턴스 집합에서 프로덕션 애플리케이션을 실행합니다	3		12	1
548	2024-07-08 13:23:21.252694+09	35	['Q46. 솔루션 설계자는 AWS에 배포되는 새 애플리케이션을 위한 클라우드 아키텍처를 	3		12	1
549	2024-07-08 13:23:21.257815+09	34	['Q45. 한 회사는 사용자에게 글로벌 속보, 지역 경보 및 날씨 업데이트를 제공하는 웹	3		12	1
550	2024-07-08 13:23:21.263057+09	33	['Q44. 솔루션 설계자가 다중 서브넷 VPC 아키텍처를 개발 중입니다. 솔루션은 2개의	3		12	1
551	2024-07-08 13:23:21.267782+09	32	['Q43. 회사는 사용자 업로드 문서를 Amazon EBS 볼륨에 저장하는 단일 Amaz	3		12	1
552	2024-07-08 13:23:21.273037+09	31	['Q42. 회사에서 SQL 데이터베이스를 사용하여 공개적으로 액세스할 수 있는 영화 데이	3		12	1
553	2024-07-08 13:23:21.277723+09	30	['Q41. 회사에서 애플리케이션을 AWS로 마이그레이션하고 있습니다. 응용 프로그램은 다	3		12	1
554	2024-07-08 13:23:21.282162+09	29	['Q40. 회사에는 Microsoft Windows 공유 파일 저장소가 필요한 온프레미스	3		12	1
555	2024-07-08 13:23:21.286933+09	28	['Q39. 회사에서 동일한 AWS 리전의 테스트 환경에 대량의 프로덕션 데이터를 복제하는	3		12	1
556	2024-07-08 13:23:21.291598+09	27	['Q34. 회사는 AWS 에서 온라인 마켓플레이스 웹 애플리케이션을 실행합니다. 이 애플	3		12	1
557	2024-07-08 13:23:21.296453+09	26	['Q33. 회사는 Application Load Balancer 뒤의 Amazon EC2	3		12	1
558	2024-07-08 13:23:21.301184+09	25	['Q31. 회사에서 새 애플리케이션을 시작하고 Amazon CloudWatch 대시보드에	3		12	1
559	2024-07-08 13:23:21.305107+09	24	['Q30. 회사는 Amazon EC2 인스턴스에서 Amazon S3 버킷으로 데이터를 이	3		12	1
560	2024-07-08 13:23:21.309139+09	23	['Q29. 한 회사에 Amazon RDS 의 데이터베이스에 목록을 저장하는 자동차 판매 	3		12	1
561	2024-07-08 13:23:21.313334+09	22	['Q28. 회사에는 ALB(Application Load Balancer) 뒤의 단일 가	3		12	1
562	2024-07-08 13:23:21.31723+09	21	['Q26. 회사는 AWS Organizations 를 사용하여 여러 부서의 여러 AWS 	3		12	1
563	2024-07-08 13:23:21.321077+09	20	['Q24. 회사는 최근 웹 공격으로 인해 공개 웹 응용 프로그램의 보안에 대해 우려하고 	3		12	1
564	2024-07-08 13:23:21.324883+09	19	['Q23. 회사는 웹 사이트에서 검색 가능한 항목 저장소를 유지 관리합니다. 데이터는 천	3		12	1
565	2024-07-08 13:23:21.328685+09	18	['Q22. 회사는 AWS 에서 인프라를 실행하고 문서 관리 애플리케이션에 대해 700,0	3		12	1
566	2024-07-08 13:23:21.332457+09	17	['Q21. 회사는 보고를 위해 50TB 의 데이터를 사용합니다. 회사는 이 데이터를 온프	3		12	1
567	2024-07-08 13:23:21.336201+09	16	['Q20. 한 회사에서 Amazon S3 버킷을 스토리지로 사용할 파일 공유 애플리케이션	3		12	1
568	2024-07-08 13:23:21.341022+09	15	['Q19. 회사는 데이터 센터에서 SMB 파일 서버를 실행하고 있습니다. 파일 서버는 파	3		12	1
569	2024-07-08 13:23:21.346032+09	14	['Q18. 텔레마케팅 회사는 AWS 에서 고객 콜 센터 기능을 설계하고 있습니다. 회사는	3		12	1
570	2024-07-08 13:23:21.35072+09	13	['Q16. 회사에서 Amazon S3 에 기밀 데이터를 저장할 준비를 하고 있습니다. 규	3		12	1
571	2024-07-08 13:23:21.355445+09	12	['Q14. 회사는 Application Load Balancer 뒤의 Amazon EC2	3		12	1
572	2024-07-08 13:23:21.36375+09	11	['Q13. 회사의 응용 프로그램에 성능 문제가 있습니다. 애플리케이션은 스테이트풀(Sta	3		12	1
573	2024-07-08 13:23:21.368789+09	10	['Q12. 회사는 AWS 에서 다중 계층 애플리케이션을 호스팅합니다. 규정 준수, 거버넌	3		12	1
574	2024-07-08 13:23:21.373889+09	9	['Q11. 회사에는 매일 동시에 실행되는 AWS Glue 추출, 변환 및 로드(ETL) 	3		12	1
575	2024-07-08 13:23:21.378547+09	8	['Q10. 회사는 재무 위험 모델링을 위해 AWS 에서 고성능 컴퓨팅(HPC) 인프라를 	3		12	1
576	2024-07-08 13:23:21.383281+09	7	['Q8. 회사는 Amazon API Gateway API 에 의해 호출되는 AWS Lam	3		12	1
577	2024-07-08 13:23:21.387973+09	6	['Q6. 회사에 들어오는 메시지를 수집하는 응용 프로그램이 있습니다. 그런 다음 이러한 	3		12	1
578	2024-07-08 13:23:21.392641+09	5	['Q5. 회사의 HTTP 애플리케이션은 NLB(Network Load Balancer) 	3		12	1
579	2024-07-08 13:23:21.397236+09	4	['Q4. 회사는 Application Load Balancer 뒤의 Amazon EC2 	3		12	1
580	2024-07-08 13:23:21.402015+09	3	['Q3. 회사는 동일한 AWS 리전에 있는 Amazon S3 버킷에서 사진을 자주 업로드	3		12	1
581	2024-07-08 13:23:21.407338+09	2	['Q2. 회사는 AWS 에서 호스팅되는 서비스 솔루션으로 고성능 컴퓨팅(HPC) 워크로드	3		12	1
582	2024-07-08 13:23:21.412147+09	1	['Q1. 전자 상거래 회사는 AWS 클라우드에서 분석 애플리케이션을 호스팅합니다. 애플리	3		12	1
583	2024-07-08 13:29:12.333349+09	965	Q222. 회사 데이터 센터의 NAS(Network Attached Storage)에 70	3		12	1
584	2024-07-08 13:29:12.345686+09	964	Q221. 회사는 AWS에서 애플리케이션을 호스팅합니다. 회사는 Amazon Cognito	3		12	1
585	2024-07-08 13:29:12.350393+09	963	Q220. 개발 팀은 성능 개선 도우미가 활성화된 MySQL DB 인스턴스용 범용 Amaz	3		12	1
586	2024-07-08 13:29:12.354794+09	962	Q219. 한 회사가 AWS에서 2계층 웹 애플리케이션을 개발하고 있습니다. 회사 개발자는	3		12	1
587	2024-07-08 13:29:12.360071+09	961	Q218. 회사는 들어오는 요청을 처리하는 온프레미스 서버 집합에서 컨테이너화된 웹 애플리	3		12	1
588	2024-07-08 13:29:12.365047+09	960	Q216. 회사는 단일 공장에 있는 여러 기계에서 매일 10TB의 계측 데이터를 수신합니다	3		12	1
589	2024-07-08 13:29:12.369777+09	959	Q215. 회사에서 MySQL 데이터베이스를 온프레미스에서 AWS로 마이그레이션하려고 합니	3		12	1
590	2024-07-08 13:29:12.374192+09	958	Q214. 솔루션 설계자는 AWS 클라우드에 배포되는 새 애플리케이션의 아키텍처를 설계하고	3		12	1
591	2024-07-08 13:29:12.378794+09	957	Q213. 한 회사는 최근 글로벌 전자 상거래 애플리케이션의 데이터 저장소로 Amazon 	3		12	1
592	2024-07-08 13:29:12.383372+09	956	Q210. 회사에 각각 크기가 약 5MB인 많은 수의 파일을 생성하는 응용 프로그램이 있습	3		12	1
593	2024-07-08 13:29:12.38824+09	955	Q209. 회사는 단일 Amazon EC2 온디맨드 인스턴스에서 웹 사이트 분석 애플리케이	3		12	1
594	2024-07-08 13:29:12.393354+09	954	Q208. 회사에는 처리할 페이로드가 있는 메시지를 보내는 발신자 응용 프로그램과 페이로드	3		12	1
595	2024-07-08 13:29:12.39856+09	953	Q207. 병원은 최근 Amazon API Gateway 및 AWS Lambda와 함께 R	3		12	1
596	2024-07-08 13:29:12.403677+09	952	Q206. 회사는 Amazon EC2 인스턴스 및 Amazon RDS에서 2계층 애플리케이	3		12	1
597	2024-07-08 13:29:12.409219+09	951	Q203. 회사는 응용 프로그램의 데이터를 암호화해야 하는 개발자를 지원하기 위해 확장 가	3		12	1
598	2024-07-08 13:29:12.414073+09	950	Q202. 애플리케이션은 여러 가용 영역의 Amazon EC2 인스턴스에서 실행됩니다. 인	3		12	1
599	2024-07-08 13:29:12.419229+09	949	Q201. 회사는 확장성 및 가용성에 대한 요구 사항을 충족하기 위해 컨테이너에서 중요한 	3		12	1
600	2024-07-08 13:29:12.424107+09	948	Q200. 회사에 많은 Amazon EC2 인스턴스를 사용하여 완료하는 매우 동적인 배치 	3		12	1
601	2024-07-08 13:29:12.42957+09	947	Q199. 의료 기록 회사는 Amazon EC2 인스턴스에서 애플리케이션을 호스팅하고 있습	3		12	1
602	2024-07-08 13:29:12.434323+09	946	Q198. 회사는 온프레미스 데이터 센터의 Kubernetes 클러스터에서 컨테이너화된 애	3		12	1
603	2024-07-08 13:29:12.439117+09	945	Q197. 회사에서 인기 있는 노래 클립으로 만든 벨소리를 판매합니다. 벨소리가 포함된 파	3		12	1
604	2024-07-08 13:29:12.444491+09	944	Q196. 한 회사는 사용자가 사진을 업로드하고 이미지에 액자를 추가할 수 있는 이미지 분	3		12	1
605	2024-07-08 13:29:12.449831+09	943	Q195. 회사의 웹 애플리케이션이 Application Load Balancer 뒤의 A	3		12	1
606	2024-07-08 13:29:12.455393+09	942	Q194. 솔루션 아키텍트가 다가오는 뮤지컬 이벤트를 위해 웹사이트를 최적화하고 있습니다.	3		12	1
607	2024-07-08 13:29:12.460683+09	941	Q193. 회사에서 Amazon 머신 이미지(AMI)를 관리하려고 합니다. 회사는 현재 A	3		12	1
608	2024-07-08 13:29:12.465004+09	940	Q192. 회사는 UDP 연결을 사용하는 VoIP(Voice over Internet Pr	3		12	1
609	2024-07-08 13:29:12.468837+09	939	Q191. 회사에서 새로운 동적 주문 웹사이트를 구축하고 있습니다. 회사는 서버 유지 관리	3		12	1
610	2024-07-08 13:29:12.47245+09	938	Q190. 회사는 AWS에서 고성능 컴퓨팅(HPC) 워크로드를 실행합니다. 워크로드에는 긴	3		12	1
611	2024-07-08 13:29:12.477081+09	937	Q189. 애플리케이션은 VPC의 Amazon EC2 인스턴스에서 실행됩니다. 애플리케이션	3		12	1
612	2024-07-08 13:29:12.482091+09	936	Q188. 회사는 Amazon Route 53에 도메인 이름을 등록했습니다. 이 회사는 c	3		12	1
613	2024-07-08 13:29:12.490527+09	935	Q187. 회사에 소프트웨어 엔지니어링에 사용되는 AWS 계정이 있습니다. AWS 계정은 	3		12	1
614	2024-07-08 13:29:12.495187+09	934	Q186. 회사에서 새로운 서버리스 워크로드를 배포할 준비를 하고 있습니다. 솔루션 설계자	3		12	1
615	2024-07-08 13:29:12.499103+09	933	Q185. 솔루션 설계자는 회사가 온프레미스 인프라를 AWS로 확장하기 위해 새로운 하이브	3		12	1
616	2024-07-08 13:29:12.502762+09	932	Q184. 한 회사에서 애플리케이션을 서버리스 솔루션으로 이동하려고 합니다. 서버리스 솔루	3		12	1
617	2024-07-08 13:29:12.506257+09	931	Q183. 회사는 애플리케이션에 대한 실시간 데이터 수집 아키텍처를 구성해야 합니다. 회사	3		12	1
618	2024-07-08 13:29:12.511922+09	930	Q182. 한 회사는 Amazon DynamoDB를 사용하여 고객 정보를 저장하는 쇼핑 애	3		12	1
619	2024-07-08 13:29:12.516739+09	929	Q181. 회사는 회사의 기본 웹 사이트를 사용할 수 없는 경우 사용자를 백업 정적 오류 	3		12	1
620	2024-07-08 13:29:12.521474+09	928	Q180. 회사는 AWS에서 전자 상거래 웹 애플리케이션을 구축하고 있습니다. 애플리케이션	3		12	1
621	2024-07-08 13:29:12.52618+09	927	Q179. 회사는 AWS 클라우드에서 호스팅되는 미디어 애플리케이션을 위한 공유 스토리지 	3		12	1
622	2024-07-08 13:29:12.531545+09	926	Q178. 회사에 Amazon EC2 인스턴스에서 실행되고 Amazon Aurora 데이터	3		12	1
623	2024-07-08 13:29:12.535711+09	925	Q177. 개발 팀은 다른 팀이 액세스할 웹사이트를 호스팅해야 합니다. 웹사이트 콘텐츠는 	3		12	1
624	2024-07-08 13:29:12.540112+09	924	Q176. 한 엔터테인먼트 회사에서 Amazon DynamoDB를 사용하여 미디어 메타데이	3		12	1
625	2024-07-08 13:29:12.545039+09	923	Q175. 회사의 주문 시스템은 클라이언트에서 Amazon EC2 인스턴스로 요청을 보냅니	3		12	1
626	2024-07-08 13:29:12.549095+09	922	Q173. 회사에 Amazon EC2 인스턴스에서 실행되는 레거시 데이터 처리 애플리케이션	3		12	1
627	2024-07-08 13:29:12.553344+09	921	Q172. 회사는 AWS 클라우드에서 애플리케이션을 구축하고 있습니다. 애플리케이션은 두 	3		12	1
628	2024-07-08 13:29:12.557332+09	920	Q171. 회사에 두 개의 Amazon EC2 인스턴스에서 호스팅되는 동적 웹 애플리케이션	3		12	1
629	2024-07-08 13:29:12.561858+09	919	Q169. 회사의 애플리케이션은 데이터 수집을 위해 여러 SaaS(Software-as-a	3		12	1
630	2024-07-08 13:29:12.565934+09	918	Q168. 회사에서 온프레미스 애플리케이션을 AWS로 마이그레이션하려고 합니다. 애플리케이	3		12	1
631	2024-07-08 13:29:12.569776+09	917	Q167. 회사는 MySQL 데이터베이스로 구동되는 온프레미스 애플리케이션을 실행합니다. 	3		12	1
632	2024-07-08 13:29:12.57427+09	916	Q166. 응용 프로그램을 사용하면 회사 본사의 사용자가 제품 데이터에 액세스할 수 있습니	3		12	1
633	2024-07-08 13:29:12.579742+09	915	Q164. 회사는 1주일 동안 진행될 예정된 이벤트를 위해 특정 AWS 리전의 3개의 특정	3		12	1
984	2024-07-08 16:03:51.096405+09	1338	aws object (1338)	3		12	1
634	2024-07-08 13:29:12.584031+09	914	Q163. 한 회사는 최근 AWS 계정의 Amazon EC2 인스턴스에서 다양한 새로운 워	3		12	1
635	2024-07-08 13:29:12.587671+09	913	Q162. 회사는 온프레미스에 컨테이너화된 애플리케이션을 구축하고 있으며 애플리케이션을 A	3		12	1
636	2024-07-08 13:29:12.591408+09	912	Q161. 회사는 대규모 Amazon EC2 인스턴스 집합에서 애플리케이션을 실행합니다. 	3		12	1
637	2024-07-08 13:29:12.595398+09	911	Q159. 솔루션 설계자가 애플리케이션을 위한 새로운 Amazon CloudFront 배포	3		12	1
638	2024-07-08 13:29:12.599097+09	910	Q158. 회사에서 AWS에 새로운 공개 웹 애플리케이션을 배포하고 있습니다. 애플리케이션	3		12	1
639	2024-07-08 13:29:12.614262+09	909	Q157. 게임 회사에 점수를 표시하는 웹 응용 프로그램이 있습니다. 애플리케이션은 App	3		12	1
640	2024-07-08 13:29:12.618625+09	908	Q156. 회사는 여러 가용 영역의 Amazon EC2 인스턴스에서 실행되는 웹 기반 애플	3		12	1
641	2024-07-08 13:29:12.622402+09	907	Q155. 회사는 Amazon S3를 사용하여 기밀 감사 문서를 저장합니다. S3 버킷은 	3		12	1
642	2024-07-08 13:29:12.626147+09	906	Q154. 한 회사는 최근에 메시지 처리 시스템을 AWS로 마이그레이션했습니다. 시스템은 	3		12	1
643	2024-07-08 13:29:12.629836+09	905	Q153. 회사는 품목 가격을 기반으로 세금 계산 조회를 자동화하는 API를 사용자에게 제	3		12	1
644	2024-07-08 13:29:12.63332+09	904	Q152. 회사는 중요한 애플리케이션에 대한 애플리케이션 로그 파일을 10년 동안 보관해야	3		12	1
645	2024-07-08 13:29:12.636773+09	903	Q151. 글로벌 회사는 ALB(Application Load Balancer) 뒤의 Am	3		12	1
646	2024-07-08 13:29:12.640853+09	902	Q150. 회사에서 Amazon S3 Standard 스토리지를 사용하여 백업 파일을 저장	3		12	1
647	2024-07-08 13:29:12.645412+09	901	Q149. 솔루션 설계자는 AWS 클라우드에 배포되는 새 애플리케이션의 아키텍처를 설계하고	3		12	1
648	2024-07-08 13:29:12.64983+09	900	Q148. 회사에 AWS에 배포된 3계층 웹 애플리케이션이 있습니다. 웹 서버는 VPC의 	3		12	1
649	2024-07-08 13:29:12.654394+09	899	Q147. 회사의 컨테이너화된 애플리케이션은 Amazon EC2 인스턴스에서 실행됩니다. 	3		12	1
650	2024-07-08 13:29:12.658996+09	898	Q145. 회사는 독점 애플리케이션의 로그 파일을 분석할 수 있는 능력이 필요합니다. 로그	3		12	1
651	2024-07-08 13:29:12.664104+09	897	Q144. AA 회사의 동적 웹 사이트는 미국의 온프레미스 서버를 사용하여 호스팅됩니다. 	3		12	1
652	2024-07-08 13:29:12.668517+09	896	Q143. 회사는 의료 시험의 결과를 Amazon S3 리포지토리에 저장해야 합니다. 리포	3		12	1
653	2024-07-08 13:29:12.673582+09	895	Q142. 최근에 AWS로 마이그레이션한 회사가 프로덕션 VPC로 들어오고 나가는 트래픽을	3		12	1
654	2024-07-08 13:29:12.679418+09	894	Q141. 회사는 Amazon S3에서 정적 웹 사이트를 호스팅하고 DNS에 Amazon 	3		12	1
655	2024-07-08 13:29:12.684526+09	893	Q140. 회사는 가장 최근 청구서에서 Amazon EC2 비용 증가를 관찰했습니다. 청구	3		12	1
656	2024-07-08 13:29:12.689054+09	892	Q139. 전자 상거래 회사에 Amazon API Gateway와 AWS Lambda 함수	3		12	1
657	2024-07-08 13:29:12.693536+09	891	Q138. 회사는 매월 통화 기록 파일을 저장합니다. 사용자는 통화 후 1년 이내에 파일에	3		12	1
658	2024-07-08 13:29:12.698891+09	890	Q137. 전자 상거래 회사는 AWS에서 하루 1회 웹 사이트를 시작하려고 합니다. 매일 	3		12	1
659	2024-07-08 13:29:12.703087+09	889	Q136. 회사는 AWS 인프라에 대한 월별 유지 관리를 수행합니다. 이러한 유지 관리 활	3		12	1
660	2024-07-08 13:29:12.707278+09	888	Q135. 회사에는 다음 구성 요소가 포함된 데이터 수집 워크플로가 있습니다. 새로운 데이	3		12	1
661	2024-07-08 13:29:12.711342+09	887	Q134. 회사에 다양한 런타임으로 AWS Lambda 함수를 분당 최대 800번 호출하는	3		12	1
662	2024-07-08 13:29:12.715671+09	886	Q133. 솔루션 설계자는 애플리케이션이 Amazon RDS DB 인스턴스에 액세스하는 데	3		12	1
663	2024-07-08 13:29:12.720028+09	885	Q132. 게임 회사는 AWS에서 브라우저 기반 애플리케이션을 호스팅합니다. 애플리케이션 	3		12	1
664	2024-07-08 13:29:12.724174+09	884	Q131. 회사에서 분산 애플리케이션을 AWS로 마이그레이션하고 있습니다. 애플리케이션은 	3		12	1
665	2024-07-08 13:29:12.72902+09	883	Q130. 회사는 AWS 클라우드를 사용하여 기존 애플리케이션을 고가용성 및 복원력으로 만	3		12	1
666	2024-07-08 13:29:12.734448+09	882	Q129. AA 회사는 애플리케이션의 성능을 개선하기 위해 다계층 애플리케이션을 온프레미스	3		12	1
667	2024-07-08 13:29:12.738803+09	881	Q128. 회사는 여러 Amazon EC2 인스턴스에서 애플리케이션을 호스팅합니다. 애플리	3		12	1
668	2024-07-08 13:29:12.743874+09	880	Q127. 회사는 단일 VPC의 Amazon EC2 인스턴스에서 고가용성 이미지 처리 애플	3		12	1
669	2024-07-08 13:29:12.74908+09	879	Q126. 솔루션 설계자는 회사의 고객 대면 애플리케이션을 설계하고 있습니다. 애플리케이션	3		12	1
670	2024-07-08 13:29:12.753066+09	878	Q125. 회사는 온프레미스 서버에서 Amazon EC2 인스턴스로 애플리케이션을 마이그레	3		12	1
671	2024-07-08 13:29:12.757093+09	877	Q123. 회사에서 새 애플리케이션을 시작하고 Amazon CloudWatch 대시보드에 	3		12	1
672	2024-07-08 13:29:12.762183+09	876	Q122. 회사에 AWS에서 호스팅되는 웹 사이트가 있습니다. 웹 사이트는 HTTP와 HT	3		12	1
673	2024-07-08 13:29:12.766824+09	875	Q121. 솔루션 설계자는 퍼블릭 및 프라이빗 서브넷이 있는 VPC를 설계하고 있습니다. 	3		12	1
674	2024-07-08 13:29:12.77107+09	874	Q120. 회사에는 공통 Amazon RDS MySQL 다중 AZ DB 인스턴스에 자주 액	3		12	1
675	2024-07-08 13:29:12.775496+09	873	Q119. 솔루션 설계자는 Amazon S3 오리진과 함께 Amazon CloudFront	3		12	1
676	2024-07-08 13:29:12.780005+09	872	Q118. 회사에서 Amazon EC2 인스턴스에서 배치 애플리케이션을 실행하고 있습니다.	3		12	1
677	2024-07-08 13:29:12.784578+09	871	Q117. 솔루션 설계자는 Amazon S3를 사용하여 새로운 디지털 미디어 애플리케이션의	3		12	1
678	2024-07-08 13:29:12.788862+09	870	Q115. 회사는 AWS에서 전자 상거래 애플리케이션을 실행합니다. 모든 새 주문은 단일 	3		12	1
679	2024-07-08 13:29:12.793711+09	869	Q113. 자전거 공유 회사는 피크 운영 시간 동안 자전거의 위치를 추적하기 위해 다층 아	3		12	1
680	2024-07-08 13:29:12.798891+09	868	Q112. 회사는 AWS에서 여러 Windows 워크로드를 실행합니다. 회사 직원은 두 개	3		12	1
681	2024-07-08 13:29:12.803516+09	867	Q111. 회사에서 AWS 클라우드의 Auto Scaling 그룹에 속한 Amazon EC	3		12	1
682	2024-07-08 13:29:12.808375+09	866	Q110. 회사는 사용자 트랜잭션 데이터를 Amazon DynamoDB 테이블에 보관해야 	3		12	1
683	2024-07-08 13:29:17.808078+09	865	Q109. 회사 웹 사이트는 항목 카탈로그에 Amazon EC2 인스턴스 스토어를 사용합니	3		12	1
684	2024-07-08 13:29:17.814607+09	864	Q108. 회사는 기존 3계층 웹 아키텍처의 비용을 절감하려고 합니다. 웹, 애플리케이션 	3		12	1
685	2024-07-08 13:29:17.819143+09	863	Q107. 회사는 사용자 요청을 수집하고 요청 유형에 따라 처리를 위해 적절한 마이크로 서	3		12	1
686	2024-07-08 13:29:17.823653+09	862	Q106. 회사는 NFS를 사용하여 온프레미스 네트워크 연결 스토리지에 대용량 비디오 파일	3		12	1
687	2024-07-08 13:29:17.829423+09	861	Q105. 글로벌 이벤트 주최자는 일일 보고서를 정적 HTML 페이지로 온라인에 게시하려고	3		12	1
688	2024-07-08 13:29:17.834272+09	860	Q104. 팀의 모든 AWS 계정에서 특정 서비스 또는 작업에 대한 액세스를 제한하는 보안	3		12	1
689	2024-07-08 13:29:17.839367+09	859	Q103. 대규모 미디어 회사는 AWS에서 웹 애플리케이션을 호스팅합니다. 이 회사는 전 	3		12	1
690	2024-07-08 13:29:17.844283+09	858	Q102. 회사의 웹사이트는 사용자에게 다운로드 가능한 과거 성과 보고서를 제공합니다. 웹	3		12	1
691	2024-07-08 13:29:17.849007+09	857	Q100. 게임 회사는 고가용성 아키텍처를 설계하고 있습니다. 애플리케이션은 수정된 Lin	3		12	1
692	2024-07-08 13:29:17.853667+09	856	Q99. 회사는 AWS 클라우드에서 웹 애플리케이션을 호스팅합니다. 회사는 AWS Cert	3		12	1
693	2024-07-08 13:29:17.858861+09	855	Q98. 회사는 Amazon S3에 회계 기록을 저장해야 합니다. 기록은 1년 동안 즉시 	3		12	1
694	2024-07-08 13:29:17.863895+09	854	Q97. 회사는 AWS에서 워크로드를 실행합니다. 회사는 외부 공급자의 서비스에 연결해야 	3		12	1
695	2024-07-08 13:29:17.86884+09	853	Q96. 회사에 AWS로 마이그레이션해야 하는 Windows 기반 애플리케이션이 있습니다.	3		12	1
696	2024-07-08 13:29:17.873678+09	852	Q95. 한 회사에 데이터베이스에 주문을 작성하고 결제를 처리하기 위해 서비스를 호출하는 	3		12	1
697	2024-07-08 13:29:17.878813+09	851	Q94. 한 회사는 최근 애플리케이션 마이그레이션 이니셔티브에 대한 지원을 위해 AWS 관	3		12	1
698	2024-07-08 13:29:17.883436+09	850	Q93. 회사에서 데이터 저장을 위해 Amazon DynamoDB 테이블을 사용할 계획입니	3		12	1
699	2024-07-08 13:29:17.888223+09	849	Q92. 한 미디어 회사가 시스템을 AWS 클라우드로 이전할 가능성을 평가하고 있습니다. 	3		12	1
700	2024-07-08 13:29:17.893427+09	848	Q91. 회사는 AWS Organizations를 사용하여 각 사업부에 대한 전용 AWS 	3		12	1
701	2024-07-08 13:29:17.898704+09	847	Q89. 회사는 Amazon ECS를 사용하여 애플리케이션을 실행합니다. 애플리케이션은 크	3		12	1
702	2024-07-08 13:29:17.903054+09	846	Q88. 한 회사에서 인기 있는 소셜 미디어 웹사이트를 운영하고 있습니다. 웹사이트는 사용	3		12	1
703	2024-07-08 13:29:17.907753+09	845	Q87. 회사에 이벤트 데이터를 생성하는 서비스가 있습니다. 회사는 AWS를 사용하여 이벤	3		12	1
704	2024-07-08 13:29:17.912063+09	844	Q86. 회사는 ALB(Application Load Balancer) 뒤에 있는 Amaz	3		12	1
705	2024-07-08 13:29:17.921202+09	843	Q85. 회사에 Java 및 PHP를 기반으로 하는 웹 응용 프로그램이 있습니다. 회사는 	3		12	1
706	2024-07-08 13:29:17.925529+09	842	Q83. 회사는 여러 대륙에 걸쳐 도시의 온도, 습도 및 대기압 데이터를 수집합니다. 사이	3		12	1
707	2024-07-08 13:29:17.929957+09	841	Q82. 회사에서 기존 온프레미스 모놀리식 애플리케이션을 AWS로 마이그레이션하려고 합니다	3		12	1
708	2024-07-08 13:29:17.933772+09	840	Q81. 회사는 Amazon CloudWatch Logs 로그 그룹에 애플리케이션 로그를 	3		12	1
709	2024-07-08 13:29:17.937515+09	839	Q80. 회사는 새로운 비즈니스 애플리케이션을 구현하고 있습니다. 애플리케이션은 두 개의 	3		12	1
710	2024-07-08 13:29:17.941311+09	838	Q79. 온라인 소매 회사는 5천만 명 이상의 활성 고객을 보유하고 있으며 매일 25,00	3		12	1
711	2024-07-08 13:29:17.945829+09	837	Q78. 회사에 Amazon S3에 백업되는 시간에 민감한 대량의 데이터를 생성하는 온프레	3		12	1
712	2024-07-08 13:29:17.949829+09	836	Q77. Amazon EC2 관리자는 여러 사용자가 포함된 IAM 그룹과 연결된 다음 정책	3		12	1
713	2024-07-08 13:29:17.954446+09	835	Q76. 회사는 온프레미스 데이터 센터에서 마케팅 웹사이트를 호스팅합니다. 웹 사이트는 정	3		12	1
714	2024-07-08 13:29:17.95922+09	834	Q75. 회사는 Application Load Balancer 뒤의 Amazon EC2 인	3		12	1
715	2024-07-08 13:29:17.964602+09	833	Q74. 애플리케이션은 프라이빗 서브넷의 Amazon EC2 인스턴스에서 실행됩니다. 애플	3		12	1
716	2024-07-08 13:29:17.968356+09	832	Q73. 회사는 AWS 클라우드 배포를 검토하여 Amazon S3 버킷에 무단 구성 변경이	3		12	1
717	2024-07-08 13:29:17.972388+09	831	Q72. 글로벌 회사는 Amazon API Gateway를 사용하여 us-east-1 리전	3		12	1
718	2024-07-08 13:29:17.976437+09	830	Q71. 회사에 매장에 마케팅 서비스를 제공하는 애플리케이션이 있습니다. 매장 고객의 이전	3		12	1
719	2024-07-08 13:29:17.98041+09	829	Q70. 한 회사가 AWS 클라우드에서 공개 웹 애플리케이션 출시를 준비하고 있습니다. 아	3		12	1
720	2024-07-08 13:29:17.98401+09	828	Q69. 회사는 us-east-1 리전 내의 3개의 개별 VPC에서 여러 비즈니스 애플리케	3		12	1
721	2024-07-08 13:29:17.987799+09	827	Q67. 회사는 Amazon S3에 데이터를 저장해야 하며 데이터가 변경되지 않도록 해야 	3		12	1
722	2024-07-08 13:29:17.992436+09	826	Q66. 회사는 Application Load Balancer 뒤의 Amazon EC2 인	3		12	1
723	2024-07-08 13:29:17.996893+09	825	Q65. 설문 조사 회사는 미국 지역에서 수년 동안 데이터를 수집했습니다. 이 회사는 크기	3		12	1
724	2024-07-08 13:29:18.000783+09	824	Q64. 회사는 AWS에서 OLTP(온라인 트랜잭션 처리: online transactio	3		12	1
725	2024-07-08 13:29:18.004995+09	823	Q63. 이미지 처리 회사에는 사용자가 이미지를 업로드하는 데 사용하는 웹 응용 프로그램이	3		12	1
726	2024-07-08 13:29:18.010037+09	822	Q62. 회사는 AWS에서 데이터 레이크를 호스팅합니다. 데이터 레이크는 Amazon S3	3		12	1
727	2024-07-08 13:29:18.016285+09	821	Q61. 회사에는 매일 1TB의 상태 알림을 집합적으로 생성하는 수천 개의 에지 장치가 있	3		12	1
728	2024-07-08 13:29:18.02092+09	820	Q60. 회사는 300개 이상의 글로벌 웹사이트 및 애플리케이션을 호스팅합니다. 이 회사는	3		12	1
729	2024-07-08 13:29:18.026003+09	819	Q59. 회사에서 AWS 클라우드의 컨테이너에서 애플리케이션을 실행하려고 합니다. 이러한 	3		12	1
730	2024-07-08 13:29:18.031434+09	818	Q58. 회사에서 데이터를 Amazon S3 버킷으로 이동할 계획입니다. 데이터는 S3 버	3		12	1
731	2024-07-08 13:29:18.035506+09	817	Q57. 회사는 온프레미스에서 Oracle 데이터베이스를 실행합니다. 회사는 AWS로 마이	3		12	1
732	2024-07-08 13:29:18.039736+09	816	Q56. 회사에 1,000개의 Amazon EC2 Linux 인스턴스에서 실행되는 프로덕션	3		12	1
733	2024-07-08 13:29:18.044377+09	815	Q55. AWS에서 웹 애플리케이션을 호스팅하는 회사는 모든 Amazon EC2 인스턴스,	3		12	1
734	2024-07-08 13:29:18.04863+09	814	Q54. 회사에 VPC의 Amazon EC2 인스턴스에서 실행되는 애플리케이션이 있습니다.	3		12	1
735	2024-07-08 13:29:18.052311+09	813	Q53. 회사에 사용자가 웹 인터페이스 또는 모바일 앱을 통해 문서를 업로드하는 프로덕션 	3		12	1
736	2024-07-08 13:29:18.056235+09	812	Q52. 빠르게 성장하는 전자 상거래 회사는 단일 AWS 리전에서 워크로드를 실행하고 있습	3		12	1
737	2024-07-08 13:29:18.060404+09	811	Q50. 솔루션 설계자는 회사의 스토리지 비용을 줄이기 위한 솔루션을 구현해야 합니다. 회	3		12	1
738	2024-07-08 13:29:18.065157+09	810	Q49. 회사에서 3계층 웹 응용 프로그램을 사용하여 신입 직원에게 교육을 제공합니다. 애	3		12	1
739	2024-07-08 13:29:18.070275+09	809	Q48. 한 회사에서 사용자가 Amazon S3에 작은 파일을 업로드하는 애플리케이션을 설	3		12	1
740	2024-07-08 13:29:18.075668+09	808	Q47. 회사는 Amazon EC2 인스턴스 집합에서 프로덕션 애플리케이션을 실행합니다. 	3		12	1
741	2024-07-08 13:29:18.081685+09	807	Q46. 솔루션 설계자는 AWS에 배포되는 새 애플리케이션을 위한 클라우드 아키텍처를 설계	3		12	1
742	2024-07-08 13:29:18.086683+09	806	Q45. 한 회사는 사용자에게 글로벌 속보, 지역 경보 및 날씨 업데이트를 제공하는 웹 기	3		12	1
743	2024-07-08 13:29:18.091777+09	805	Q44. 솔루션 설계자가 다중 서브넷 VPC 아키텍처를 개발 중입니다. 솔루션은 2개의 가	3		12	1
744	2024-07-08 13:29:18.097587+09	804	Q43. 회사는 사용자 업로드 문서를 Amazon EBS 볼륨에 저장하는 단일 Amazon	3		12	1
745	2024-07-08 13:29:18.102296+09	803	Q42. 회사에서 SQL 데이터베이스를 사용하여 공개적으로 액세스할 수 있는 영화 데이터를	3		12	1
746	2024-07-08 13:29:18.107125+09	802	Q41. 회사에서 애플리케이션을 AWS로 마이그레이션하고 있습니다. 응용 프로그램은 다른 	3		12	1
747	2024-07-08 13:29:18.112262+09	801	Q40. 회사에는 Microsoft Windows 공유 파일 저장소가 필요한 온프레미스에서	3		12	1
748	2024-07-08 13:29:18.117901+09	800	Q39. 회사에서 동일한 AWS 리전의 테스트 환경에 대량의 프로덕션 데이터를 복제하는 기	3		12	1
749	2024-07-08 13:29:18.123516+09	799	Q34. 회사는 AWS 에서 온라인 마켓플레이스 웹 애플리케이션을 실행합니다. 이 애플리케	3		12	1
750	2024-07-08 13:29:18.130143+09	798	Q33. 회사는 Application Load Balancer 뒤의 Amazon EC2 인	3		12	1
751	2024-07-08 13:29:18.135708+09	797	Q31. 회사에서 새 애플리케이션을 시작하고 Amazon CloudWatch 대시보드에 애	3		12	1
752	2024-07-08 13:29:18.140528+09	796	Q30. 회사는 Amazon EC2 인스턴스에서 Amazon S3 버킷으로 데이터를 이동해	3		12	1
753	2024-07-08 13:29:18.145399+09	795	Q29. 한 회사에 Amazon RDS 의 데이터베이스에 목록을 저장하는 자동차 판매 웹사	3		12	1
754	2024-07-08 13:29:18.151487+09	794	Q28. 회사에는 ALB(Application Load Balancer) 뒤의 단일 가용 	3		12	1
755	2024-07-08 13:29:18.156723+09	793	Q26. 회사는 AWS Organizations 를 사용하여 여러 부서의 여러 AWS 계정	3		12	1
756	2024-07-08 13:29:18.162145+09	792	Q24. 회사는 최근 웹 공격으로 인해 공개 웹 응용 프로그램의 보안에 대해 우려하고 있습	3		12	1
757	2024-07-08 13:29:18.167451+09	791	Q23. 회사는 웹 사이트에서 검색 가능한 항목 저장소를 유지 관리합니다. 데이터는 천만 	3		12	1
758	2024-07-08 13:29:18.175162+09	790	Q22. 회사는 AWS 에서 인프라를 실행하고 문서 관리 애플리케이션에 대해 700,000	3		12	1
759	2024-07-08 13:29:18.17899+09	789	Q21. 회사는 보고를 위해 50TB 의 데이터를 사용합니다. 회사는 이 데이터를 온프레미	3		12	1
760	2024-07-08 13:29:18.182967+09	788	Q20. 한 회사에서 Amazon S3 버킷을 스토리지로 사용할 파일 공유 애플리케이션을 	3		12	1
761	2024-07-08 13:29:18.186543+09	787	Q19. 회사는 데이터 센터에서 SMB 파일 서버를 실행하고 있습니다. 파일 서버는 파일이	3		12	1
762	2024-07-08 13:29:18.189996+09	786	Q18. 텔레마케팅 회사는 AWS 에서 고객 콜 센터 기능을 설계하고 있습니다. 회사는 다	3		12	1
763	2024-07-08 13:29:18.193381+09	785	Q16. 회사에서 Amazon S3 에 기밀 데이터를 저장할 준비를 하고 있습니다. 규정 	3		12	1
764	2024-07-08 13:29:18.197078+09	784	Q14. 회사는 Application Load Balancer 뒤의 Amazon EC2 인	3		12	1
765	2024-07-08 13:29:18.200554+09	783	Q13. 회사의 응용 프로그램에 성능 문제가 있습니다. 애플리케이션은 스테이트풀(State	3		12	1
766	2024-07-08 13:29:18.204003+09	782	Q12. 회사는 AWS 에서 다중 계층 애플리케이션을 호스팅합니다. 규정 준수, 거버넌스,	3		12	1
767	2024-07-08 13:29:18.207827+09	781	Q11. 회사에는 매일 동시에 실행되는 AWS Glue 추출, 변환 및 로드(ETL) 작업	3		12	1
768	2024-07-08 13:29:18.211415+09	780	Q10. 회사는 재무 위험 모델링을 위해 AWS 에서 고성능 컴퓨팅(HPC) 인프라를 사용	3		12	1
769	2024-07-08 13:29:18.215765+09	779	Q8. 회사는 Amazon API Gateway API 에 의해 호출되는 AWS Lambd	3		12	1
770	2024-07-08 13:29:18.219591+09	778	Q6. 회사에 들어오는 메시지를 수집하는 응용 프로그램이 있습니다. 그런 다음 이러한 메시	3		12	1
771	2024-07-08 13:29:18.223148+09	777	Q5. 회사의 HTTP 애플리케이션은 NLB(Network Load Balancer) 뒤에	3		12	1
772	2024-07-08 13:29:18.22651+09	776	Q4. 회사는 Application Load Balancer 뒤의 Amazon EC2 온디	3		12	1
773	2024-07-08 13:29:18.229848+09	775	Q3. 회사는 동일한 AWS 리전에 있는 Amazon S3 버킷에서 사진을 자주 업로드 및	3		12	1
774	2024-07-08 13:29:18.234146+09	774	Q2. 회사는 AWS 에서 호스팅되는 서비스 솔루션으로 고성능 컴퓨팅(HPC) 워크로드를 	3		12	1
775	2024-07-08 13:29:18.237851+09	773	Q1. 전자 상거래 회사는 AWS 클라우드에서 분석 애플리케이션을 호스팅합니다. 애플리케이	3		12	1
776	2024-07-08 13:29:18.24129+09	772	['Q222. 회사 데이터 센터의 NAS(Network Attached Storage)에 	3		12	1
777	2024-07-08 13:29:18.244736+09	771	['Q221. 회사는 AWS에서 애플리케이션을 호스팅합니다. 회사는 Amazon Cogni	3		12	1
778	2024-07-08 13:29:18.248878+09	770	['Q220. 개발 팀은 성능 개선 도우미가 활성화된 MySQL DB 인스턴스용 범용 Am	3		12	1
779	2024-07-08 13:29:18.252408+09	769	['Q219. 한 회사가 AWS에서 2계층 웹 애플리케이션을 개발하고 있습니다. 회사 개발	3		12	1
780	2024-07-08 13:29:18.255839+09	768	['Q218. 회사는 들어오는 요청을 처리하는 온프레미스 서버 집합에서 컨테이너화된 웹 애	3		12	1
781	2024-07-08 13:29:18.259108+09	767	['Q216. 회사는 단일 공장에 있는 여러 기계에서 매일 10TB의 계측 데이터를 수신합	3		12	1
782	2024-07-08 13:29:18.262384+09	766	['Q215. 회사에서 MySQL 데이터베이스를 온프레미스에서 AWS로 마이그레이션하려고 	3		12	1
783	2024-07-08 13:29:20.694125+09	765	['Q214. 솔루션 설계자는 AWS 클라우드에 배포되는 새 애플리케이션의 아키텍처를 설계	3		12	1
784	2024-07-08 13:29:20.699534+09	764	['Q213. 한 회사는 최근 글로벌 전자 상거래 애플리케이션의 데이터 저장소로 Amazo	3		12	1
785	2024-07-08 13:29:20.705058+09	763	['Q210. 회사에 각각 크기가 약 5MB인 많은 수의 파일을 생성하는 응용 프로그램이 	3		12	1
786	2024-07-08 13:29:20.710703+09	762	['Q209. 회사는 단일 Amazon EC2 온디맨드 인스턴스에서 웹 사이트 분석 애플리	3		12	1
787	2024-07-08 13:29:20.71604+09	761	['Q208. 회사에는 처리할 페이로드가 있는 메시지를 보내는 발신자 응용 프로그램과 페이	3		12	1
788	2024-07-08 13:29:20.721597+09	760	['Q207. 병원은 최근 Amazon API Gateway 및 AWS Lambda와 함께	3		12	1
789	2024-07-08 13:29:20.726742+09	759	['Q206. 회사는 Amazon EC2 인스턴스 및 Amazon RDS에서 2계층 애플리	3		12	1
790	2024-07-08 13:29:20.731674+09	758	['Q203. 회사는 응용 프로그램의 데이터를 암호화해야 하는 개발자를 지원하기 위해 확장	3		12	1
791	2024-07-08 13:29:20.736409+09	757	['Q202. 애플리케이션은 여러 가용 영역의 Amazon EC2 인스턴스에서 실행됩니다.	3		12	1
792	2024-07-08 13:29:20.743276+09	756	['Q201. 회사는 확장성 및 가용성에 대한 요구 사항을 충족하기 위해 컨테이너에서 중요	3		12	1
793	2024-07-08 13:29:20.748295+09	755	['Q200. 회사에 많은 Amazon EC2 인스턴스를 사용하여 완료하는 매우 동적인 배	3		12	1
794	2024-07-08 13:29:20.754125+09	754	['Q199. 의료 기록 회사는 Amazon EC2 인스턴스에서 애플리케이션을 호스팅하고 	3		12	1
795	2024-07-08 13:29:20.759792+09	753	['Q198. 회사는 온프레미스 데이터 센터의 Kubernetes 클러스터에서 컨테이너화된	3		12	1
796	2024-07-08 13:29:20.764291+09	752	['Q197. 회사에서 인기 있는 노래 클립으로 만든 벨소리를 판매합니다. 벨소리가 포함된	3		12	1
797	2024-07-08 13:29:20.768213+09	751	['Q196. 한 회사는 사용자가 사진을 업로드하고 이미지에 액자를 추가할 수 있는 이미지	3		12	1
798	2024-07-08 13:29:20.772168+09	750	['Q195. 회사의 웹 애플리케이션이 Application Load Balancer 뒤의	3		12	1
799	2024-07-08 13:29:20.775548+09	749	['Q194. 솔루션 아키텍트가 다가오는 뮤지컬 이벤트를 위해 웹사이트를 최적화하고 있습니	3		12	1
800	2024-07-08 13:29:20.778909+09	748	['Q193. 회사에서 Amazon 머신 이미지(AMI)를 관리하려고 합니다. 회사는 현재	3		12	1
801	2024-07-08 13:29:20.782331+09	747	['Q192. 회사는 UDP 연결을 사용하는 VoIP(Voice over Internet 	3		12	1
802	2024-07-08 13:29:20.789749+09	746	['Q191. 회사에서 새로운 동적 주문 웹사이트를 구축하고 있습니다. 회사는 서버 유지 	3		12	1
803	2024-07-08 13:29:20.793753+09	745	['Q190. 회사는 AWS에서 고성능 컴퓨팅(HPC) 워크로드를 실행합니다. 워크로드에는	3		12	1
804	2024-07-08 13:29:20.79714+09	744	['Q189. 애플리케이션은 VPC의 Amazon EC2 인스턴스에서 실행됩니다. 애플리케	3		12	1
805	2024-07-08 13:29:20.800451+09	743	['Q188. 회사는 Amazon Route 53에 도메인 이름을 등록했습니다. 이 회사는	3		12	1
806	2024-07-08 13:29:20.804216+09	742	['Q187. 회사에 소프트웨어 엔지니어링에 사용되는 AWS 계정이 있습니다. AWS 계정	3		12	1
807	2024-07-08 13:29:20.808164+09	741	['Q186. 회사에서 새로운 서버리스 워크로드를 배포할 준비를 하고 있습니다. 솔루션 설	3		12	1
808	2024-07-08 13:29:20.811582+09	740	['Q185. 솔루션 설계자는 회사가 온프레미스 인프라를 AWS로 확장하기 위해 새로운 하	3		12	1
809	2024-07-08 13:29:20.814864+09	739	['Q184. 한 회사에서 애플리케이션을 서버리스 솔루션으로 이동하려고 합니다. 서버리스 	3		12	1
810	2024-07-08 13:29:20.8182+09	738	['Q183. 회사는 애플리케이션에 대한 실시간 데이터 수집 아키텍처를 구성해야 합니다. 	3		12	1
811	2024-07-08 13:29:20.82196+09	737	['Q182. 한 회사는 Amazon DynamoDB를 사용하여 고객 정보를 저장하는 쇼핑	3		12	1
812	2024-07-08 13:29:20.825741+09	736	['Q181. 회사는 회사의 기본 웹 사이트를 사용할 수 없는 경우 사용자를 백업 정적 오	3		12	1
813	2024-07-08 13:29:20.829261+09	735	['Q180. 회사는 AWS에서 전자 상거래 웹 애플리케이션을 구축하고 있습니다. 애플리케	3		12	1
814	2024-07-08 13:29:20.832773+09	734	['Q179. 회사는 AWS 클라우드에서 호스팅되는 미디어 애플리케이션을 위한 공유 스토리	3		12	1
815	2024-07-08 13:29:20.836611+09	733	['Q178. 회사에 Amazon EC2 인스턴스에서 실행되고 Amazon Aurora 데	3		12	1
816	2024-07-08 13:29:20.840622+09	732	['Q177. 개발 팀은 다른 팀이 액세스할 웹사이트를 호스팅해야 합니다. 웹사이트 콘텐츠	3		12	1
817	2024-07-08 13:29:20.844043+09	731	['Q176. 한 엔터테인먼트 회사에서 Amazon DynamoDB를 사용하여 미디어 메타	3		12	1
818	2024-07-08 13:29:20.847639+09	730	['Q175. 회사의 주문 시스템은 클라이언트에서 Amazon EC2 인스턴스로 요청을 보	3		12	1
819	2024-07-08 13:29:20.851846+09	729	['Q173. 회사에 Amazon EC2 인스턴스에서 실행되는 레거시 데이터 처리 애플리케	3		12	1
820	2024-07-08 13:29:20.85641+09	728	['Q172. 회사는 AWS 클라우드에서 애플리케이션을 구축하고 있습니다. 애플리케이션은 	3		12	1
821	2024-07-08 13:29:20.861427+09	727	['Q171. 회사에 두 개의 Amazon EC2 인스턴스에서 호스팅되는 동적 웹 애플리케	3		12	1
822	2024-07-08 13:29:20.866537+09	726	['Q169. 회사의 애플리케이션은 데이터 수집을 위해 여러 SaaS(Software-as	3		12	1
823	2024-07-08 13:29:20.871485+09	725	['Q168. 회사에서 온프레미스 애플리케이션을 AWS로 마이그레이션하려고 합니다. 애플리	3		12	1
824	2024-07-08 13:29:20.876545+09	724	['Q167. 회사는 MySQL 데이터베이스로 구동되는 온프레미스 애플리케이션을 실행합니다	3		12	1
825	2024-07-08 13:29:20.881322+09	723	['Q166. 응용 프로그램을 사용하면 회사 본사의 사용자가 제품 데이터에 액세스할 수 있	3		12	1
826	2024-07-08 13:29:20.887082+09	722	['Q164. 회사는 1주일 동안 진행될 예정된 이벤트를 위해 특정 AWS 리전의 3개의 	3		12	1
827	2024-07-08 13:29:20.892603+09	721	['Q163. 한 회사는 최근 AWS 계정의 Amazon EC2 인스턴스에서 다양한 새로운	3		12	1
828	2024-07-08 13:29:20.897196+09	720	['Q162. 회사는 온프레미스에 컨테이너화된 애플리케이션을 구축하고 있으며 애플리케이션을	3		12	1
829	2024-07-08 13:29:20.901383+09	719	['Q161. 회사는 대규모 Amazon EC2 인스턴스 집합에서 애플리케이션을 실행합니다	3		12	1
830	2024-07-08 13:29:20.906557+09	718	['Q159. 솔루션 설계자가 애플리케이션을 위한 새로운 Amazon CloudFront 	3		12	1
831	2024-07-08 13:29:20.911461+09	717	['Q158. 회사에서 AWS에 새로운 공개 웹 애플리케이션을 배포하고 있습니다. 애플리케	3		12	1
832	2024-07-08 13:29:20.915802+09	716	['Q157. 게임 회사에 점수를 표시하는 웹 응용 프로그램이 있습니다. 애플리케이션은 A	3		12	1
833	2024-07-08 13:29:20.921028+09	715	['Q156. 회사는 여러 가용 영역의 Amazon EC2 인스턴스에서 실행되는 웹 기반 	3		12	1
834	2024-07-08 13:29:20.925623+09	714	['Q155. 회사는 Amazon S3를 사용하여 기밀 감사 문서를 저장합니다. S3 버킷	3		12	1
835	2024-07-08 13:29:20.929374+09	713	['Q154. 한 회사는 최근에 메시지 처리 시스템을 AWS로 마이그레이션했습니다. 시스템	3		12	1
836	2024-07-08 13:29:20.933074+09	712	['Q153. 회사는 품목 가격을 기반으로 세금 계산 조회를 자동화하는 API를 사용자에게	3		12	1
837	2024-07-08 13:29:20.936767+09	711	['Q152. 회사는 중요한 애플리케이션에 대한 애플리케이션 로그 파일을 10년 동안 보관	3		12	1
838	2024-07-08 13:29:20.940834+09	710	['Q151. 글로벌 회사는 ALB(Application Load Balancer) 뒤의 	3		12	1
839	2024-07-08 13:29:20.944891+09	709	['Q150. 회사에서 Amazon S3 Standard 스토리지를 사용하여 백업 파일을 	3		12	1
840	2024-07-08 13:29:20.948759+09	708	['Q149. 솔루션 설계자는 AWS 클라우드에 배포되는 새 애플리케이션의 아키텍처를 설계	3		12	1
841	2024-07-08 13:29:20.952712+09	707	['Q148. 회사에 AWS에 배포된 3계층 웹 애플리케이션이 있습니다. 웹 서버는 VPC	3		12	1
842	2024-07-08 13:29:20.956683+09	706	['Q147. 회사의 컨테이너화된 애플리케이션은 Amazon EC2 인스턴스에서 실행됩니다	3		12	1
843	2024-07-08 13:29:20.960843+09	705	['Q145. 회사는 독점 애플리케이션의 로그 파일을 분석할 수 있는 능력이 필요합니다. 	3		12	1
844	2024-07-08 13:29:20.96471+09	704	['Q144. AA 회사의 동적 웹 사이트는 미국의 온프레미스 서버를 사용하여 호스팅됩니다	3		12	1
845	2024-07-08 13:29:20.968655+09	703	['Q143. 회사는 의료 시험의 결과를 Amazon S3 리포지토리에 저장해야 합니다. 	3		12	1
846	2024-07-08 13:29:20.97337+09	702	['Q142. 최근에 AWS로 마이그레이션한 회사가 프로덕션 VPC로 들어오고 나가는 트래	3		12	1
847	2024-07-08 13:29:20.978547+09	701	['Q141. 회사는 Amazon S3에서 정적 웹 사이트를 호스팅하고 DNS에 Amazo	3		12	1
848	2024-07-08 13:29:20.982559+09	700	['Q140. 회사는 가장 최근 청구서에서 Amazon EC2 비용 증가를 관찰했습니다. 	3		12	1
849	2024-07-08 13:29:20.986007+09	699	['Q139. 전자 상거래 회사에 Amazon API Gateway와 AWS Lambda 	3		12	1
850	2024-07-08 13:29:20.989974+09	698	['Q138. 회사는 매월 통화 기록 파일을 저장합니다. 사용자는 통화 후 1년 이내에 파	3		12	1
851	2024-07-08 13:29:20.993933+09	697	['Q137. 전자 상거래 회사는 AWS에서 하루 1회 웹 사이트를 시작하려고 합니다. 매	3		12	1
852	2024-07-08 13:29:20.998378+09	696	['Q136. 회사는 AWS 인프라에 대한 월별 유지 관리를 수행합니다. 이러한 유지 관리	3		12	1
853	2024-07-08 13:29:21.00232+09	695	['Q135. 회사에는 다음 구성 요소가 포함된 데이터 수집 워크플로가 있습니다. 새로운 	3		12	1
854	2024-07-08 13:29:21.007038+09	694	['Q134. 회사에 다양한 런타임으로 AWS Lambda 함수를 분당 최대 800번 호출	3		12	1
855	2024-07-08 13:29:21.011911+09	693	['Q133. 솔루션 설계자는 애플리케이션이 Amazon RDS DB 인스턴스에 액세스하는	3		12	1
856	2024-07-08 13:29:21.015426+09	692	['Q132. 게임 회사는 AWS에서 브라우저 기반 애플리케이션을 호스팅합니다. 애플리케이	3		12	1
857	2024-07-08 13:29:21.019059+09	691	['Q131. 회사에서 분산 애플리케이션을 AWS로 마이그레이션하고 있습니다. 애플리케이션	3		12	1
858	2024-07-08 13:29:21.022818+09	690	['Q130. 회사는 AWS 클라우드를 사용하여 기존 애플리케이션을 고가용성 및 복원력으로	3		12	1
859	2024-07-08 13:29:21.026821+09	689	['Q129. AA 회사는 애플리케이션의 성능을 개선하기 위해 다계층 애플리케이션을 온프레	3		12	1
860	2024-07-08 13:29:21.030457+09	688	['Q128. 회사는 여러 Amazon EC2 인스턴스에서 애플리케이션을 호스팅합니다. 애	3		12	1
861	2024-07-08 13:29:21.033881+09	687	['Q127. 회사는 단일 VPC의 Amazon EC2 인스턴스에서 고가용성 이미지 처리 	3		12	1
862	2024-07-08 13:29:21.037219+09	686	['Q126. 솔루션 설계자는 회사의 고객 대면 애플리케이션을 설계하고 있습니다. 애플리케	3		12	1
863	2024-07-08 13:29:21.040952+09	685	['Q125. 회사는 온프레미스 서버에서 Amazon EC2 인스턴스로 애플리케이션을 마이	3		12	1
864	2024-07-08 13:29:21.044402+09	684	['Q123. 회사에서 새 애플리케이션을 시작하고 Amazon CloudWatch 대시보드	3		12	1
865	2024-07-08 13:29:21.047755+09	683	['Q122. 회사에 AWS에서 호스팅되는 웹 사이트가 있습니다. 웹 사이트는 HTTP와 	3		12	1
866	2024-07-08 13:29:21.05107+09	682	['Q121. 솔루션 설계자는 퍼블릭 및 프라이빗 서브넷이 있는 VPC를 설계하고 있습니다	3		12	1
867	2024-07-08 13:29:21.054654+09	681	['Q120. 회사에는 공통 Amazon RDS MySQL 다중 AZ DB 인스턴스에 자주	3		12	1
868	2024-07-08 13:29:21.059178+09	680	['Q119. 솔루션 설계자는 Amazon S3 오리진과 함께 Amazon CloudFro	3		12	1
869	2024-07-08 13:29:21.062946+09	679	['Q118. 회사에서 Amazon EC2 인스턴스에서 배치 애플리케이션을 실행하고 있습니	3		12	1
870	2024-07-08 13:29:21.066692+09	678	['Q117. 솔루션 설계자는 Amazon S3를 사용하여 새로운 디지털 미디어 애플리케이	3		12	1
871	2024-07-08 13:29:21.070328+09	677	['Q115. 회사는 AWS에서 전자 상거래 애플리케이션을 실행합니다. 모든 새 주문은 단	3		12	1
872	2024-07-08 13:29:21.074112+09	676	['Q113. 자전거 공유 회사는 피크 운영 시간 동안 자전거의 위치를 추적하기 위해 다층	3		12	1
873	2024-07-08 13:29:21.078097+09	675	['Q112. 회사는 AWS에서 여러 Windows 워크로드를 실행합니다. 회사 직원은 두	3		12	1
874	2024-07-08 13:29:21.081641+09	674	['Q111. 회사에서 AWS 클라우드의 Auto Scaling 그룹에 속한 Amazon 	3		12	1
875	2024-07-08 13:29:21.085121+09	673	['Q110. 회사는 사용자 트랜잭션 데이터를 Amazon DynamoDB 테이블에 보관해	3		12	1
876	2024-07-08 13:29:21.088865+09	672	['Q109. 회사 웹 사이트는 항목 카탈로그에 Amazon EC2 인스턴스 스토어를 사용	3		12	1
877	2024-07-08 13:29:21.093387+09	671	['Q108. 회사는 기존 3계층 웹 아키텍처의 비용을 절감하려고 합니다. 웹, 애플리케이	3		12	1
878	2024-07-08 13:29:21.097228+09	670	['Q107. 회사는 사용자 요청을 수집하고 요청 유형에 따라 처리를 위해 적절한 마이크로	3		12	1
879	2024-07-08 13:29:21.101172+09	669	['Q106. 회사는 NFS를 사용하여 온프레미스 네트워크 연결 스토리지에 대용량 비디오 	3		12	1
880	2024-07-08 13:29:21.105054+09	668	['Q105. 글로벌 이벤트 주최자는 일일 보고서를 정적 HTML 페이지로 온라인에 게시하	3		12	1
881	2024-07-08 13:29:21.109409+09	667	['Q104. 팀의 모든 AWS 계정에서 특정 서비스 또는 작업에 대한 액세스를 제한하는 	3		12	1
882	2024-07-08 13:29:21.113728+09	666	['Q103. 대규모 미디어 회사는 AWS에서 웹 애플리케이션을 호스팅합니다. 이 회사는 	3		12	1
883	2024-07-08 13:29:26.141054+09	665	['Q102. 회사의 웹사이트는 사용자에게 다운로드 가능한 과거 성과 보고서를 제공합니다.	3		12	1
884	2024-07-08 13:29:26.146658+09	664	['Q100. 게임 회사는 고가용성 아키텍처를 설계하고 있습니다. 애플리케이션은 수정된 L	3		12	1
885	2024-07-08 13:29:26.151221+09	663	['Q99. 회사는 AWS 클라우드에서 웹 애플리케이션을 호스팅합니다. 회사는 AWS Ce	3		12	1
886	2024-07-08 13:29:26.15587+09	662	['Q98. 회사는 Amazon S3에 회계 기록을 저장해야 합니다. 기록은 1년 동안 즉	3		12	1
887	2024-07-08 13:29:26.160283+09	661	['Q97. 회사는 AWS에서 워크로드를 실행합니다. 회사는 외부 공급자의 서비스에 연결해	3		12	1
888	2024-07-08 13:29:26.164709+09	660	['Q96. 회사에 AWS로 마이그레이션해야 하는 Windows 기반 애플리케이션이 있습니	3		12	1
889	2024-07-08 13:29:26.169472+09	659	['Q95. 한 회사에 데이터베이스에 주문을 작성하고 결제를 처리하기 위해 서비스를 호출하	3		12	1
890	2024-07-08 13:29:26.173931+09	658	['Q94. 한 회사는 최근 애플리케이션 마이그레이션 이니셔티브에 대한 지원을 위해 AWS	3		12	1
891	2024-07-08 13:29:26.177963+09	657	['Q93. 회사에서 데이터 저장을 위해 Amazon DynamoDB 테이블을 사용할 계획	3		12	1
892	2024-07-08 13:29:26.181727+09	656	['Q92. 한 미디어 회사가 시스템을 AWS 클라우드로 이전할 가능성을 평가하고 있습니다	3		12	1
893	2024-07-08 13:29:26.185535+09	655	['Q91. 회사는 AWS Organizations를 사용하여 각 사업부에 대한 전용 AW	3		12	1
894	2024-07-08 13:29:26.189452+09	654	['Q89. 회사는 Amazon ECS를 사용하여 애플리케이션을 실행합니다. 애플리케이션은	3		12	1
895	2024-07-08 13:29:26.193021+09	653	['Q88. 한 회사에서 인기 있는 소셜 미디어 웹사이트를 운영하고 있습니다. 웹사이트는 	3		12	1
896	2024-07-08 13:29:26.196613+09	652	['Q87. 회사에 이벤트 데이터를 생성하는 서비스가 있습니다. 회사는 AWS를 사용하여 	3		12	1
897	2024-07-08 13:29:26.200842+09	651	['Q86. 회사는 ALB(Application Load Balancer) 뒤에 있는 Am	3		12	1
898	2024-07-08 13:29:26.210031+09	650	['Q85. 회사에 Java 및 PHP를 기반으로 하는 웹 응용 프로그램이 있습니다. 회사	3		12	1
899	2024-07-08 13:29:26.215679+09	649	['Q83. 회사는 여러 대륙에 걸쳐 도시의 온도, 습도 및 대기압 데이터를 수집합니다. 	3		12	1
900	2024-07-08 13:29:26.221561+09	648	['Q82. 회사에서 기존 온프레미스 모놀리식 애플리케이션을 AWS로 마이그레이션하려고 합	3		12	1
901	2024-07-08 13:29:26.226846+09	647	['Q81. 회사는 Amazon CloudWatch Logs 로그 그룹에 애플리케이션 로그	3		12	1
902	2024-07-08 13:29:26.231583+09	646	['Q80. 회사는 새로운 비즈니스 애플리케이션을 구현하고 있습니다. 애플리케이션은 두 개	3		12	1
903	2024-07-08 13:29:26.236767+09	645	['Q79. 온라인 소매 회사는 5천만 명 이상의 활성 고객을 보유하고 있으며 매일 25,	3		12	1
904	2024-07-08 13:29:26.241822+09	644	['Q78. 회사에 Amazon S3에 백업되는 시간에 민감한 대량의 데이터를 생성하는 온	3		12	1
905	2024-07-08 13:29:26.247046+09	643	['Q77. Amazon EC2 관리자는 여러 사용자가 포함된 IAM 그룹과 연결된 다음 	3		12	1
906	2024-07-08 13:29:26.252004+09	642	['Q76. 회사는 온프레미스 데이터 센터에서 마케팅 웹사이트를 호스팅합니다. 웹 사이트는	3		12	1
907	2024-07-08 13:29:26.256644+09	641	['Q75. 회사는 Application Load Balancer 뒤의 Amazon EC2	3		12	1
908	2024-07-08 13:29:26.261577+09	640	['Q74. 애플리케이션은 프라이빗 서브넷의 Amazon EC2 인스턴스에서 실행됩니다. 	3		12	1
909	2024-07-08 13:29:26.265919+09	639	['Q73. 회사는 AWS 클라우드 배포를 검토하여 Amazon S3 버킷에 무단 구성 변	3		12	1
910	2024-07-08 13:29:26.270097+09	638	['Q72. 글로벌 회사는 Amazon API Gateway를 사용하여 us-east-1 	3		12	1
911	2024-07-08 13:29:26.274425+09	637	['Q71. 회사에 매장에 마케팅 서비스를 제공하는 애플리케이션이 있습니다. 매장 고객의 	3		12	1
912	2024-07-08 13:29:26.278428+09	636	['Q70. 한 회사가 AWS 클라우드에서 공개 웹 애플리케이션 출시를 준비하고 있습니다.	3		12	1
913	2024-07-08 13:29:26.282554+09	635	['Q69. 회사는 us-east-1 리전 내의 3개의 개별 VPC에서 여러 비즈니스 애플	3		12	1
914	2024-07-08 13:29:26.28714+09	634	['Q67. 회사는 Amazon S3에 데이터를 저장해야 하며 데이터가 변경되지 않도록 해	3		12	1
915	2024-07-08 13:29:26.291379+09	633	['Q66. 회사는 Application Load Balancer 뒤의 Amazon EC2	3		12	1
916	2024-07-08 13:29:26.295685+09	632	['Q65. 설문 조사 회사는 미국 지역에서 수년 동안 데이터를 수집했습니다. 이 회사는 	3		12	1
917	2024-07-08 13:29:26.300591+09	631	['Q64. 회사는 AWS에서 OLTP(온라인 트랜잭션 처리: online transact	3		12	1
918	2024-07-08 13:29:26.310087+09	630	['Q63. 이미지 처리 회사에는 사용자가 이미지를 업로드하는 데 사용하는 웹 응용 프로그	3		12	1
919	2024-07-08 13:29:26.315341+09	629	['Q62. 회사는 AWS에서 데이터 레이크를 호스팅합니다. 데이터 레이크는 Amazon 	3		12	1
920	2024-07-08 13:29:26.320533+09	628	['Q61. 회사에는 매일 1TB의 상태 알림을 집합적으로 생성하는 수천 개의 에지 장치가	3		12	1
921	2024-07-08 13:29:26.325429+09	627	['Q60. 회사는 300개 이상의 글로벌 웹사이트 및 애플리케이션을 호스팅합니다. 이 회	3		12	1
922	2024-07-08 13:29:26.330352+09	626	['Q59. 회사에서 AWS 클라우드의 컨테이너에서 애플리케이션을 실행하려고 합니다. 이러	3		12	1
923	2024-07-08 13:29:26.335467+09	625	['Q58. 회사에서 데이터를 Amazon S3 버킷으로 이동할 계획입니다. 데이터는 S3	3		12	1
924	2024-07-08 13:29:26.340835+09	624	['Q57. 회사는 온프레미스에서 Oracle 데이터베이스를 실행합니다. 회사는 AWS로 	3		12	1
925	2024-07-08 13:29:26.345841+09	623	['Q56. 회사에 1,000개의 Amazon EC2 Linux 인스턴스에서 실행되는 프로	3		12	1
926	2024-07-08 13:29:26.350847+09	622	['Q55. AWS에서 웹 애플리케이션을 호스팅하는 회사는 모든 Amazon EC2 인스턴	3		12	1
927	2024-07-08 13:29:26.356007+09	621	['Q54. 회사에 VPC의 Amazon EC2 인스턴스에서 실행되는 애플리케이션이 있습니	3		12	1
928	2024-07-08 13:29:26.360528+09	620	['Q53. 회사에 사용자가 웹 인터페이스 또는 모바일 앱을 통해 문서를 업로드하는 프로덕	3		12	1
929	2024-07-08 13:29:26.365018+09	619	['Q52. 빠르게 성장하는 전자 상거래 회사는 단일 AWS 리전에서 워크로드를 실행하고 	3		12	1
930	2024-07-08 13:29:26.369494+09	618	['Q50. 솔루션 설계자는 회사의 스토리지 비용을 줄이기 위한 솔루션을 구현해야 합니다.	3		12	1
931	2024-07-08 13:29:26.374126+09	617	['Q49. 회사에서 3계층 웹 응용 프로그램을 사용하여 신입 직원에게 교육을 제공합니다.	3		12	1
932	2024-07-08 13:29:26.382341+09	616	['Q48. 한 회사에서 사용자가 Amazon S3에 작은 파일을 업로드하는 애플리케이션을	3		12	1
933	2024-07-08 13:29:26.387036+09	615	['Q47. 회사는 Amazon EC2 인스턴스 집합에서 프로덕션 애플리케이션을 실행합니다	3		12	1
934	2024-07-08 13:29:26.39204+09	614	['Q46. 솔루션 설계자는 AWS에 배포되는 새 애플리케이션을 위한 클라우드 아키텍처를 	3		12	1
935	2024-07-08 13:29:26.401023+09	613	['Q45. 한 회사는 사용자에게 글로벌 속보, 지역 경보 및 날씨 업데이트를 제공하는 웹	3		12	1
936	2024-07-08 13:29:26.406779+09	612	['Q44. 솔루션 설계자가 다중 서브넷 VPC 아키텍처를 개발 중입니다. 솔루션은 2개의	3		12	1
937	2024-07-08 13:29:26.4119+09	611	['Q43. 회사는 사용자 업로드 문서를 Amazon EBS 볼륨에 저장하는 단일 Amaz	3		12	1
938	2024-07-08 13:29:26.417192+09	610	['Q42. 회사에서 SQL 데이터베이스를 사용하여 공개적으로 액세스할 수 있는 영화 데이	3		12	1
939	2024-07-08 13:29:26.422323+09	609	['Q41. 회사에서 애플리케이션을 AWS로 마이그레이션하고 있습니다. 응용 프로그램은 다	3		12	1
940	2024-07-08 13:29:26.427853+09	608	['Q40. 회사에는 Microsoft Windows 공유 파일 저장소가 필요한 온프레미스	3		12	1
941	2024-07-08 13:29:26.433354+09	607	['Q39. 회사에서 동일한 AWS 리전의 테스트 환경에 대량의 프로덕션 데이터를 복제하는	3		12	1
942	2024-07-08 13:29:26.438822+09	606	['Q34. 회사는 AWS 에서 온라인 마켓플레이스 웹 애플리케이션을 실행합니다. 이 애플	3		12	1
943	2024-07-08 13:29:26.444722+09	605	['Q33. 회사는 Application Load Balancer 뒤의 Amazon EC2	3		12	1
944	2024-07-08 13:29:26.44979+09	604	['Q31. 회사에서 새 애플리케이션을 시작하고 Amazon CloudWatch 대시보드에	3		12	1
945	2024-07-08 13:29:26.455364+09	603	['Q30. 회사는 Amazon EC2 인스턴스에서 Amazon S3 버킷으로 데이터를 이	3		12	1
946	2024-07-08 13:29:26.45965+09	602	['Q29. 한 회사에 Amazon RDS 의 데이터베이스에 목록을 저장하는 자동차 판매 	3		12	1
947	2024-07-08 13:29:26.463472+09	601	['Q28. 회사에는 ALB(Application Load Balancer) 뒤의 단일 가	3		12	1
948	2024-07-08 13:29:26.467019+09	600	['Q26. 회사는 AWS Organizations 를 사용하여 여러 부서의 여러 AWS 	3		12	1
949	2024-07-08 13:29:26.470903+09	599	['Q24. 회사는 최근 웹 공격으로 인해 공개 웹 응용 프로그램의 보안에 대해 우려하고 	3		12	1
950	2024-07-08 13:29:26.475618+09	598	['Q23. 회사는 웹 사이트에서 검색 가능한 항목 저장소를 유지 관리합니다. 데이터는 천	3		12	1
951	2024-07-08 13:29:26.480368+09	597	['Q22. 회사는 AWS 에서 인프라를 실행하고 문서 관리 애플리케이션에 대해 700,0	3		12	1
952	2024-07-08 13:29:26.485275+09	596	['Q21. 회사는 보고를 위해 50TB 의 데이터를 사용합니다. 회사는 이 데이터를 온프	3		12	1
953	2024-07-08 13:29:26.490193+09	595	['Q20. 한 회사에서 Amazon S3 버킷을 스토리지로 사용할 파일 공유 애플리케이션	3		12	1
954	2024-07-08 13:29:26.494959+09	594	['Q19. 회사는 데이터 센터에서 SMB 파일 서버를 실행하고 있습니다. 파일 서버는 파	3		12	1
955	2024-07-08 13:29:26.499934+09	593	['Q18. 텔레마케팅 회사는 AWS 에서 고객 콜 센터 기능을 설계하고 있습니다. 회사는	3		12	1
956	2024-07-08 13:29:26.505295+09	592	['Q16. 회사에서 Amazon S3 에 기밀 데이터를 저장할 준비를 하고 있습니다. 규	3		12	1
957	2024-07-08 13:29:26.510375+09	591	['Q14. 회사는 Application Load Balancer 뒤의 Amazon EC2	3		12	1
958	2024-07-08 13:29:26.515037+09	590	['Q13. 회사의 응용 프로그램에 성능 문제가 있습니다. 애플리케이션은 스테이트풀(Sta	3		12	1
959	2024-07-08 13:29:26.520313+09	589	['Q12. 회사는 AWS 에서 다중 계층 애플리케이션을 호스팅합니다. 규정 준수, 거버넌	3		12	1
960	2024-07-08 13:29:26.525126+09	588	['Q11. 회사에는 매일 동시에 실행되는 AWS Glue 추출, 변환 및 로드(ETL) 	3		12	1
961	2024-07-08 13:29:26.529905+09	587	['Q10. 회사는 재무 위험 모델링을 위해 AWS 에서 고성능 컴퓨팅(HPC) 인프라를 	3		12	1
962	2024-07-08 13:29:26.53511+09	586	['Q8. 회사는 Amazon API Gateway API 에 의해 호출되는 AWS Lam	3		12	1
963	2024-07-08 13:29:26.539945+09	585	['Q6. 회사에 들어오는 메시지를 수집하는 응용 프로그램이 있습니다. 그런 다음 이러한 	3		12	1
964	2024-07-08 13:29:26.5447+09	584	['Q5. 회사의 HTTP 애플리케이션은 NLB(Network Load Balancer) 	3		12	1
965	2024-07-08 13:29:26.566721+09	583	['Q4. 회사는 Application Load Balancer 뒤의 Amazon EC2 	3		12	1
966	2024-07-08 13:29:26.57404+09	582	['Q3. 회사는 동일한 AWS 리전에 있는 Amazon S3 버킷에서 사진을 자주 업로드	3		12	1
967	2024-07-08 13:29:26.579981+09	581	['Q2. 회사는 AWS 에서 호스팅되는 서비스 솔루션으로 고성능 컴퓨팅(HPC) 워크로드	3		12	1
968	2024-07-08 13:29:26.585492+09	580	['Q1. 전자 상거래 회사는 AWS 클라우드에서 분석 애플리케이션을 호스팅합니다. 애플리	3		12	1
969	2024-07-08 16:03:50.987929+09	1353	aws object (1353)	3		12	1
970	2024-07-08 16:03:51.019083+09	1352	aws object (1352)	3		12	1
971	2024-07-08 16:03:51.023938+09	1351	aws object (1351)	3		12	1
972	2024-07-08 16:03:51.02838+09	1350	aws object (1350)	3		12	1
973	2024-07-08 16:03:51.03299+09	1349	aws object (1349)	3		12	1
974	2024-07-08 16:03:51.03815+09	1348	aws object (1348)	3		12	1
975	2024-07-08 16:03:51.044007+09	1347	aws object (1347)	3		12	1
976	2024-07-08 16:03:51.048945+09	1346	aws object (1346)	3		12	1
977	2024-07-08 16:03:51.05742+09	1345	aws object (1345)	3		12	1
978	2024-07-08 16:03:51.06233+09	1344	aws object (1344)	3		12	1
979	2024-07-08 16:03:51.07005+09	1343	aws object (1343)	3		12	1
986	2024-07-08 16:03:51.106119+09	1336	aws object (1336)	3		12	1
987	2024-07-08 16:03:51.111566+09	1335	aws object (1335)	3		12	1
988	2024-07-08 16:03:51.117668+09	1334	aws object (1334)	3		12	1
989	2024-07-08 16:03:51.122935+09	1333	aws object (1333)	3		12	1
990	2024-07-08 16:03:51.12755+09	1332	aws object (1332)	3		12	1
991	2024-07-08 16:03:51.13323+09	1331	aws object (1331)	3		12	1
992	2024-07-08 16:03:51.139184+09	1330	aws object (1330)	3		12	1
993	2024-07-08 16:03:51.143446+09	1329	aws object (1329)	3		12	1
994	2024-07-08 16:03:51.14776+09	1328	aws object (1328)	3		12	1
995	2024-07-08 16:03:51.152603+09	1327	aws object (1327)	3		12	1
996	2024-07-08 16:03:51.157188+09	1326	aws object (1326)	3		12	1
997	2024-07-08 16:03:51.161866+09	1325	aws object (1325)	3		12	1
998	2024-07-08 16:03:51.166833+09	1324	aws object (1324)	3		12	1
999	2024-07-08 16:03:51.172104+09	1323	aws object (1323)	3		12	1
1000	2024-07-08 16:03:51.177364+09	1322	aws object (1322)	3		12	1
1001	2024-07-08 16:03:51.183259+09	1321	aws object (1321)	3		12	1
1002	2024-07-08 16:03:51.189068+09	1320	aws object (1320)	3		12	1
1003	2024-07-08 16:03:51.193645+09	1319	aws object (1319)	3		12	1
1004	2024-07-08 16:03:51.198422+09	1318	aws object (1318)	3		12	1
1005	2024-07-08 16:03:51.20301+09	1317	aws object (1317)	3		12	1
1006	2024-07-08 16:03:51.208036+09	1316	aws object (1316)	3		12	1
1007	2024-07-08 16:03:51.213329+09	1315	aws object (1315)	3		12	1
1008	2024-07-08 16:03:51.218246+09	1314	aws object (1314)	3		12	1
1009	2024-07-08 16:03:51.222514+09	1313	aws object (1313)	3		12	1
1010	2024-07-08 16:03:51.226944+09	1312	aws object (1312)	3		12	1
1011	2024-07-08 16:03:51.231634+09	1311	aws object (1311)	3		12	1
1012	2024-07-08 16:03:51.237314+09	1310	aws object (1310)	3		12	1
1013	2024-07-08 16:03:51.243778+09	1309	aws object (1309)	3		12	1
1014	2024-07-08 16:03:51.24868+09	1308	aws object (1308)	3		12	1
1015	2024-07-08 16:03:51.253385+09	1307	aws object (1307)	3		12	1
1016	2024-07-08 16:03:51.258887+09	1306	aws object (1306)	3		12	1
1017	2024-07-08 16:03:51.263954+09	1305	aws object (1305)	3		12	1
1018	2024-07-08 16:03:51.269177+09	1304	aws object (1304)	3		12	1
1019	2024-07-08 16:03:51.274139+09	1303	aws object (1303)	3		12	1
1020	2024-07-08 16:03:51.278659+09	1302	aws object (1302)	3		12	1
1021	2024-07-08 16:03:51.283652+09	1301	aws object (1301)	3		12	1
1022	2024-07-08 16:03:51.288993+09	1300	aws object (1300)	3		12	1
1023	2024-07-08 16:03:51.294365+09	1299	aws object (1299)	3		12	1
1024	2024-07-08 16:03:51.300139+09	1298	aws object (1298)	3		12	1
1025	2024-07-08 16:03:51.305232+09	1297	aws object (1297)	3		12	1
1026	2024-07-08 16:03:51.310742+09	1296	aws object (1296)	3		12	1
1027	2024-07-08 16:03:51.315358+09	1295	aws object (1295)	3		12	1
1028	2024-07-08 16:03:51.320799+09	1294	aws object (1294)	3		12	1
1029	2024-07-08 16:03:51.326505+09	1293	aws object (1293)	3		12	1
1030	2024-07-08 16:03:51.33123+09	1292	aws object (1292)	3		12	1
1031	2024-07-08 16:03:51.336454+09	1291	aws object (1291)	3		12	1
1032	2024-07-08 16:03:51.34133+09	1290	aws object (1290)	3		12	1
1033	2024-07-08 16:03:51.346901+09	1289	aws object (1289)	3		12	1
1034	2024-07-08 16:03:51.351667+09	1288	aws object (1288)	3		12	1
1035	2024-07-08 16:03:51.356561+09	1287	aws object (1287)	3		12	1
1036	2024-07-08 16:03:51.36171+09	1286	aws object (1286)	3		12	1
1037	2024-07-08 16:03:51.366791+09	1285	aws object (1285)	3		12	1
1038	2024-07-08 16:03:51.372741+09	1284	aws object (1284)	3		12	1
1039	2024-07-08 16:03:51.378548+09	1283	aws object (1283)	3		12	1
1040	2024-07-08 16:03:51.383791+09	1282	aws object (1282)	3		12	1
1041	2024-07-08 16:03:51.389786+09	1281	aws object (1281)	3		12	1
1042	2024-07-08 16:03:51.395264+09	1280	aws object (1280)	3		12	1
1043	2024-07-08 16:03:51.399944+09	1279	aws object (1279)	3		12	1
1044	2024-07-08 16:03:51.405565+09	1278	aws object (1278)	3		12	1
1045	2024-07-08 16:03:51.411295+09	1277	aws object (1277)	3		12	1
1046	2024-07-08 16:03:51.416027+09	1276	aws object (1276)	3		12	1
1047	2024-07-08 16:03:51.421095+09	1275	aws object (1275)	3		12	1
1048	2024-07-08 16:03:51.425737+09	1274	aws object (1274)	3		12	1
1049	2024-07-08 16:03:51.430692+09	1273	aws object (1273)	3		12	1
1050	2024-07-08 16:03:51.436095+09	1272	aws object (1272)	3		12	1
1051	2024-07-08 16:03:51.441256+09	1271	aws object (1271)	3		12	1
1052	2024-07-08 16:03:51.450503+09	1270	aws object (1270)	3		12	1
1053	2024-07-08 16:03:51.455961+09	1269	aws object (1269)	3		12	1
1054	2024-07-08 16:03:51.460039+09	1268	aws object (1268)	3		12	1
1055	2024-07-08 16:03:51.46537+09	1267	aws object (1267)	3		12	1
1056	2024-07-08 16:03:51.47476+09	1266	aws object (1266)	3		12	1
1057	2024-07-08 16:03:51.48123+09	1265	aws object (1265)	3		12	1
1058	2024-07-08 16:03:51.48503+09	1264	aws object (1264)	3		12	1
1059	2024-07-08 16:03:51.491232+09	1263	aws object (1263)	3		12	1
1060	2024-07-08 16:03:51.503085+09	1262	aws object (1262)	3		12	1
1061	2024-07-08 16:03:51.50924+09	1261	aws object (1261)	3		12	1
1062	2024-07-08 16:03:51.515807+09	1260	aws object (1260)	3		12	1
1063	2024-07-08 16:03:51.521277+09	1259	aws object (1259)	3		12	1
1064	2024-07-08 16:03:51.526183+09	1258	aws object (1258)	3		12	1
1065	2024-07-08 16:03:51.531256+09	1257	aws object (1257)	3		12	1
1066	2024-07-08 16:03:51.536245+09	1256	aws object (1256)	3		12	1
1067	2024-07-08 16:03:51.54125+09	1255	aws object (1255)	3		12	1
1068	2024-07-08 16:03:51.545905+09	1254	aws object (1254)	3		12	1
1069	2024-07-08 16:03:59.201396+09	1253	aws object (1253)	3		12	1
1070	2024-07-08 16:03:59.216431+09	1252	aws object (1252)	3		12	1
1071	2024-07-08 16:03:59.23189+09	1251	aws object (1251)	3		12	1
1072	2024-07-08 16:03:59.239403+09	1250	aws object (1250)	3		12	1
1073	2024-07-08 16:03:59.244379+09	1249	aws object (1249)	3		12	1
1074	2024-07-08 16:03:59.249135+09	1248	aws object (1248)	3		12	1
1075	2024-07-08 16:03:59.253915+09	1247	aws object (1247)	3		12	1
1076	2024-07-08 16:03:59.258729+09	1246	aws object (1246)	3		12	1
1077	2024-07-08 16:03:59.263742+09	1245	aws object (1245)	3		12	1
1078	2024-07-08 16:03:59.269187+09	1244	aws object (1244)	3		12	1
1079	2024-07-08 16:03:59.27474+09	1243	aws object (1243)	3		12	1
1080	2024-07-08 16:03:59.279114+09	1242	aws object (1242)	3		12	1
1081	2024-07-08 16:03:59.2832+09	1241	aws object (1241)	3		12	1
1082	2024-07-08 16:03:59.288537+09	1240	aws object (1240)	3		12	1
1083	2024-07-08 16:03:59.293829+09	1239	aws object (1239)	3		12	1
1084	2024-07-08 16:03:59.298985+09	1238	aws object (1238)	3		12	1
1085	2024-07-08 16:03:59.303839+09	1237	aws object (1237)	3		12	1
1086	2024-07-08 16:03:59.308853+09	1236	aws object (1236)	3		12	1
1087	2024-07-08 16:03:59.313428+09	1235	aws object (1235)	3		12	1
1088	2024-07-08 16:03:59.317779+09	1234	aws object (1234)	3		12	1
1089	2024-07-08 16:03:59.323139+09	1233	aws object (1233)	3		12	1
1090	2024-07-08 16:03:59.328379+09	1232	aws object (1232)	3		12	1
1091	2024-07-08 16:03:59.334061+09	1231	aws object (1231)	3		12	1
1092	2024-07-08 16:03:59.338728+09	1230	aws object (1230)	3		12	1
1093	2024-07-08 16:03:59.342968+09	1229	aws object (1229)	3		12	1
1094	2024-07-08 16:03:59.346923+09	1228	aws object (1228)	3		12	1
1095	2024-07-08 16:03:59.351093+09	1227	aws object (1227)	3		12	1
1096	2024-07-08 16:03:59.355607+09	1226	aws object (1226)	3		12	1
1097	2024-07-08 16:03:59.361216+09	1225	aws object (1225)	3		12	1
1098	2024-07-08 16:03:59.366122+09	1224	aws object (1224)	3		12	1
1099	2024-07-08 16:03:59.371259+09	1223	aws object (1223)	3		12	1
1100	2024-07-08 16:03:59.376061+09	1222	aws object (1222)	3		12	1
1101	2024-07-08 16:03:59.380584+09	1221	aws object (1221)	3		12	1
1102	2024-07-08 16:03:59.385228+09	1220	aws object (1220)	3		12	1
1103	2024-07-08 16:03:59.391723+09	1219	aws object (1219)	3		12	1
1104	2024-07-08 16:03:59.399965+09	1218	aws object (1218)	3		12	1
1105	2024-07-08 16:03:59.412234+09	1217	aws object (1217)	3		12	1
1106	2024-07-08 16:03:59.424717+09	1216	aws object (1216)	3		12	1
1107	2024-07-08 16:03:59.433293+09	1215	aws object (1215)	3		12	1
1108	2024-07-08 16:03:59.437676+09	1214	aws object (1214)	3		12	1
1109	2024-07-08 16:03:59.442888+09	1213	aws object (1213)	3		12	1
1110	2024-07-08 16:03:59.448086+09	1212	aws object (1212)	3		12	1
1111	2024-07-08 16:03:59.452896+09	1211	aws object (1211)	3		12	1
1112	2024-07-08 16:03:59.458385+09	1210	aws object (1210)	3		12	1
1113	2024-07-08 16:03:59.464386+09	1209	aws object (1209)	3		12	1
1114	2024-07-08 16:03:59.469123+09	1208	aws object (1208)	3		12	1
1115	2024-07-08 16:03:59.473742+09	1207	aws object (1207)	3		12	1
1116	2024-07-08 16:03:59.478594+09	1206	aws object (1206)	3		12	1
1117	2024-07-08 16:03:59.483918+09	1205	aws object (1205)	3		12	1
1118	2024-07-08 16:03:59.489199+09	1204	aws object (1204)	3		12	1
1119	2024-07-08 16:03:59.494572+09	1203	aws object (1203)	3		12	1
1120	2024-07-08 16:03:59.499282+09	1202	aws object (1202)	3		12	1
1121	2024-07-08 16:03:59.504025+09	1201	aws object (1201)	3		12	1
1122	2024-07-08 16:03:59.508686+09	1200	aws object (1200)	3		12	1
1123	2024-07-08 16:03:59.513671+09	1199	aws object (1199)	3		12	1
1124	2024-07-08 16:03:59.518804+09	1198	aws object (1198)	3		12	1
1125	2024-07-08 16:03:59.523897+09	1197	aws object (1197)	3		12	1
1126	2024-07-08 16:03:59.529884+09	1196	aws object (1196)	3		12	1
1127	2024-07-08 16:03:59.534624+09	1195	aws object (1195)	3		12	1
1128	2024-07-08 16:03:59.539061+09	1194	aws object (1194)	3		12	1
1129	2024-07-08 16:03:59.544007+09	1193	aws object (1193)	3		12	1
1130	2024-07-08 16:03:59.550103+09	1192	aws object (1192)	3		12	1
1131	2024-07-08 16:03:59.554944+09	1191	aws object (1191)	3		12	1
1132	2024-07-08 16:03:59.559474+09	1190	aws object (1190)	3		12	1
1133	2024-07-08 16:03:59.564989+09	1189	aws object (1189)	3		12	1
1134	2024-07-08 16:03:59.569125+09	1188	aws object (1188)	3		12	1
1135	2024-07-08 16:03:59.573616+09	1187	aws object (1187)	3		12	1
1136	2024-07-08 16:03:59.579288+09	1186	aws object (1186)	3		12	1
1137	2024-07-08 16:03:59.58469+09	1185	aws object (1185)	3		12	1
1138	2024-07-08 16:03:59.589202+09	1184	aws object (1184)	3		12	1
1139	2024-07-08 16:03:59.59375+09	1183	aws object (1183)	3		12	1
1140	2024-07-08 16:03:59.598345+09	1182	aws object (1182)	3		12	1
1141	2024-07-08 16:03:59.602481+09	1181	aws object (1181)	3		12	1
1142	2024-07-08 16:03:59.60697+09	1180	aws object (1180)	3		12	1
1143	2024-07-08 16:03:59.612641+09	1179	aws object (1179)	3		12	1
1144	2024-07-08 16:03:59.618167+09	1178	aws object (1178)	3		12	1
1145	2024-07-08 16:03:59.62619+09	1177	aws object (1177)	3		12	1
1146	2024-07-08 16:03:59.631048+09	1176	aws object (1176)	3		12	1
1147	2024-07-08 16:03:59.636259+09	1175	aws object (1175)	3		12	1
1148	2024-07-08 16:03:59.641536+09	1174	aws object (1174)	3		12	1
1149	2024-07-08 16:03:59.647182+09	1173	aws object (1173)	3		12	1
1150	2024-07-08 16:03:59.652341+09	1172	aws object (1172)	3		12	1
1151	2024-07-08 16:03:59.657532+09	1171	aws object (1171)	3		12	1
1152	2024-07-08 16:03:59.662607+09	1170	aws object (1170)	3		12	1
1153	2024-07-08 16:03:59.667372+09	1169	aws object (1169)	3		12	1
1154	2024-07-08 16:03:59.672336+09	1168	aws object (1168)	3		12	1
1155	2024-07-08 16:03:59.677863+09	1167	aws object (1167)	3		12	1
1156	2024-07-08 16:03:59.683617+09	1166	aws object (1166)	3		12	1
1157	2024-07-08 16:03:59.689051+09	1165	aws object (1165)	3		12	1
1158	2024-07-08 16:03:59.694097+09	1164	aws object (1164)	3		12	1
1159	2024-07-08 16:03:59.698779+09	1163	aws object (1163)	3		12	1
1160	2024-07-08 16:03:59.702519+09	1162	aws object (1162)	3		12	1
1161	2024-07-08 16:03:59.706183+09	1161	aws object (1161)	3		12	1
1162	2024-07-08 16:03:59.709665+09	1160	aws object (1160)	3		12	1
1163	2024-07-08 16:03:59.71294+09	1159	aws object (1159)	3		12	1
1164	2024-07-08 16:03:59.716444+09	1158	aws object (1158)	3		12	1
1165	2024-07-08 16:03:59.720066+09	1157	aws object (1157)	3		12	1
1166	2024-07-08 16:03:59.723443+09	1156	aws object (1156)	3		12	1
1167	2024-07-08 16:03:59.727053+09	1155	aws object (1155)	3		12	1
1168	2024-07-08 16:03:59.730839+09	1154	aws object (1154)	3		12	1
1169	2024-07-08 16:04:04.667296+09	1153	aws object (1153)	3		12	1
1170	2024-07-08 16:04:04.683872+09	1152	aws object (1152)	3		12	1
1171	2024-07-08 16:04:04.696701+09	1151	aws object (1151)	3		12	1
1172	2024-07-08 16:04:04.702099+09	1150	aws object (1150)	3		12	1
1173	2024-07-08 16:04:04.707118+09	1149	aws object (1149)	3		12	1
1174	2024-07-08 16:04:04.711839+09	1148	aws object (1148)	3		12	1
1175	2024-07-08 16:04:04.716465+09	1147	aws object (1147)	3		12	1
1176	2024-07-08 16:04:04.721384+09	1146	aws object (1146)	3		12	1
1177	2024-07-08 16:04:04.726146+09	1145	aws object (1145)	3		12	1
1178	2024-07-08 16:04:04.731036+09	1144	aws object (1144)	3		12	1
1179	2024-07-08 16:04:04.735983+09	1143	aws object (1143)	3		12	1
1180	2024-07-08 16:04:04.741375+09	1142	aws object (1142)	3		12	1
1181	2024-07-08 16:04:04.746165+09	1141	aws object (1141)	3		12	1
1182	2024-07-08 16:04:04.751106+09	1140	aws object (1140)	3		12	1
1183	2024-07-08 16:04:04.755855+09	1139	aws object (1139)	3		12	1
1184	2024-07-08 16:04:04.760976+09	1138	aws object (1138)	3		12	1
1185	2024-07-08 16:04:04.76519+09	1137	aws object (1137)	3		12	1
1186	2024-07-08 16:04:04.769378+09	1136	aws object (1136)	3		12	1
1187	2024-07-08 16:04:04.773844+09	1135	aws object (1135)	3		12	1
1188	2024-07-08 16:04:04.778577+09	1134	aws object (1134)	3		12	1
1189	2024-07-08 16:04:04.782956+09	1133	aws object (1133)	3		12	1
1190	2024-07-08 16:04:04.787944+09	1132	aws object (1132)	3		12	1
1191	2024-07-08 16:04:04.793105+09	1131	aws object (1131)	3		12	1
1192	2024-07-08 16:04:04.79819+09	1130	aws object (1130)	3		12	1
1193	2024-07-08 16:04:04.803682+09	1129	aws object (1129)	3		12	1
1194	2024-07-08 16:04:04.808535+09	1128	aws object (1128)	3		12	1
1195	2024-07-08 16:04:04.813275+09	1127	aws object (1127)	3		12	1
1196	2024-07-08 16:04:04.817325+09	1126	aws object (1126)	3		12	1
1197	2024-07-08 16:04:04.821657+09	1125	aws object (1125)	3		12	1
1198	2024-07-08 16:04:04.826503+09	1124	aws object (1124)	3		12	1
1199	2024-07-08 16:04:04.831236+09	1123	aws object (1123)	3		12	1
1200	2024-07-08 16:04:04.835798+09	1122	aws object (1122)	3		12	1
1201	2024-07-08 16:04:04.840754+09	1121	aws object (1121)	3		12	1
1202	2024-07-08 16:04:04.84675+09	1120	aws object (1120)	3		12	1
1203	2024-07-08 16:04:04.851721+09	1119	aws object (1119)	3		12	1
1204	2024-07-08 16:04:04.856435+09	1118	aws object (1118)	3		12	1
1205	2024-07-08 16:04:04.863815+09	1117	aws object (1117)	3		12	1
1206	2024-07-08 16:04:04.869848+09	1116	aws object (1116)	3		12	1
1207	2024-07-08 16:04:04.877719+09	1115	aws object (1115)	3		12	1
1208	2024-07-08 16:04:04.881828+09	1114	aws object (1114)	3		12	1
1209	2024-07-08 16:04:04.885816+09	1113	aws object (1113)	3		12	1
1210	2024-07-08 16:04:04.890662+09	1112	aws object (1112)	3		12	1
1211	2024-07-08 16:04:04.896038+09	1111	aws object (1111)	3		12	1
1212	2024-07-08 16:04:04.901194+09	1110	aws object (1110)	3		12	1
1213	2024-07-08 16:04:04.905923+09	1109	aws object (1109)	3		12	1
1214	2024-07-08 16:04:04.910868+09	1108	aws object (1108)	3		12	1
1215	2024-07-08 16:04:04.91562+09	1107	aws object (1107)	3		12	1
1216	2024-07-08 16:04:04.919897+09	1106	aws object (1106)	3		12	1
1217	2024-07-08 16:04:04.924466+09	1105	aws object (1105)	3		12	1
1218	2024-07-08 16:04:04.92924+09	1104	aws object (1104)	3		12	1
1219	2024-07-08 16:04:04.9339+09	1103	aws object (1103)	3		12	1
1220	2024-07-08 16:04:04.938238+09	1102	aws object (1102)	3		12	1
1221	2024-07-08 16:04:04.942418+09	1101	aws object (1101)	3		12	1
1222	2024-07-08 16:04:04.946536+09	1100	aws object (1100)	3		12	1
1223	2024-07-08 16:04:04.951241+09	1099	aws object (1099)	3		12	1
1224	2024-07-08 16:04:04.955906+09	1098	aws object (1098)	3		12	1
1225	2024-07-08 16:04:04.960619+09	1097	aws object (1097)	3		12	1
1226	2024-07-08 16:04:04.966257+09	1096	aws object (1096)	3		12	1
1227	2024-07-08 16:04:04.971566+09	1095	aws object (1095)	3		12	1
1228	2024-07-08 16:04:04.976809+09	1094	aws object (1094)	3		12	1
1229	2024-07-08 16:04:04.981726+09	1093	aws object (1093)	3		12	1
1230	2024-07-08 16:04:04.986548+09	1092	aws object (1092)	3		12	1
1231	2024-07-08 16:04:04.991225+09	1091	aws object (1091)	3		12	1
1232	2024-07-08 16:04:04.996222+09	1090	aws object (1090)	3		12	1
1233	2024-07-08 16:04:05.001091+09	1089	aws object (1089)	3		12	1
1234	2024-07-08 16:04:05.006972+09	1088	aws object (1088)	3		12	1
1235	2024-07-08 16:04:05.012434+09	1087	aws object (1087)	3		12	1
1236	2024-07-08 16:04:05.018285+09	1086	aws object (1086)	3		12	1
1237	2024-07-08 16:04:05.02298+09	1085	aws object (1085)	3		12	1
1238	2024-07-08 16:04:05.027866+09	1084	aws object (1084)	3		12	1
1239	2024-07-08 16:04:05.032084+09	1083	aws object (1083)	3		12	1
1240	2024-07-08 16:04:05.036241+09	1082	aws object (1082)	3		12	1
1241	2024-07-08 16:04:05.040473+09	1081	aws object (1081)	3		12	1
1242	2024-07-08 16:04:05.044965+09	1080	aws object (1080)	3		12	1
1243	2024-07-08 16:04:05.049229+09	1079	aws object (1079)	3		12	1
1244	2024-07-08 16:04:05.053381+09	1078	aws object (1078)	3		12	1
1245	2024-07-08 16:04:05.058392+09	1077	aws object (1077)	3		12	1
1246	2024-07-08 16:04:05.063269+09	1076	aws object (1076)	3		12	1
1247	2024-07-08 16:04:05.068923+09	1075	aws object (1075)	3		12	1
1248	2024-07-08 16:04:05.073907+09	1074	aws object (1074)	3		12	1
1249	2024-07-08 16:04:05.078948+09	1073	aws object (1073)	3		12	1
1250	2024-07-08 16:04:05.084519+09	1072	aws object (1072)	3		12	1
1251	2024-07-08 16:04:05.0893+09	1071	aws object (1071)	3		12	1
1252	2024-07-08 16:04:05.093687+09	1070	aws object (1070)	3		12	1
1253	2024-07-08 16:04:05.097824+09	1069	aws object (1069)	3		12	1
1254	2024-07-08 16:04:05.102204+09	1068	aws object (1068)	3		12	1
1255	2024-07-08 16:04:05.107009+09	1067	aws object (1067)	3		12	1
1256	2024-07-08 16:04:05.111923+09	1066	aws object (1066)	3		12	1
1257	2024-07-08 16:04:05.116915+09	1065	aws object (1065)	3		12	1
1258	2024-07-08 16:04:05.121966+09	1064	aws object (1064)	3		12	1
1259	2024-07-08 16:04:05.127129+09	1063	aws object (1063)	3		12	1
1260	2024-07-08 16:04:05.131776+09	1062	aws object (1062)	3		12	1
1261	2024-07-08 16:04:05.136758+09	1061	aws object (1061)	3		12	1
1262	2024-07-08 16:04:05.141545+09	1060	aws object (1060)	3		12	1
1263	2024-07-08 16:04:05.146426+09	1059	aws object (1059)	3		12	1
1264	2024-07-08 16:04:05.150937+09	1058	aws object (1058)	3		12	1
1265	2024-07-08 16:04:05.155319+09	1057	aws object (1057)	3		12	1
1266	2024-07-08 16:04:05.160038+09	1056	aws object (1056)	3		12	1
1267	2024-07-08 16:04:05.164799+09	1055	aws object (1055)	3		12	1
1268	2024-07-08 16:04:05.168886+09	1054	aws object (1054)	3		12	1
1269	2024-07-08 16:04:10.133483+09	1053	aws object (1053)	3		12	1
1270	2024-07-08 16:04:10.139314+09	1052	aws object (1052)	3		12	1
1271	2024-07-08 16:04:10.145261+09	1051	aws object (1051)	3		12	1
1272	2024-07-08 16:04:10.150176+09	1050	aws object (1050)	3		12	1
1273	2024-07-08 16:04:10.155004+09	1049	aws object (1049)	3		12	1
1274	2024-07-08 16:04:10.160152+09	1048	aws object (1048)	3		12	1
1275	2024-07-08 16:04:10.164771+09	1047	aws object (1047)	3		12	1
1276	2024-07-08 16:04:10.173062+09	1046	aws object (1046)	3		12	1
1277	2024-07-08 16:04:10.177509+09	1045	aws object (1045)	3		12	1
1278	2024-07-08 16:04:10.181963+09	1044	aws object (1044)	3		12	1
1279	2024-07-08 16:04:10.194345+09	1043	aws object (1043)	3		12	1
1280	2024-07-08 16:04:10.200441+09	1042	aws object (1042)	3		12	1
1281	2024-07-08 16:04:10.205207+09	1041	aws object (1041)	3		12	1
1282	2024-07-08 16:04:10.210749+09	1040	aws object (1040)	3		12	1
1283	2024-07-08 16:04:10.215576+09	1039	aws object (1039)	3		12	1
1284	2024-07-08 16:04:10.22092+09	1038	aws object (1038)	3		12	1
1285	2024-07-08 16:04:10.226757+09	1037	aws object (1037)	3		12	1
1286	2024-07-08 16:04:10.234061+09	1036	aws object (1036)	3		12	1
1287	2024-07-08 16:04:10.239175+09	1035	aws object (1035)	3		12	1
1288	2024-07-08 16:04:10.244438+09	1034	aws object (1034)	3		12	1
1289	2024-07-08 16:04:10.249403+09	1033	aws object (1033)	3		12	1
1290	2024-07-08 16:04:10.254248+09	1032	aws object (1032)	3		12	1
1291	2024-07-08 16:04:10.259251+09	1031	aws object (1031)	3		12	1
1292	2024-07-08 16:04:10.264678+09	1030	aws object (1030)	3		12	1
1293	2024-07-08 16:04:10.269941+09	1029	aws object (1029)	3		12	1
1294	2024-07-08 16:04:10.275411+09	1028	aws object (1028)	3		12	1
1295	2024-07-08 16:04:10.280883+09	1027	aws object (1027)	3		12	1
1296	2024-07-08 16:04:10.285574+09	1026	aws object (1026)	3		12	1
1297	2024-07-08 16:04:10.290024+09	1025	aws object (1025)	3		12	1
1298	2024-07-08 16:04:10.295868+09	1024	aws object (1024)	3		12	1
1299	2024-07-08 16:04:10.300621+09	1023	aws object (1023)	3		12	1
1300	2024-07-08 16:04:10.306209+09	1022	aws object (1022)	3		12	1
1301	2024-07-08 16:04:10.311702+09	1021	aws object (1021)	3		12	1
1302	2024-07-08 16:04:10.317142+09	1020	aws object (1020)	3		12	1
1303	2024-07-08 16:04:10.322094+09	1019	aws object (1019)	3		12	1
1304	2024-07-08 16:04:10.328002+09	1018	aws object (1018)	3		12	1
1305	2024-07-08 16:04:10.333622+09	1017	aws object (1017)	3		12	1
1306	2024-07-08 16:04:10.338674+09	1016	aws object (1016)	3		12	1
1307	2024-07-08 16:04:10.344135+09	1015	aws object (1015)	3		12	1
1308	2024-07-08 16:04:10.349314+09	1014	aws object (1014)	3		12	1
1309	2024-07-08 16:04:10.354242+09	1013	aws object (1013)	3		12	1
1310	2024-07-08 16:04:10.362699+09	1012	aws object (1012)	3		12	1
1311	2024-07-08 16:04:10.367716+09	1011	aws object (1011)	3		12	1
1312	2024-07-08 16:04:10.372553+09	1010	aws object (1010)	3		12	1
1313	2024-07-08 16:04:10.378259+09	1009	aws object (1009)	3		12	1
1314	2024-07-08 16:04:10.383773+09	1008	aws object (1008)	3		12	1
1315	2024-07-08 16:04:10.388803+09	1007	aws object (1007)	3		12	1
1316	2024-07-08 16:04:10.394302+09	1006	aws object (1006)	3		12	1
1317	2024-07-08 16:04:10.401182+09	1005	aws object (1005)	3		12	1
1318	2024-07-08 16:04:10.406082+09	1004	aws object (1004)	3		12	1
1319	2024-07-08 16:04:10.412035+09	1003	aws object (1003)	3		12	1
1320	2024-07-08 16:04:10.41696+09	1002	aws object (1002)	3		12	1
1321	2024-07-08 16:04:10.421571+09	1001	aws object (1001)	3		12	1
1322	2024-07-08 16:04:10.426032+09	1000	aws object (1000)	3		12	1
1323	2024-07-08 16:04:10.43068+09	999	aws object (999)	3		12	1
1324	2024-07-08 16:04:10.435803+09	998	aws object (998)	3		12	1
1325	2024-07-08 16:04:10.440984+09	997	aws object (997)	3		12	1
1326	2024-07-08 16:04:10.446142+09	996	aws object (996)	3		12	1
1327	2024-07-08 16:04:10.450497+09	995	aws object (995)	3		12	1
1328	2024-07-08 16:04:10.454788+09	994	aws object (994)	3		12	1
1329	2024-07-08 16:04:10.458879+09	993	aws object (993)	3		12	1
1330	2024-07-08 16:04:10.4644+09	992	aws object (992)	3		12	1
1331	2024-07-08 16:04:10.469496+09	991	aws object (991)	3		12	1
1332	2024-07-08 16:04:10.474635+09	990	aws object (990)	3		12	1
1333	2024-07-08 16:04:10.479773+09	989	aws object (989)	3		12	1
1334	2024-07-08 16:04:10.484786+09	988	aws object (988)	3		12	1
1335	2024-07-08 16:04:10.489139+09	987	aws object (987)	3		12	1
1336	2024-07-08 16:04:10.493751+09	986	aws object (986)	3		12	1
1337	2024-07-08 16:04:10.498558+09	985	aws object (985)	3		12	1
1338	2024-07-08 16:04:10.504019+09	984	aws object (984)	3		12	1
1339	2024-07-08 16:04:10.509106+09	983	aws object (983)	3		12	1
1340	2024-07-08 16:04:10.514206+09	982	aws object (982)	3		12	1
1341	2024-07-08 16:04:10.519578+09	981	aws object (981)	3		12	1
1342	2024-07-08 16:04:10.524664+09	980	aws object (980)	3		12	1
1343	2024-07-08 16:04:10.530812+09	979	aws object (979)	3		12	1
1344	2024-07-08 16:04:10.535922+09	978	aws object (978)	3		12	1
1345	2024-07-08 16:04:10.54107+09	977	aws object (977)	3		12	1
1346	2024-07-08 16:04:10.54636+09	976	aws object (976)	3		12	1
1347	2024-07-08 16:04:10.550926+09	975	aws object (975)	3		12	1
1348	2024-07-08 16:04:10.555382+09	974	aws object (974)	3		12	1
1349	2024-07-08 16:04:10.55991+09	973	aws object (973)	3		12	1
1350	2024-07-08 16:04:10.564608+09	972	aws object (972)	3		12	1
1351	2024-07-08 16:04:10.569727+09	971	aws object (971)	3		12	1
1352	2024-07-08 16:04:10.575001+09	970	aws object (970)	3		12	1
1353	2024-07-08 16:04:10.579708+09	969	aws object (969)	3		12	1
1354	2024-07-08 16:04:10.584431+09	968	aws object (968)	3		12	1
1355	2024-07-08 16:04:10.589283+09	967	aws object (967)	3		12	1
1356	2024-07-08 16:04:10.594266+09	966	aws object (966)	3		12	1
1357	2024-07-10 14:34:10.189012+09	1418	aws object (1418)	3		12	1
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: moon
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	auth	user
5	contenttypes	contenttype
6	sessions	session
7	linux	pdf1
8	linux	pdf2
9	linux	pdf3
10	linux	pdf4
11	nca	nca
12	aws	aws
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: moon
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2024-07-08 11:52:38.681923+09
2	auth	0001_initial	2024-07-08 11:52:38.876141+09
3	admin	0001_initial	2024-07-08 11:52:38.927735+09
4	admin	0002_logentry_remove_auto_add	2024-07-08 11:52:38.936619+09
5	admin	0003_logentry_add_action_flag_choices	2024-07-08 11:52:38.947424+09
6	contenttypes	0002_remove_content_type_name	2024-07-08 11:52:38.96709+09
7	auth	0002_alter_permission_name_max_length	2024-07-08 11:52:38.997358+09
8	auth	0003_alter_user_email_max_length	2024-07-08 11:52:39.007048+09
9	auth	0004_alter_user_username_opts	2024-07-08 11:52:39.016932+09
10	auth	0005_alter_user_last_login_null	2024-07-08 11:52:39.027517+09
11	auth	0006_require_contenttypes_0002	2024-07-08 11:52:39.046835+09
12	auth	0007_alter_validators_add_error_messages	2024-07-08 11:52:39.061593+09
13	auth	0008_alter_user_username_max_length	2024-07-08 11:52:39.118954+09
14	auth	0009_alter_user_last_name_max_length	2024-07-08 11:52:39.134418+09
15	auth	0010_alter_group_name_max_length	2024-07-08 11:52:39.148513+09
16	auth	0011_update_proxy_permissions	2024-07-08 11:52:39.17137+09
17	auth	0012_alter_user_first_name_max_length	2024-07-08 11:52:39.18159+09
18	linux	0001_initial	2024-07-08 11:52:39.222529+09
19	linux	0002_rename_table13_pdf1_rename_table15_pdf2_and_more	2024-07-08 11:52:39.262894+09
20	nca	0001_initial	2024-07-08 11:52:39.283763+09
21	nca	0002_alter_nca_choice_a_alter_nca_choice_b_and_more	2024-07-08 11:52:39.29835+09
22	sessions	0001_initial	2024-07-08 11:52:39.340278+09
23	aws	0001_initial	2024-07-08 12:28:01.600102+09
24	aws	0002_alter_aws_correct_answer	2024-07-08 13:25:19.933558+09
25	aws	0003_alter_aws_question_text	2024-07-08 16:03:20.079656+09
26	aws	0004_aws_question_text_last_line	2024-07-10 11:50:36.0188+09
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: moon
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
teomn3h754qzgdye42vvoro4qn65ymx3	.:1sRPy4:Y21YI0FtW4e2ni9lziHH8hQDY_d5FNqBwT8Chz6PJrs	2024-07-24 14:34:16.869437+09
i6pf75dc69lxtdgp3k9u1mo7c9gh6e4k	.eJztfW2T28ax7l9B6dOqSvEBSIAE8-XWatd2dK2XtVZJqs7lKRcIgBKPV6TC5cpRUvnvF9PdM9PzBgy4XGvt5HzwiZYkMNPT0-_99D-f_FTdHT78dHfb7n_aNE_--CR78oz_bVXVP7db8UHzv9X2_e6berc97Derb8RXvqFPb795tWvam-f0XeMBH6rbD92vqzpdZYt5Uc_zti2n62w-m6bdz9um-798NV01zSIvi-4fq0laNvOqmRaLpixm2axOF2naPfS2vWnrQ9v89Le79vaw2W27Bd8--eP_y_J0-izL50X3nzzt_jMtn2VFPun-V9r9rUiz7j-T_Fk2nc27_zWdiP_Mxafd96aLUvxMPKCciu-JD6aZ-FsuniL-1zQXn4oPilQ8RfxzMRNfWYgPxFcm4n9l4j8T-Kd4xwQW1P2n24lYn_jFXHyaTcVT4OXwFPHkrPyfZ0_-drf5x0_79vbu5iA29s8nbKdP_rjofqz_cmj_fujo-uPsm2R518zKenlXp5X4b9Gk3Z9WeZuLf6zEf2eT7r-rySIXH1SF-NOkEd9d1Gn3l8W8TsSfslL8qcm6BxZFqX5Rz4tMPKRaiFcVqXhWWXQ_r5q1-Na8Er-bz_G7pfjHZFWIn9fwkDYXa5RfXsPqJrC6eQ4v7n4qPmlreHHtXyStBRc5aRvxyDqrYXmlemS3F_GPupilsNZa_AnIsk5T-ao6E7ur6jW8alGX8oMmndVyc3UmHr5qc1hIlSNl8e_iZ-0MSZeLJ5WwD6R_RydB_snCpoC9KbUdeTILIMpsxShULPRpVHP4oMjVGiVRmhSesl7AP-CTaZomWZo-S9NUUapqc_3qqk0X4h-LRrxg5qyWDpSzlnxdtgAWaEtJyu4gYQNNmUt645q7C57CQ4pCfKsS_82mmf5FtphI4ovviv-9gF-4K9pKdl4VVWgZxIMOP9Uz8d2qmelz6t7QqHXUjTi0upxn5qsFxf5PJ3vqD7tN3XaX8p9Pzrtbd_6x-sdum_yw2ba3m9vksjpUyfm2uvly2NS3ib6D0zTtY2m6d_NJKv_kO4hVJe5Xd5_T-LuYp_1vnDfqbOp6UepDs17fbf15t9-Lqz8naok58Bc-qWqn4rE1XMr5lBgz-fZigq8p5d1psindI831tJhyLrZfZoUhds7vDrvkuq5uNtv3WnqU6wVdeDqCvjepc4iRBpIha7GhZtoGqHHRUQP-heyG7ASCJ280WbgkwD3VRVsnPra5Puzb6iNnmuCpdZqsnzfitolyB0g1WcE5rGpLuBkMEl7QAOdcAq3oTNNFqa5mndaZeYzXm4-fbtrkx7v2rk2u2_3n7radyc9-vH6a4OUVV6ouLGWD7GI85_XusFlv6kpoSudxr-Fxdbmuge3qYcoL-S4_8N1QefcE03RSOj_uYPB3IDLwWtXFOtfq7bhT-NezJ2CGVdvbX9p9dyBCmO32-86S0n-77P64uf2J_v7kj-vq5rb91zPH_sg99keW2gaIshrgH6sp_kNIqqZoSk2b6RzWXWttIL_VUeL8r9eJxZSkH0B9rCZVIT5vBYWaXNzGZpoWZ3-6uniq5AGJx-6W9lzMVTnJtZ7yHK5hW4mz6N4BGqWuTYOBJIDY_cvN9u7v9vpr0OhNUQbMg85EzjwPJ7Yx9D3Kz3qamUYQcjiJRLzh02w9IB8D68tIez_T76tKdvUW7VyJ_M4weQbXoMzgMoAqTTNDJUjroHtZA3I2xYUJk4DYvfuJ-GSFlwnlBTsvl0nEJ2mm9Trtr0rVNYOLIrVAiXdOvBH3Z9qU3Zdtm7JuFrD-iWC2jsFqFPp6LWnTSJYcaUPNJppDSzDfYN-kIbvLoeRDd2BcdUuCjdz9ql4XS2X6KJVkSKphZaqYJbxAUxxJI1dL62mNNkuTWG5Gk87VdRVGMN6o4M76DNG6nrbawAm6JN7fA7FmGTPcrK3CD6clqk_GykO8Yhhd-TrVxxjmaMaynY0FhIEFNtmqUCzHedkjJPVaEqVAiKJFrZQQOooFfMlhZbC972tVa9MOZbvlXylTEN8uT2IFDFjUIG1KdYT9hvn1NAmRqk5e3t12NleCYkUaDt9d_10auzHP-Otm2-x-uXWoi3uqQdC5T7_QT__2pur0aJ08v9nVP3dG4G6vDJRvn18_Db9Zr-77m6retHtpacU9GPh1IZd3fX159v7TBP-6BjU5056x8-6_oHIqGmXvoqFM6hasyU6L6UtnmGbTRJKmSVfzSNPkPNI0WfhME29shESYccooIqUzk6a9Ao7dSSngFuJPyMr0LcP97QuKNGiFFuoxpnPERQNpCKUSe1dZCHOxmYGcmhX0kPAN9_wERDLeS1MLU0AhxQ9QhfhVPlG0E_ZSTPXLGXqlkmYYEVllOanpGlZWDm3mVwwV8FOeYawNqNB5OGjSEa8AI6JvLhS_pNWgQJMSvaN3A8wHcZxOl2tSeS1bUxqBqTzJPId8dn397R8unnpEX9WkSt82s-ykL7yePlW-NPH7tFnASwtBsHqVeyVJpzh-eHUNj-j-_9PEog6F8qTlktKSzy5e_fD0vutW_qwIUHnWq7l9Uvk91K-5eEfWnt_DDyx9cehsEfAD_eZTLeUVE8nXr573KVQVptZuSqSUDT-SLE_DWpvblj3oPrG3OlcGLoWuhesjqD5DldEIyVDkaO0uwKdZozSeZUuyGumEueWLTj8Fjuf1ImBAmorHkpzzxN4BBgnSBYaOnX2SzqvxdIqyZ5nS3C7yyk_gukEWdo8afVi8GfJCQ8gZRaPvAJVPaStv6ZORJGSiVZOObQwDKUL1xNj-8CcMBdS5uuXSqObvaijcqonopVvtJ7gRE6ZNkJ-29j9LmQLl1D4KSap8Kf0yH8G4wYBbQRllLgJ3V4Gb2H0rV3zXEUHFSfrMhxEEbQp4P12okHvX2f6lVHlEhFU9WSxVrBx4x-NDWR6PDF4kS4r60W-4hhNuqaFfH5GNMZyO6FSLCCZff9liRqsvCD0gZbmJDH4amHJh6dIbDDCDDv7cArc5jFVR1BWfCr5FPaOwO7dCeASGhTV8FyHEaB6m5xkrl9vRawgyFiYzOrYv9In61ynpSuqFSQkvRbXXl1y27afkfF9_2Hxu5SnBXc61jexPX4z3Xd0r5QYR-nbpP40BsdN7Asoag6Dp0vJQFkyl8QixMjiA6iLr1kzWOlo1WTP_CURX3SIh7QwO9xp9wv_X4pcoTvnupv37ZnXTJm_bw37Tfq5uYvklykN_Hmk0TjxG4wSTB6Qshx11HT7QhAqEPeUGDSEIZpolZEBCdcyARxmbJ8Qw8arGyPkis7w5X_KAB0MubnZ3zXf73fYAu9I5Rxk-oNCLm0vyGoZcaY1OasC6OvL--e1LzdWmmYJJmjLLwKKDo0lrHZI3VuuxeQbM307QT_VmZo3S7f12J2jgEUbHaXx9j7lhxiiRIiHbocfN7wSZy-Se05CsJw0WR3TMF5lHdBgs556I9SZpUoJfylLC0nIqiYjqraumTPFNYVX_4vyVV1Z7dbnHwnSFPIgJKL_xyAdgB-FdLymi4OXt--wrvBuL2g1dRODG9SKsnAOCIXlxqQ27zqqCzaCfiXls2B_JPPM9zMEiP1PEpvzilKSTkn6YcqDgPJldZX52_va1iFDzSJ_7TilW-GtiGDak6VEwdHv3eaodfc7enL94GslLQfELJ9U9SBO799DUV6OuSMeKsyVPgLnU8f0K6h5C1Dllfr-c-1S0E0RX0aw3-_fVdvMPqLK4TZYDfoe8REIA63uV8Wyr_hxdDxLiyDGSGiwq6S3FkJ_bvwdRofxPXTjVfdwsdS5vneskGqrVFNUuCQDQxL1myUAdpLdUYu5clYC08kcHfKehzOw5hhggt55ioFLRxS_AsNaAmBqMC-TIGOMCtHJTKOkheRkXo0Lk8A-oSsUdF6yGqpSC-UT5RtdMWB6ZXhwQZ7LOQFEcpLb3HGsMbcA3KdMHvFW1TZlUv9z-8Wq_2dabT9VNd674GDDVuzvSqHdU9VxmafTtaxa5jq759bBym4xL6I1Pceahorc0P3vzZy1pBZ-AddqYnG5v4qo6fLiN3UccoQe2ekGhEZD27_bV5ibRrOIXUhf7tjq053W9u9seniUvtp836p_vdvyKPUtettXnlv8JlpyuOz_r4-6z_FWnZT5aXyLOrnkJ3pyVYsAmpC9XB4whrDmTh1bAl-fDlKPdF6KKznAdYR0h7RuSTT7D3jB8DSs_5KmTdZQ2tSqlI17GwCiVhto0MBjsXfX-V-StU6auFz6tm096UtfXP75Mlj7Hv660szoJp-q0RpZhF7j_bvrWG9pwK3pkRZP4PSWOI7PnUdmbqI0y3_rt5TWTVkI7_ndy-RzvHc-wqR-PqtKjn2Pd32LVqCts1PDPZcg-R92nNCCGuKoa2Z_Ter1WUYdgpkuWbEVQxMPHlMfq7P_SOC-tnnnpAc_dex2ffkKQiKHyTwgYir3D6nmaDE2FEoJi-Bq0TgxfBw2ywQoGT5TRiNM06P8YJdDO-mWWShEfBBEGeHBJRR53CGB4yEKspbQMzcgRuj5AK12mqES-JwxCbS6-yAk0hlAviqy2qAOXamzgBG0lOx2DJ1LVq1A6hjLUgTI99HakMBjMtpzKqnwMlmSvQJK8jy1AHe8JEbY044S0HSxd9WtIZe1FyQuiJfdhSZ1SqRFGSvH4yQtXTvY3o36qnQsm9IjMvDw0KGJIQvV6xrK-xCcBdNjIkdhzDKVqz2-VQvVSWsnmq1gBjARFtqIKKRmylhUvlg4Q7pkUefS_DXKgOeRvQ_BVAV5U9Yd22AoYkIQjtI2OHnrVl5YneCLlUlkd2LXn0YHtomfPJ4x-ZGma-gyxIpChkHvpi0mK25Bqh5q6BLOywUN-ps-0oH7GFX0kXQlkPPGFSdljtyvjykkESNsMWgN1t1aiIhpo3MnYu65g8-pX8ycsdYWl-92LwXOBmqh2on1b4vXQt6Q2mU3VKVtmao_roGlNlftQiwpmDRk8ZEO0hhnKKeUxbtw1goX58vnZ-adPN7K16OWuapLn1U21rds9VNHm6upHN6gtww0Y-NKrF8nSVwnF0i5_evfu6tr3gblVn0HrYWrznOfMBgienaeuRJbPtzNKsZJaQLOoRFNj-FhdpjZPkvJFPoNhhI1j9muFssm6O8swapnZwEwUqrp1tVp8llEWmKxWmhxsB-OzTNwrwuoOXAD5zZHdkkxnNNpm6m2ddBOfQ3qpu2vskMGok-nd3NKbZpzA39tiiSopXaMEU6-00FZWXqRfiapvd3eHNimmTKGsTRYVT2KdNaJZTpPELDwIxgqMeg28CDk-Mbf3DAJQHKDZNGQcx7HUdlpwHzsnD2rJKKXkktNIy5-Gky8fHSerBcC-wK0UVTm_Mj-zchQ4BtmTe39-jqvMtmOJh_2d14SdeUzYAmKJPrwKQmKoHHORLvEClaHgMqwTpq5MX5X30HXUXBtqnD26vHuUntcoIZ51UvEGy_VZjgs6qhgOwdhp54OeXb59qqi2mq9CVVwjoleB2vmlx_UCL-3yreFLWCT3GGdmSTM18-bah_PaOFzloqUzaTWLUACfnEZsII6w1Dxrp9tFpetTFgJz-7plIAzakcDwkmFOXhNuLN0xs62mJAa20hTQngjRIjfXsrSLFJ3Y-HBbpXEQnbPX0kG8fffmjDOZo80hoiDAOJ4uH3PKdGkUhK3m67UW3cqDtbSDmxEl7XB-t9_tq8TrVx-dDwnZcx2_8uhIi64zxopsffa1V3xxakqrJAqLQMbELIcWeslJa4iar7isE9a5Zmnm644q5qHSjx4cAEOKv9lX9U07kmsMXRqhcTqVqIQJx8WS6Dup-guKBCvBS4gqxdIy-4_hc7_aMtQO1aqXrnKCMJm7aOpZPrJEdtkPC-Dblb_gMGhEaDJg9TnHRDpiuXQU2IpqJEnA-0W9y95kAWyQ_ojJrcjSEzf6cYTNM5rIlOmj4ObaTQlh8WcZrHIJt1xJZK7Erjz7rbQGjRcbUXHLUTLCA2nWb4XzlEhMltXIL_lukF_Fj6cN_mJp9Md0Kune9JBtxBDk17SAA2DdxgLxR0o33SUDd26aLY2IowyA9RKa_HncXwpPTde6iJ2TNWR0nIyGycXd7WH30T7-h2EwCuYeK8Dj85wxOEFkFT0ebjSQNMk_wQ0SuIHyMB0bboym7yNJXFTkItIkm_gye7NAYXMovSO2d5_sDiHdLLBkSvb6JyoUwnrQ6hajhpi1G5MvGBs8GZDyQ0CMspUuGJmJRyQ0IBUHmY5XQrBqbPK2rna3h_f79p51cnHWyoQwW8FHhBgGFH1JcFkf-AFmtAkAtzdtxDu742hJRU-IK6FRBQzQ1b6UWVSNzSqbo0laWOL6MQYgBlicl9r060lkOtkSGhG_VlGxRAeK5lwpBCLTlNOfL-BFUxZBx8qIIkNncREW4r6LEDYyfPZTXIiEd3SEL21ovywt2gv3OtwHM-6eG_EDxbyneIFrLxiBC9V3AqAUTT3MmHE1ThpjlcmAR38aqupUx5hlV2PIJB0GXIRKSxCVMhKNZSHwQxX8FnU2BLTtedeRwQvtzPfGvuwuJ08G4oEPZ4QqCRRyq-4nxfIuOjE2vVu9DvBNADBH1OFeUSjo87L6uGqqRAYDTXQ0xCGYa4z08QXSPQhq1oYijdLYOOHEh6Y7z0Jw_lSlWBXsT2BEwsnJ_KeDWT9YGRYPTdxToa8Wx4yPTGdy6GGobAjHedEyIedHEXcMAgeQ39NxT9jSJeSDhMFw_d27K_UmozLKyGkG-cBzGFSGx5KXVpvtIDYqSAusQFGouBYPizJ9-RKVknZPnKJaeaSziadRw3tdOAGsWGWQTUD6SZp-z2pxYNgABnu9KS8vPpSDmeRvg9QLM86RC2SrExMItsoVe0i2hu4CCxpV1gei6Gi0uoEwkSgTPLt6IZqIQ02fNr14M5XBDQhklesvoRaq6kp_HNMb2i1HKzK0WtBs0LgV4qWT1NZqPFrprZVcNfKqKhGx1sfen7GNiNuqXoFERkuxS0C3fFNYy_R4okv7Qn6KUe39sH6KF713TCnC_WEjBrBRLKAAMDCyCkLismIutSnjauJJ2yhVO5toV-fF9vZTp-F2-6XfaeD6uB-XQalzEOrtIg9ESW0oB347PHeVXYjxADyysLqqpaJgOxp8sbs3UsBzH0d7kLAe4jQDLusrARP0GzjDcSMehjfUKyLve8Jgt_AKFY_V62OxcBez1xA2K6ussmXOGYVxNmo9UgNgYe1CGxHkxczSiHNUjpaLXcDru1BLUQeNx5qPIMd_GOgIBrr8DwM9CAN9-1EgCtic8-29OSf6qJXL8ci120nLa6aFx20u-9rlpVXZ2W5DFTeCvbCmNyv1AXWuAhxKZBrmyCKaIwo85CZgYYiQqbD5xYrXRS4vj2zEogxy4FtGIYc5vWxRt0sdCeATy6JWb4xISkNVxLHTzbA2tiBPAjMbafzvjZZLcMkn0JUf5_sY6VHeUKqrbbMx_GKXlsTV9tyzLofPXfEM58PipBkkI7GSBZFeg5UsvFD2URfEaE1oK7-YtgaEVJezldJCJR6vXiTfV4f2l-qLumsjGIBP2gh6B93CzzvFs1l_GVYwY95tbcnrKXCi9Q8mYZQQ_1tp8lFdbzAch1AFAhbx-O7KE5NkYD5hXNpRAfJZYokHwUMFCZoLBmqdPNNhLnbbQ7XZtnvbfvn2AobPnOxidM_7VXd70o7wqQ-apyy8Ifr_W32uQMGm6-TqTzriHBnbplKPk0za9amLEbcvtiKZ2zkktzGeh0FhalGdlSCqI6BxlwqZhgBcWM26OVqDhRBpwEKTQayVTbXsQSryzOnoVV-J_tpA2PN-ECXS5DbWQglLX0GHZDfLgMBZLb8DTe0Nh8GjZYLDD5qoJZfRdolXzBFUS6eGMgjFGNnG6ckH9CnUwcAb7zKMbPOMmOmrhc4Ix0aPF2s7aXqobn5G-pXKT3YLtLzugLqC3svrTr8icGqUQZ0FAjRiJU0RmKP9S09kCYKGYcrl5yEjxJX5biUJt43ihhWPrvobaKwNGypQpBahcYPEpaVa8lpJvWAFWq_Dw7qEIikhvtQiwn-uVrLKhO4iPLrRrD7iwAbIr4ZoLKXHvQLwz9V8zSQVLh-Zv5wpyTp0AoNXpwikkgd17NzuhJVtlV5C27cnXMKm5NfScsStbu4o4-5eBRhT38zA0mnUUkWuTiFLOM_vDG8IljAYQ86ijDk0u4Zu5pjVYiB40qbWatFelxaeoVKiYj6eNxIZeB0EtU3XMhoNrAQXrmaDOggMINiuS6GMyWqx1NFqyPcjyaWZqpHGI7FwThho6cHB47HySIzl8ZMPpHniYMp0D9UG0HhMmdBkcsJdaghD1Y6fh4e9f_fiuzeK_8xZ6FEVLvcdom4X3A2VoUX0GtmvoEkki1KdDrMXw7F3X-0c3p9Jq5buFiaMy3zBQ6mXk-ugPqIP0YiqvqbYurTQciWuwPX0PLaE3vklDF39dXkNiYBAez7Q3Ydkxct_B1aM5oDgoR_JrSeEhc7S3NdHXvqnbHqCbacIDQ_1j49o7_HNgURweay9k5gdfMYHMiMGn2gioNHx7RuUReoMP-dTGiAWrYEGxTNhYLtpTset0lrYMlgT3Texc7QSjyG2eK-7jt5uZ-BqHrCyBtcq4nsMB97VMlQL2h_lAdY1gzeqzfK_un_k61RLk1C_doNwx4Gy-U50vjh_ZbyF5ri1CHGdaqYqQvj4NoMtg56n2WtCzR5GwbrfUqDhyz0nktAcJc-6ey-DNO7EMJvA7xUcdSJ5ntDLNc0O1e3Pb3c37fl-a2uuPrh-O29jHjfjWXJTQxNpw0dNTguvkvP0Rri-GVjZ3YLg_uugpp7EbDOm25xBN1SdrqUp7jN1IYoT4iZqeXh3ToXwfM4Od8pZ8kHechlRUIhPjDjDVDSlURzWwOiLdNKCk9xXcLLIB2CBVcF7lOQW2xusFNGaB7uHM3AwcWhlm9Y--qo7CXrVwveY53LMki97YAYqgEmgu6lNicnOXl1fgRkNFfEU8AHJRxli4qpizjIAVO6Fmd1T4Lmx0h7fzCjdqb2USGIEWWbp8LPzV2p6WLcx_77gcc5bqNWXV-QP4J5077IMNxmavtnVPyfXh91eJ2SfQ0KWxKF7mqs6W6lbi6Blxlh5z-Hee-y8NJi6taHEBcaeadxHX-eeNZL-PhYRmGbHnBISXiIW8_MycIw4NB521pQsmoozqFf1AnORR2GiudTAPMErGCeHSb0gKYemtrgjT80sKAcjdplzJF1lpNiYQRW_go7NFHeLZ2i7wwDxjBhzAGcLT7qp7rb1h6t2_3Fze0sjlwB03dTGfc8MU0HINjwmNjrWJYsYcHAsLbWKtharPLEHpujAefoNuzjyG68-5g4jaXtuss9NdS6bk18MrUR6gTgJUwoLmVRBYmu0NQgU6GEoJ-dzCt_wsZzujEOwxMZyHkfy4JrJ04yiRA0_A3N0RW3p9LHURbKKdwTHPnvUiTLmj9g8kc3YkjG8noOp_IrGpy9HtSj7gkDM78evEMw-n-ek43UsPjEA1Wb9Pk1EDiXjST3qTFoIISXt9KgJYmH8VWEJw0awT5MPsxLcsfAvwQwKD-3LqsXXChitENm1HvKxXLTg8Mx72g6VG8sgow6dCvs4EfVEvl35DjCtIIic1Q5hi3q29FrXzjkunXpvtV66AhiV87RRRvPPY6oriiB2J3W-vxFtcXt1lwavj0fvlGJqGHY9Y7ksNcTGw5QP84LFBUolQms7jPfsCTS92B7am5vN-3Z7-MO7breb7fuhFS2lX-ppG-ilB4UqRiC02y86YqucgFKIuI_ojRsG172q61SWPYWsovGdOSFGMLZBXNk9_fpQbZtqbyJ-a_ZNLtv2U3K-rz9sPrdLHdYJnyBoVT-oUJAZmwYzNIglDkyAUkiWrllhom59b1b_2ym-5GXn7wa23hMTOz1Bw0TpofGbbZv8927b_uHFdr1vOzW9PSTndSdpbs-MT88ZQvdxBEYWx9k_WaqNv1PS97SQezNf9irLvPAmS1VPnOjgoa4Gou2B7TaMRQeeRnxw0ercQTu0HFsy7cDuDdbGxHY6pcmfL9GYhapswwQOys2e4auw9Co038vTYuYp5EI9vVg00haT1jFwKTZ3cUB-ylN74PNHoM_oLiVtoHX2YCFfQt2hfZGOByusOT2OxCmwIQbuyuv28Mtu_7MDcqm7b2RgZeBBEQWkEQ09flaTdhZAwaSlZrUyVDMYoihF9XCQKw6QMZWFnVpxAf189gh4NuYQ775yUNmNc6_mIend4SvIPWGlF6Eq5Nfn73qeGrX8k1Y4zKZeHTFF-YjdHTgtmcLaKt7mF1UFjA9M8eYZZXvh8cPWa5Yq0q4mDWkuBu9TjucN3lwM3rVTih7nMpbWZDm0TS_0EzVYjR1hGNPbY3Q3azipRAnWebUSJ7o21a1XennwSmkiA2b_jBJjNw86qPXGTx0eICHPiAxefgrpK22tPjFmDDB0SLUwOs7ZtLBUP6EaUcRuINQQR12x_bffXr_T7ZP6xI4Jp_h0nDFHy4NRWzJ6yR6jWnhYdVprY8uGxb6_LlRnz8ZiH5Vi4cGw4GyWw4d229uAY0MfsVZcux3WfTpvCR4TSCe90za3HzbrQ88bfrzb1D9fb95_OES_gLWC_rDZtreb2-SyOlTJ-ba6-XLY1Lcn3dBJQ6Ez32yzLHNioW5VyRiQboXxe18PYHhqWXzxHIcMNebgxI4Hk-tQNTImCkTAZHDr48fjK8iqEVROkbCc-jgIdSKXMk7pZ4JC5jWqJtDr_ZTPAII2FRnxyXkcqjtqaEVtjBEwingX2EkDmqFPih-hTR-Nd8L5uB41dF4lAUgad5Jyc0u_cMefG0LKErHStL98DaugUePrzP6NkJqv2o-1eF4T-aaTznWclT7ZN0n9sk_PYxLsma0KLjVefSFYfI6B3T9DSyUHWcO1zxIxOMDAmGUo4bITj42zHt8DZSoeCVVFtSGIeA3hCREi1LzN1y_B0Fe9Kzch98ZbMwZ-f3DjI9CKLU861OE-XLWCwiCMr_lIcjXC0rpu6317uE1eVdvqPcvIxEnZaD6xzd7QefUtKc4-t8JSVrc_5hvMss-cXLtUXqY-kJjrL7eH9qNaXPLm0-1Fuz08HOX04Q4lxAIkdVf4VQl5QSVa1h0KVkR8VXYcPhXuuA3hVIflzlc8D7MbXBEgWTI0ZlhKU6vVZSqLLa7ED-0Xug4fRZJGdQOJj15ds_SMvyyPv-gxXiIZAHOxqangHxqZHvbs-4MOpzWH5t7A4WQ21sr3VWgYtbHYAF3Nx-aD2AtP6g1Gzy0zEdUppYglWilCyQPLYVLFiKnzrg_V6ed0DFE6Co1EKWYwwF4jybS1QpE0Y5S0JxdEBmmx0L0Khl8gcz68E6iZLdZLq9G0zmY6QRDX433sJDhKcqXQx-4UiMyVZDq2OOntlTsDWkE9wyHyGdBiLwWns_gGFLiLikm1m-Hg4GOx_ViSZCmr7N2w1OWXbfVxhw4Mnx6LOFY0LGnRAjtL-A0VXMSqcPdBBqBGcFBJL4y3DuBFThcjLkEthqWyBjRj3GwXgycpONNy5FfPwEj7Kbl5W7FFQHwUrfaCXQBmHXMoE8giS9SDUmKYHoY2CKn04s2V6CDrnxNt8EPUwk3qwYwSmaSBe4cazwGMKr4awexsYs9FoZlgEACIY-gTUk3dguDAUifWftLocek1GaaBGZB_pahUqXjRtPx42mMGUVQaJBIaGGxArfQ0VHuEqv-RipI0GpYS2-HZKr1Tp1jdOHGHNZz1eB056J2EAzFHzycMwrQ83imFQ4Tqjzpor8Vbmeup9HExBn0TD6fSSNH2GRpz5vhAENErGYUfN0tQWalGI4JpGRpROL5ZiS3CWcgq33SIFjlYD0FbjFfTUBvCa19rl4tw-sHWGgCCUnPNrCiNPsyB-xImxu_w5Ecftk3UUVMUjdBC3U4yawVCXZ1dX3_LBkQ5yozD_QVhJO8VAZCJh8_t9vB8v2neq1bRi5vdXfPX6lB_wE9vBxs4h-BkgkAZ46R6eCbFQGCml_mG2lx7WthG7ESz-DIcJfJaTuyHHFOQuRlVK58KfAIU5zgSbcaiMP1MMYQL5N--XIthAvANJjx8CJYAx1HpwZgZuLcPWldW-iYrZtM59mSkFAWC9QsUA2MMoB9uzxxAR7VObZlk-AMwIAJQmMFRlcPweTRVsfv9xPDIkqVVxIbVRxjLmZelXiMfCEtdQnmp41TNFCrOF22AhQeL7IJLovuC17VJWe96sU6NX4rF8HoB7kYRTgkyMnjt0PspvQtl-kFdXl1xnAEH4MoIVt57zNxv3dzkeCtD8MMTNe4ijIus-qmGb0IUuD5TaN_td51mWJoz33lFpqxBtx8SnqOmH6SOE06QphjVDlP2oap5cZ-gT3k17cfd7JPoo0dsD3dHaPHOipXYhMxRIMVjTnwAIPfl87NgCfnTwFkPgxAnyx4QWiySTb316MnyzpmSwwdZeExjnBv_8nnfYp0pin5Pm73mSLYhWzaASjXECDyDZx7yCDzqqKFHIbuWoFB-6Myf_bY9tLfOiIof3BEV_RhcMSKHvW8ZQDBS1iLFXIyWFK5yBlGbLcZUcsoH5OzDagSRQB0I3Mzr7rH6stGOQyVlzhiGh2LCyych_H6t445FFY9D4T-hmumXX8H93Uen9Mogz6SdJabHxrkBAXKYTsHxXBCX8o2dxVL6ZrFkuVMC5wXxMdC4wFCUEYGsNkSJoQMp9TBjriG1C0iXBt6B3BFGs1Lvg6tL7iCm78q5aczG4c1bVfee78IHgKYxUzhYS4kbJYub80qblVhau8CR22kg9RQ3w3pUVSpmi8VssYkiBATUpWugiKIPQ68H_oSOpYngRNXICx2_D8XjFKQHiHps8-Aj2b1pGC6shigncR_AxV-zY8CDk4-X08iXMUHwMRQeMXjGvDMELJXrtmpCdwnCiJvUHVkPjCmXGdgJKZ8UHlYT8ruJXBpGhCiMN3TiURfHiUlGMqPfmr_Y3R6Sb__-6Wa3h4gvXUsorECmM4uOsPWJJG4N7UieOUg9MwBiREOue8icKVWe3fpk0KjLE-h66c7_-eYGXJdq2yRAKhYZlK9EC5o4UTeG9975EH0CwidZsliGPqXR1CQkhF5qxvHOpboghkqSFTFGljt8EUL-_cirEwEMpQ7IAYKKacvytTUpxCttPz0g2yv-xuAuoSbGKZWHnVlS-vCgshzG32orh67pEYNoa8uaUiPJWEHGtKAmyOQvVxf6BTmWb6G6YaFNDELKPssgqABLblFk_UFGZyCD2MV_RlOBrJDztEVmEPzkYLYyOo6jTHhNpixH01VxZhEgYs74AJqCj_RTT_xpXoCOKHP79yQjfL-xtIuqHOkk4UJpfnOiitmW6cr2MUNsEu1mO1gfRg8YymL4kqy7c7Uglf3FxnUfSYlb_80ysw7uCR590NyL_P6u2jeXd4cvhkxV4UdfqGLFRjnj8wYskdi1uwt1EIsHKEYAi0H54iy9zx7p_gJmNUUfZrXOfGA3DVlrOPhuiAYDB20bVSc_b_mBOVgSoZvaYsF20KfOtDHy3Wbf_lLd3DjJ9t87CaJylbE4SQtvXVruTiGbD465W7J67ZhQbXpEf7QZMfY0CMc3NbPQubJrF9jDJhGpIx8oKx4RYo_NMTM7SuW0Pl4_g3uG0I5h-1LVATjP5iTPAYgHbyiK44pMJIq9P_0ZWlAv3qlcl-zzCPYFUkp5tsKyMadJMGhmBXSpeKQx_zaYnnRCiLJ5Kdhxg6hswcm3klErnWemBPOYmOW_c71hiPIuD3oGN7jliNZhRo1qMgWytwIseCEwrk3GIb9CReSUDTTofaEXOV8lMHtkBPBazAAexppI7FDRlLDIrr4cPiCktnV8iTKkqXYorbWlE5OU8jwwaO8bQlZGUO0IqTL0-zMSQ_xh_WSoti4iOxpXeDayvKxvG6RgjXk71FPWT3Oxp2457tsc5CWz85LDmUbhoech3IojBluNKu_7D5UtKg-MAkELBq4zA1UcmYi7l8HqLa7LvTA8ungOls0Sq4ISU5WwkOhaI2Y0M7Q-bxIq0CRreIlTqNpusUGsavT3UXZm03lg8cfYvdZqKPoZ1xzkxoCcoIixMd6yQtqgmN9re4GQmbjIr6r9z-3h002FUD004aDWbhoZbykkMGzHOdEKT1fSq05FW0My98_wGo0EfbjFNuI9MFTrCrjDBVxFLQRNqUEjG35MrUMZLktP1jQi2INgS2M6mYMwrZ6LwCOT3T_gBobcpeipg5aRI5GJ2zSwOgOagI1Y8MANjR3eHnfUMv8AXiMKzcfrD-DKJO7LA_kDgyJsvPQMzdyTESF1ySxmcAe0RN7f0hs5UiuJmTKvKy8fgCCRgLm_MYJhzWFAOmvUaVyzWoeMq7Zao2tJPuaHavvyMuOznIyUwsmAfPU6m_Zu07H47C_BC512jYg2bYVpEqDYEJFUQAopBie3ttO3_VVr93sJMJdGD-yBiA3wsXYj-1Stx830fTeezc0B1Q9bsLbwzY3M8sU41T6cKHNNa6YdxIyqWM0py8Jy6Qf54HYfCtnEiUZ70RuWY6PRUbXz8tJBpKlmLXqe6BIv7nJfOTDIVLbQqP4hwZHYa0bSmyHURQDej6ykl3BzNCoFwWRYKby_ecZD1QCLkGuingj8MtUs7smo-3rkDUTn8eF2X4oHM3QU9nbHnliTXJABsCKisrHhHRbHfLKfJJriJySJo5fGOAqng-5kyJfLcMhEyvu-TaufG_EfQ7pEtMpA_4VRUqdpkcpAjKDbmap2oqoG9eXBftnjNhKOQrpN4GL91y3OTYxOrOpFqUMdWoGM0F239d1-c_iSvNv93G6NCN31O6vP4vv2QEvDL4sC9KU3SHyyhZ6yLzRLU59GLqJHOWt9WxUg1EEhITKHFpqJ-sRAosvzI-qxgjrV94L753N1K1h92HxuX_0IPC7Ohyoai7W2pWwiaDY1bDdPxtD9odl-FrdGpQcxdUwdvfHhCinh57bO88dijnuVLPQPkcpQtUzgoacv553Oa5M6QkgoHN8xQH7C6BmG1p2PwLuj8QrUqlM68oCPEZxXmPfSpWas-DOU6tWCYkSF159efP8nMUGh53EeCG-Fndtr3oyNqxh1DkNG6Cov0KCHm79Yl_wqmvgUqsUwGfkOh5cHrNaYXtsx3GiUWMTShWGL9KC1IPUGLX17MM6SAXn8Fxd54s0YvQFvuG5bFjh0CpfxkIxq7H_3c7l4wHPJcnkulGsPn0vAhPLopq99YHIJBMyuK7D9SDOh_s0R40B074NEQH0ct2f0ugz_fdzReApc-iZ05fmjOseTxq2y1NtiMPNbC9D1tkblz4q15STomodnUjy3cinbyVS5UQ7iSMUhfbFsVofuwa8THDK1-MWoXO9lnqUqNWc2AQdykiEpQf7VvMbMqxtrcMwQ3-8Cxocv7-VDqr2_--6NkJjUzHVvpmxQ5gYSnmExb4aFHc249iPM6CJzd0GymK9tYhYUQHrVlDeWrZ84UOp8EUMuMGVt5usB6vj1iHsZQ9xTL_9BjiIqDBAr4DLvaNqZU3INWxplQPG8PkpC018F4sgqeMCngH6EEaXO3nFTo1qc4lMBTYoxRhj7zr22sE-VLSbyUd5EfuwOj-hci0lFYJtYJ3YxgdXr5xHKBFatoE8roVbDqFf3m2_F0c41uKutNHAs1CJt3N150OzlgEnxucYeyPkuJIkJrzjQpRG5OwnRwZBjCHeeOkJXueXEEzeVEBlE4xA7Z4X1hpQoVQh_BAK-jLCg9KudyIeMXbRUje6cpj27QbGGVfnH64CKejbiqimTU00B420Bcr4kJCWa0n_TQye8pHm5dT3ReYiOvHC0da0MslUhEtjCVFiqUCbpG53ZrhdN4ZyEDz7aIcW9ASKi6uo4shyBtBoopLBt3jWhqugQwGPVG_eRyhbT5cN9A-LBvCki7i2yV8RznPPc3iQRlz4ZcV5E4qxs-g_PaBqBPkvSAxKhFJFA1nFNFI-823JphmvkTDTCS1_e2UPofOHL4zHWP365_dtNc_fxE9AAUlWTtY4KT9Ys3ulWJJsDHWuWK6ZVzxq7gdvTeeB2Uas6jQBv3V8EM-v_8R1KzAbtRQwl6RRMJUn6U5E3wol5dbc-bAT5lmaFlWq87T2BOno8o-8Q7hPauC-JjLiOskj7w3MRITObKX9rVP23FTknBePIMm-F13xyX8SDEY4gBWOhLOjU9VhLjNsHwm3jp-FFYMaFCHfyPiKvjI7pKZM9PLy8PbxXT9PukOUoSO7B1gn5PYF2EKOdyY9abl_bcct0Ox0prp-ySjfK--hwExxUmsn_-ukLxzE4pOr325graGPfOC0ewnCafb1x_LZ6boeHN8RBimEHf7iePtWny_P1MeMS-vQIG9sQ2FP_rCvrV4n2nHnRAbfN4mZ-DIkSpvsN3va2EPZ3tz7EUZ-YLLbSYqXVBLMcPHqXacZ3WY7XhQPR_H6SD50-3wBs7z_X8eGu4-UjOjC0NPhBmINjf2fEjzOUI3uGs4m3Z7ic9BVeOmDEQ_61wQc-wFLD8DQ09xr1fzZO3gwlYbwAclDgnyK2FYXoeW16dGgUtodl5eI5vkmhWG7omRQK9yBbWuFm8ZR3gafI8Lgxb1SWs4wxiHJrRxHBw1PYaN5k1P2q5qPiwQEbj08aJYEGtvFx3WTi8BN-bAHeiq_nZFVQPu-PjfslSYsK3URH8JtXfOsqiezwGdtKlI0SSQHeQCGBr-UlET8xAUwL_Qu_McH2EnQB2RAfrfS_v6nqDRT208uMDJmNmRqzOf5Qph2Z9JS4pqGOBSMLNy3s_V6a-w2OqeIlVLGAFoHhp1rEGflJXjxwHCd0rw2_Nahh-nevUrQ9XHPa6NPEC4hfFvcZgq7yhP2FCs5gVCxRZ0l73ibXI4JTIA6GCGcr3RwnSatllSwjOXl7YiBQNzQTEWMtZG5CzEKCoC9aZCUe-XBmXsXXvyf4-yW1BMQUnvl2tfThThtBFF_gByQlznKXUMkIYe-uiKwhbM_FZKIhfFdTDDlNgPUWq35cCEzKt6ta66Q6W8nzp85ue5rJaGz8hzItTlKl18OBBMB2uRESIrnYbbfi_9vHkjvVHM4obW9MQh_0wAs8586HMBinz2auMz37l6vXJ1k2i91gFdvc5VIXSdaoMRQUxuWQXsyy9AFI6ttx1P0J7AxoS1FcL4mXnp4Se5_3IPvF75tXSU57MKgd5vER-gF2rVOQX4Xm4rkXL2kS0ZKsTOc9OPuESkpKMDlp6kxWqijLULPovQ7Xo4B4wtIrGgIt_ycoTY3tUJ160YAXmQ9cbanSha4VRbugEVl8GqHAUlJPYdgfpps1Jp_oKzI1omHBAfYyTw5HhhBUKqjgGiZS2eovBTFpwwMJjeFQRgHrnBWwonHlMYLskkDDYljqaJsQDRQDp5u5aFptIjZYEsDhstpZqehiVAZI5IccGJaMDbejwDS4fysVWRaypGbpvhFviQyq6uFuUSPRloMhRPPaRLx2GVeFIuvoB2vjfY6BOzbaaDEMj78MjsYzq_es-LMzE8-WDb3Zs9_4gcYVfjn6trstVGPG28Z6DlNVsT3So7xgMB8jwAS8uiXywKN6J00p1-n4iDa9_rxOBBRbgLeOny57FIMNmWqymy6sJ5RJE5da6R3qOcAVshQjlp9PxBAadTrEFgZD_IZO_xjxEnmupzVgvZm-hb8k7s-XVwFT3F90-Jfdi6uzvwgDItl9bvfJi-0BRvYmV_vdYVfvbp5q2xPvh4uuLkVlsGfK8_tejrJlYABQJebaROLCeru6FNBZOHxp4AEebdqHIpoKCoTPkOSxUDOHZPhXTp8N5U48oIwDdWnhxjdzToVVkWb6f4mUKI4HqyLkA42_y0djYb9--fzsdXv4Zbf_2cKDY74Fu4EKo5xhNnu06hC4ZP_vey4TyTS-pPGFU6_VKHZxG76_2a2qm-S8rtubdl8ddjiqohe-0jdjMAg71gO69zsm8vmvROSL3zkXv2a4dSvCw2f33ZNnZwrl7e7u0CbFNCyZxVOxE9DFPRwqTzzmkQNTz_2aPXIQe9Rost_5fTw_EbvIwZRZtpTB2aP5RD_rq7FG79mc2MYtvTbubABG0LFyZLI95QQhRGOoATHmjhkGG1gNmJLnQ69oshC3oSyUmlCPp_1I7chkWE83L7KljFNwR1ROxa1KfU0W2F-M6Nt1wLYMdld7djdjKHo4WqKn5cJPOj0cOEA6D53UwbA9I_JAqc8Kx9vSqpzaneWodpsJ4W_bwDMhN3umMR_j6yTjyDjQpRPJDxhUn2pJoyCPGDd7YuqTTJvaOPtLnsyxfgtFAqntsgSph7ko3yvdSg3q3kSPxDOnTMwFVQH-1QTdsTnyDxZ3lFNb4NEA-9odTT_KIbPJExA4ic6o4bhritGM7nc5sjzfid15JJESPvLLWGj0m0lnjAhN-8T-EPA2-4lMTA9fZi0ZIod3sTj-D5tte7u5TS6rQwUDXz_sbmPQnof2VjjXf-Smhndx8dDn4ZmK5nlErxx1hbbKlZ5caJN53KdRlBiE5ylMKFlGMkFqrFzgmeHA9Is3V9fJ9fXl2WY3eXrkqLMhbOkHYaRTzk7Lcl96f5I66X1VmaklJpUCkvPiSWB7ZjCdqE4-MHLYDHuiH2GAjI0wGc1WChyPgEV7NN02qsLx-EWgKvQXKujrvWgy-RKreqjUk2Q42nzsuqOGOqvx46Z5q0C3HQrS4oy6Tady1xwZ573CjO1copgMV-fAsMw85jX3El-oyKtlYI7C76R6My7cH9JI2s3zm_2C8pedyOR5KqAShqgHdLpcFEfpButwlYn3OXgElrC-6FzwqjML9roLXz73OjQ_Iaydv6v276tD-_Av5LnLuAcrx7DA6KcJ2EpfFToG85Zez_zs_NWLp3TJjueJE-qk__nX_wcAXTev:1sQiVF:HfjXwYMaxCrZhvPoRnhZuUfMI5j07-nM4Zb_5HLM8RM	2024-07-22 16:09:37.978344+09
\.


--
-- Data for Name: linux_pdf1; Type: TABLE DATA; Schema: public; Owner: moon
--

COPY public.linux_pdf1 (id, col1, col2) FROM stdin;
1	1	2
2	2	2
3	3	3
4	4	3
5	5	1
6	6	2
7	7	3
8	8	3
9	9	4
10	10	3
11	11	1
12	12	4
13	13	2
14	14	4
15	15	1
16	16	1
17	17	2
18	18	2
19	19	2
20	20	4
21	21	4
22	22	2
23	23	1
24	24	2
25	25	1
26	26	3
27	27	3
28	28	2
29	29	4
30	30	4
31	31	3
32	32	2
33	33	4
34	34	1
35	35	4
36	36	2
37	37	1
38	38	2
39	39	1
40	40	2
41	41	3
42	42	3
43	43	4
44	44	2
45	45	1
46	46	1
47	47	2
48	48	3
49	49	1
50	50	1
51	51	2
52	52	2
53	53	2
54	54	4
55	55	3
56	56	2
57	57	1
58	58	1
59	59	4
60	60	2
61	61	4
62	62	1
63	63	1
64	64	2
65	65	2
66	66	1
67	67	1
68	68	4
69	69	3
70	70	1
71	71	1
72	72	2
73	73	2
74	74	3
75	75	1
76	76	2
77	77	1
78	78	4
79	79	2
80	80	3
81	81	1
82	82	1
83	83	4
84	84	4
85	85	3
86	86	3
87	87	2
88	88	3
89	89	1
90	90	3
91	91	1
92	92	3
93	93	4
94	94	1
95	95	3
96	96	1
97	97	3
98	98	2
99	99	2
100	100	4
\.


--
-- Data for Name: linux_pdf2; Type: TABLE DATA; Schema: public; Owner: moon
--

COPY public.linux_pdf2 (id, col1, col3) FROM stdin;
1	1	3
2	2	4
3	3	3
4	4	3
5	5	2
6	6	4
7	7	3
8	8	3
9	9	3
10	10	3
11	11	4
12	12	3
13	13	1
14	14	3
15	15	3
16	16	2
17	17	1
18	18	4
19	19	2
20	20	1
21	21	1
22	22	3
23	23	1
24	24	1
25	25	4
26	26	2
27	27	3
28	28	1
29	29	4
30	30	3
31	31	1
32	32	4
33	33	2
34	34	1
35	35	3
36	36	2
37	37	1
38	38	2
39	39	2
40	40	4
41	41	3
42	42	4
43	43	2
44	44	2
45	45	1
46	46	1
47	47	3
48	48	2
49	49	3
50	50	3
51	51	2
52	52	2
53	53	4
54	54	4
55	55	1
56	56	2
57	57	4
58	58	2
59	59	3
60	60	3
61	61	2
62	62	2
63	63	2
64	64	3
65	65	1
66	66	1
67	67	3
68	68	3
69	69	4
70	70	3
71	71	3
72	72	3
73	73	1
74	74	4
75	75	2
76	76	4
77	77	4
78	78	1
79	79	4
80	80	2
81	81	4
82	82	2
83	83	2
84	84	2
85	85	1
86	86	3
87	87	2
88	88	4
89	89	2
90	90	1
91	91	4
92	92	3
93	93	4
94	94	1
95	95	4
96	96	1
97	97	4
98	98	3
99	99	1
100	100	4
\.


--
-- Data for Name: linux_pdf3; Type: TABLE DATA; Schema: public; Owner: moon
--

COPY public.linux_pdf3 (id, col1, col4) FROM stdin;
1	1	3
2	2	1
3	3	3
4	4	1
5	5	4
6	6	1
7	7	2
8	8	4
9	9	1
10	10	4
11	11	3
12	12	3
13	13	2
14	14	4
15	15	2
16	16	1
17	17	4
18	18	4
19	19	1
20	20	4
21	21	3
22	22	2
23	23	3
24	24	1
25	25	4
26	26	3
27	27	1
28	28	2
29	29	2
30	30	2
31	31	2
32	32	2
33	33	1
34	34	3
35	35	4
36	36	3
37	37	2
38	38	3
39	39	1
40	40	4
41	41	2
42	42	2
43	43	2
44	44	4
45	45	1
46	46	3
47	47	1
48	48	3
49	49	3
50	50	3
51	51	4
52	52	3
53	53	3
54	54	3
55	55	4
56	56	4
57	57	1
58	58	2
59	59	2
60	60	4
61	61	4
62	62	2
63	63	3
64	64	1
65	65	3
66	66	3
67	67	2
68	68	3
69	69	1
70	70	3
71	71	1
72	72	2
73	73	1
74	74	3
75	75	2
76	76	3
77	77	3
78	78	4
79	79	2
80	80	3
81	81	2
82	82	1
83	83	2
84	84	2
85	85	3
86	86	4
87	87	4
88	88	2
89	89	2
90	90	4
91	91	1
92	92	2
93	93	1
94	94	4
95	95	4
96	96	2
97	97	3
98	98	1
99	99	2
100	100	2
\.


--
-- Data for Name: linux_pdf4; Type: TABLE DATA; Schema: public; Owner: moon
--

COPY public.linux_pdf4 (id, col1, col5) FROM stdin;
1	1	3
2	2	2
3	3	1
4	4	3
5	5	1
6	6	2
7	7	4
8	8	1
9	9	3
10	10	1
11	11	3
12	12	2
13	13	1
14	14	3
15	15	3
16	16	2
17	17	3
18	18	4
19	19	2
20	20	1
21	21	3
22	22	4
23	23	2
24	24	3
25	25	1
26	26	3
27	27	4
28	28	1
29	29	3
30	30	2
31	31	2
32	32	2
33	33	1
34	34	4
35	35	2
36	36	4
37	37	3
38	38	2
39	39	4
40	40	3
41	41	4
42	42	4
43	43	1
44	44	3
45	45	3
46	46	4
47	47	2
48	48	2
49	49	3
50	50	3
51	51	2
52	52	3
53	53	2
54	54	4
55	55	4
56	56	3
57	57	1
58	58	1
59	59	3
60	60	2
61	61	3
62	62	1
63	63	2
64	64	2
65	65	2
66	66	2
67	67	4
68	68	4
69	69	1
70	70	4
71	71	2
72	72	2
73	73	2
74	74	3
75	75	3
76	76	1
77	77	2
78	78	2
79	79	1
80	80	4
81	81	4
82	82	3
83	83	4
84	84	1
85	85	4
86	86	2
87	87	1
88	88	3
89	89	4
90	90	4
91	91	2
92	92	2
93	93	4
94	94	3
95	95	3
96	96	2
97	97	3
98	98	3
99	99	3
100	100	1
\.


--
-- Data for Name: nca_nca; Type: TABLE DATA; Schema: public; Owner: moon
--

COPY public.nca_nca (id, question_text, choice_a, choice_b, choice_c, choice_d, correct_answer) FROM stdin;
1	1. Public IP에 대한 설명 중 틀린 것은?	서버당 1개의 Public IP만 부여가 가능하다.	Outbound시에는 NCP NAT IP로 통신한다.	Classic 환경에서는 KR-1 존의 Public IP는 KR-2 존의 서버에 부여가 불가능하다.	서버를 반납해도 Public IP는 반납되지 않는다.	Outbound시에는 NCP NAT IP로 통신한다.
2	2. 다음중 네이버 클라우드 플랫폼에서 제공하는 상품이 아닌 것은 무엇인가요?	Cloud Functions	Container Registry	Outpost	SourcePipeline	Outpost
3	3. 네이버 클라우드 플랫폼에는 다양한 상품들이 카테고리로 그룹화되어 있습니다. "CloudHadoop" 상품은 어떤 카테고리에 속해 있을까요?	Compute	Database	Analytics	AI-Application Service	Analytics
4	4. 다음 중, 사용자가 Agent를 설치해야지만 사용할 수 있는 서비스가 아닌 것은?	Cloud Insight	System Security Checker	CLA	백업 서비스	Cloud Insight
5	5. 현재 네이버 클라우드 플랫폼에서 제공되지 않는 리전은?	홍콩	미국 동부	일본	독일	미국 동부
6	6. 네이버 클라우드 플랫폼에서 제공하고 있지 않은 전문화된 클라우드는 어떤 것인가요?	금융 클라우드	민간 클라우드	공공 클라우드	아카데미 클라우드	아카데미 클라우드
7	7. 다음 중 콘솔에서 서비스를 신청할 수 없는 서비스는?	백업 서비스	서버 이미지 생성	스냅샷 기능	모니터링 서비스	백업 서비스
8	9. 오토스케일링 설정 시 오토 스케일링 그룹(ASG)에서 설정 가능한 내용이 아닌 것은 무엇인가?	오토스케일링으로 생성될 서버의 OS	오토스케일링에서 사용할 Launch Configuration	서버 증가, 감소 정책	일정 설정	오토스케일링으로 생성될 서버의 OS
9	10. 다음이 설명하는 내용은 Auto Scaling의 어떤 항목인가? 새로운 서버가 생성되었다고 해도, Init-Script 실행이나 업데이트 설치 등의 이유로 실제 서비스를 수행할 수 있을 정도로 준비되기까지는 시간이 소요될 수 있습니다. 이것은 실제Scaling이 수행 중이거나 수행 완료된 이후에 모니터링 이벤트 알람이 발생하더라도 무시하도록 설정한 기간입니다.	쿨다운	헬스체크	기대용량	Policy	쿨다운
10	11. Data Teleporter에 대한 설명으로 잘못된 것은?	Data Teleporter 한 대당 100TB의 저장용량을 가지며, 내부적으로 디스크 문제가 최소화될 수 있도록 설계되었습니다.	별도의 요청이 없다면 Data Teleporter는 최초 대여 후 60일 이내에 네이버 클라우드 플랫폼으로 반환되어야 합니다.	Data Teleporter는 고객이 신청한 암호화 키로 256비트 암호화되며, 암호화 키는 장치 내 그 어디에도 저장되지 않습니다.	Linux Server와 Windows Server는 모두 NFS 또는 CIFS 공유 파일시스템으로 연결(mount) 할 수 있습니다.	별도의 요청이 없다면 Data Teleporter는 최초 대여 후 60일 이내에 네이버 클라우드 플랫폼으로 반환되어야 합니다.
11	12. 다음 중, NAS에 대한 설명 중 잘못된 것은?	NAS는 임계치 설정에 따른 이벤트 알림 기능을 제공한다.	NAS는 일정한 스케줄에 따라 자동 스냅샷을 완성한다.	NAS는 리눅스 서버에서 공유 가능한 CIFS 프로토콜을 제공한다.	네이버클라우드플랫폼에서는 NAS 생성 시 마운트포인트 정보를 제공한다.	NAS는 리눅스 서버에서 공유 가능한 CIFS 프로토콜을 제공한다.
12	13. 베어메탈에 대한 설명 중 틀린 것은?	3가지 스펙을 제공하고 있다.	OS로 Oracle Linux도 제공한다.	디스크 구성시 RAID 방식을 선택할 수 있다.	내 서버 이미지, 스냅샷, 추가 스토리지 기능은 제공하지 않는다.	3가지 스펙을 제공하고 있다.
13	14. Bare Metal 서버에 대한 설명 중 틀린 것은?	RAID 1 구성방식만 제공한다.	요금제는 시간 요금제만 제공한다.	Init Script 사용이 가능하다.	Oracle Linux가 제공된다.	RAID 1 구성방식만 제공한다.
14	15. 다음 중, 네이버 클라우드 플랫폼 서버에 스토리지 추가와 관련하여 틀리게 설명한 것은?	Linux의 LVM, Window는 동적디스크 할당을 통해 여러 개의 디스크를 하나의 볼륨으로 묶을 수 있습니다.	서버에 연결된 디스크를 다른 서버로 옮길 수 있습니다.	사용 중인 디스크의 크기가 부족할 경우, 최대 15개의 스토리지를 추가할 수 있습니다.	스토리지 당, 100GB, 500GB, 1TB의 단위의 용량만 추가할 수 있습니다.	스토리지 당, 100GB, 500GB, 1TB의 단위의 용량만 추가할 수 있습니다.
15	17. 다음 스토리지 상품 특징에 대한 설명으로 맞는 것은?	NAS는 10GB, 100GB, 500GB 등 다양한 단위로 스토리지 증가가 가능하다.	Block Storage와 NAS는 모두 공유 가능한 스토리지이다.	NAS는 동적으로 볼륨 사이즈 조정이 가능하고, 자동 스냅샷 및 이벤트 알람 기능을 제공한다.	NAS는 Windows 서버만 이용할 수 있는 스토리지다.	NAS는 동적으로 볼륨 사이즈 조정이 가능하고, 자동 스냅샷 및 이벤트 알람 기능을 제공한다.
17	20. 다음 상품 중 상품 생성 시 CDN을 함께 생성하는 기능이 없는 상품은 무엇인가요?	VOD Transcoder	Image Optimizer	Live Station	VOD Station	VOD Transcoder
18	21. 다음 중 VPC에서 사용 가능한 IP 대역은 무엇인가요?	10.0.0.0/12	172.17.0.0/16	192.168.0.0/8	192.168.1.0/3	172.17.0.0/16
19	22. 네이버 클라우드 플랫폼의 VPC 환경에서 ACG에 대한 설명으로 옳은 것은 무엇인가요?	프로토콜은 TCP, UDP만 지원한다.	Subnet당 100개 생성이 가능하다.	서버와의 맵핑 정보 변경이 가능하다.	Rule에 우선순위가 있다.	서버와의 맵핑 정보 변경이 가능하다.
20	23. Image Optimizer에 대한 설명으로 틀린 것을 고르시오.	이미지 리사이즈 기능을 제공한다.	이미지 크롭 기능을 제공한다.	이미지 자동회전 기능을 제공한다.	이미지 일관 변환 및 저장 기능을 제공한다.	이미지 일관 변환 및 저장 기능을 제공한다.
21	24. 애플리케이션 로드밸런서의 특징으로 틀린 것은 무엇인가요?	HTTP, HTTPS 프로토콜 지원	고정 IP 제공	URL 기반 분기 가능	별도의 설정 없이 Client IP 확인 가능	별도의 설정 없이 Client IP 확인 가능
22	25. NCA네이버 클라우드 플랫폼의 VPC 환경에서 ACG 룰이 적용되는 장치는 무엇인가요?	서버	서버 NIC	IP	Subnet	서버 NIC
23	26. 네이버 클라우드 플랫폼 VPC의 Subnet에 대한 설명으로 틀린 것은 무엇인가요?	Private Subnet과 Public Subnet이 있습니다.	서버들은 Private Subnet과 Public Subnet 모두 위치 시킬 수 있습니다.	공인 IP가 필요한 로드밸런서는 Public Subnet에 위치합니다.	Private Subnet에 있는 서버들은 공인 IP 부여를 할 수 없습니다.	공인 IP가 필요한 로드밸런서는 Public Subnet에 위치합니다.
24	28. 네이버 클라우드 플랫폼 상품 중 Apache Kafka Cluster를 제공하는 서비스 이름은 무엇인가요?	Cloud Data Streaming Service	Cloud Search	Data Analytics Service	Cloud Advisor	Cloud Data Streaming Service
25	29. 네이버 클라우드 플랫폼의 Effective Log Search & Analytics의 로그전송 방법이 아닌것은 무엇인가요?	HTTPS SDK	IOS SDK	SOCK SDK	LOG SDK	SOCK SDK
26	30. Workplace에서 제공되지 않는 기능은 무엇인가요?	결제시스템	인사시스템	스프레드 시트	메신저	스프레드 시트
27	31. 다음 중, Cloud DB for MySQL과 관련하여 잘못된 설명은?	Cloud DB for MySQL은 자동 Fail-over 기능을 제공한다.	Cloud DB for MySQL의 최대 백업 파일 보관은 20일이다.	Cloud DB for MySQL은 최대 10개의 Slave DB를 생성할 수 있다.	Cloud DB for MySQL은 Slave DB로의 읽기 부하분산이 가능하다.	Cloud DB for MySQL의 최대 백업 파일 보관은 20일이다.
28	32. 네이버 클라우드 플랫폼 VPC 환경에서의 ACG에 대한 설명 중 틀린 것은?	아웃바운드에 대한 설정이 가능하다.	접근 허용에 대한 룰을 설정한다.	ACG 하나당 최대 100개의 룰을 적용할 수 있다.	서버는 최대 5개의 ACG를 맵핑할 수 있다.	서버는 최대 5개의 ACG를 맵핑할 수 있다.
29	33. Security Monitoring에서 제공되지 않는 항목은?	IDS	IPS	WAF	침해탐지	침해탐지
30	34. 서버 생성시 init script를 통해 서버를 구성할 수 있습니다. CentOS 7.x버전의 서버를 생성하면서 HTTPD를 설치하도록 init script에 명령어를 입력하고자 하는 경우 올바른명령어는 무엇인가요?	install httpd	yum install httpd	yum install -y httpd	yum install –a httpd	yum install -y httpd
31	35. 마이크로서버에 대한 설명 중 틀린 것은?	Network interface를 만들 수 없다.	1vCPU, 1GB 메모리이다.	OS는 CentOS, Ubuntu, Windows를 지원한다.	결제수단 최초 등록 월부터 1년간 이용요금이 무료이다.	OS는 CentOS, Ubuntu, Windows를 지원한다.
32	37. 다음 기능을 이용하기 위해, 사전에 서버 정지가 필수적인 기능은?	내 서버 이미지	스냅샷	서버 이미지 빌더	서버 반납	서버 반납
33	38. 다음 중 Block Storage에 대한 설명 중 잘못된 것은?	데이터 손실 방지를 최우선으로 설계하여 모든 요소가 이중화 되어 있습니다.	2000GB까지 생성 가능하며, 서버 1대당 10개의 스토리지를 사용할 수 있습니다.	기동 중단이나 성능 저하 없이 탄련적으로 성능 변경이 가능합니다.	HDD/SDD 두 가지 타입으로 제공되며 목적에 맞게 적절한 스토리지 종류를 선택하여 사용할 수 있습니다.	2000GB까지 생성 가능하며, 서버 1대당 10개의 스토리지를 사용할 수 있습니다.
34	39. 네이버 클라우드 플랫폼에서 제공하는 GPU 카드는?	P40	T4	V100	P40, T4, V100 모두 제공	P40, T4, V100 모두 제공
35	40. 네이버 클라우드 플랫폼 서버에 스토리지 추가를 할 경우 단일 추가 스토리지당 최대 용량은 얼마인가요?	1TB	2TB	3TB	4TB	2TB
36	41. 네이버 클라우드 플랫폼에 서버를 생성하고 네트워크 구성을 하였을 때, 그에 대한 설명으로 틀린 것은 무엇인가요?	서버는 기본적으로 10.xxx / 172.16xx / 192.168.xx 대역 중 하나의 사설 IP를 부여받을 수 있다.	서버의 사설망 네트워크 대역은 최소 /28부터 최대 /16 범위까지 설정 가능하다.	Public IP를 연결하면 서버에서 ifconfig/ipconfig 명령어를 칠 시 Public IP가 보인다.	서버는 기본적으로 1Gps 대역폭의 인터페이스를 생성한다.	Public IP를 연결하면 서버에서 ifconfig/ipconfig 명령어를 칠 시 Public IP가 보인다.
37	42. 다음 상품 중 Media 카테고리 상품이 아닌 것은 무엇인가요?	Live Station	VOD Station	VOD Transcoder	Elastic Transcoder	Elastic Transcoder
38	43. Load Balancer 상품에 대한 설명 중 잘못된 것은?	Classic 플랫폼에서의 헬스체크 주기는 6초이다.	Classic 플랫폼에서는 3번 응답이 없는 경우 Unbind한다.	VPC 플랫폼에서 한 대의 서버는 여러 Target Group에 포함될 수 없다.	VPC 플랫폼에서는 Target Group에서 헬스체크 주기를 수정할 수 있다.	VPC 플랫폼에서 한 대의 서버는 여러 Target Group에 포함될 수 없다.
39	44. 네이버 클라우드 플랫폼 VPC의 NACL에 대한 설명으로 틀린 것은?	Subnet 단위로 적용된다.	Allow Deny 규칙 모두 지원한다.	Stateful 방식이다.	우선순위에 따라 규칙을 반영한다.	Stateful 방식이다.
40	45. Load Balancer로 연결 가능한 프로토콜이 아닌 것은 무엇인가요?	TCP	UDP	HTTPS	SSL	UDP
41	46. VPC 환경에서 Load Balancer를 생성하려고 합니다. Target Group의 디폴트 포트 헬스체크 주기는 얼마인가요?	6초	10초	30초	1분	30초
42	48. 네이버 클라우드 플랫폼 로드밸런서에서 제공되지 않는 로드 분배 알고리즘은?	Round Robin	Weighted Round Robin	Least Connection	Source IP Hash	Weighted Round Robin
43	51. 네이버 클라우드 플랫폼 VPC의 Private Subnet에 대한 설명으로 틀린 것은 무엇인가요?	Private Subnet에 있는 서버들은 공인 IP 부여를 할 수 없습니다.	Private Subnet에 있는 서버들은 Internet Gateway를 통해 외부 인터넷으로 나갈 수 있습니다.	네이버 클라우드 플랫폼의 일부 상품들은 기본적으로 Public Subnet에 위치해야 합니다.	Private Subnet을 Public Subnet으로 전환할 수 없습니다.	Private Subnet에 있는 서버들은 Internet Gateway를 통해 외부 인터넷으로 나갈 수 있습니다.
44	52. 네이버 클라우드 플랫폼에서 하나의 계정으로 만들 수 있는 최대 VPC 갯수는 몇 개인가요?	1개	2개	3개	4개	3개
45	53. 네이버 클라우드 플랫폼 Block Storage에서 제공하는 기능이 아닌 것은?	Detach / Attach 기능	Snapshot 기능	Disk 용량 증설	Disk 용량 축소	Disk 용량 축소
46	54. Auto Scaling 구성 시 설정할 수 있는 항목이 아닌 것은?	NAS	ACG	Load Balancer	VPC / Subnet	NAS
47	55. 네이버 클라우드 플랫폼의 VPC 환경에서 제공하는 로드밸런서 중 세션 유지가 필요한 TCP 기반 애플리케이션에 이용할 수 있는 로드밸런서는 무엇인가요?	애플리케이션 로드밸런서	네트워크 로드밸런서	네트워크 프록시 로드밸런서	애플리케이션 프록시 로드밸런서	네트워크 프록시 로드밸런서
48	56. System Security Checker에서 Linux 서버의 점검 항목이 아닌 것은?	UMASK 설정관리	Guest 계정 사용 제한	홈 디렉토리 권한 설정	Anonymous FTP 비활성화	Guest 계정 사용 제한
49	57. 네이버 클라우드 플랫폼 CLI를 이용하고자 할 때 사용하는 명령어는 무엇인가요?	Ncpcli	Ncloud	Ncloudcli	Ncli	Ncloud
50	58. 다음 중 클라우드의 특징에 대해 잘못 설명한 것은 무엇인가요?	동일한 네트웍 사용량을 기준으로 보면 Legacy 인프라보다 클라우드가 저렴하다.	Scale-In/Out이 Legacy 인프라보다 자유롭다.	요금은 사용량에 따른 종량제를 기본으로 하지만 상품에 따라 정액제 요금도 존재한다.	사용할 수 있는 서버 OS가 제한한다.	동일한 네트웍 사용량을 기준으로 보면 Legacy 인프라보다 클라우드가 저렴하다.
51	59. 네이버 클라우드 플랫폼에는 다양한 상품들이 카테고리로 그룹화되어있습니다. "VMware on Ncloud" 상품은 어떤 카테고리에 속해 있을까요?	Compute	Server	Management	Hybrid & Private Cloud	Hybrid & Private Cloud
52	60. 다음 중 네이버 클라우드 플랫폼의 Live Station의 특징이 아닌 것은?	방송 서비스 구현에 꼭 필요한 Thumbnail image를 추출하고 직접 관리할 수 있습니다.	Live Station 생성 시 CDN을 동시에 생성할 수 없기에 별도로 생성 후 따로 연동해줘야 합니다.	Live Station은 사용자가 라이브 방송 도중 일시정지를 하고 다시 재생이 가능하도록 타임머신(Time Shift)기능을 제공합니다.	라이브 방송 종료 후, 녹화 영상을 저장할 수 있습니다.	Live Station 생성 시 CDN을 동시에 생성할 수 없기에 별도로 생성 후 따로 연동해줘야 합니다.
53	61. 네이버 클라우드 플랫폼 CDN+에 대한 설명 중 틀린 것은?	사용량에 따라 요금이 다르다.	요금은 일 평균 전송량 X 일 수로 계산된다.	월 전송량 요금에 월 요청 수 요금이 합산되어 진다.	CDN+와 GCDN은 요금 체계가 다르다.	요금은 일 평균 전송량 X 일 수로 계산된다.
55	63. 네이버 클라우드 플랫폼 App Safer에서 앱 실행 환경 탐지가 가능한 부분이 아닌 것은?	루팅 탐지	애플리케이션 변조 탐지	메모리 변조 탐지	APK 추출 탐지	APK 추출 탐지
57	65. 네이버 클라우드 플랫폼에서는 다양한 소통 채널을 통해 사용자와 소통을 진행하고 있습니다. 현재 네이버 클라우드 플랫폼에서 운영하고 있지 않은 채널은 무엇인가요?	블로그	유튜브	페이스북	트위터	트위터
58	66. Cloud Log Analytics에 저장할 수 있는 최대 로그 용량은?	100GB	200GB	300GB	사용자가 설정할 수 있다.	100GB
59	67. Outbound Mailer에서 메일 제목과 본문에서 스프레드 시트나 DB의열 데이터를 순차적으로 입력하기 위한 기능은?	변수 치환	대량 변수 입력	치환 태그	DM 입력	치환 태그
60	68. Cloud Log Analytics의 최대 저장 기간은?	30일	120일	180일	사용자가 설정할 수 있다.	30일
61	69. 네이버 클라우드 플랫폼 챗봇 서비스와 채널 연동되는 서비스가 아닌 것은?	라인	톡톡	페이스북	트위터	트위터
62	70. 네이버 클라우드 플랫폼 AI 서비스에서 제공하지 않는 상품은?	Clova OCR	Clova Image Recognition	Clova Voice	Clova Face Recognition	Clova Image Recognition
63	71. 클라우드는 기존 Legacy와 비교하여 다양한 장점이 있습니다. 아래 보기 중 클라우드 장점이 아닌 것은?	동일한 성능의 서버를 비교하였을 때 Legacy보다 클라우드가 비용 경쟁력이 높다.	서버 구성 시 짧은 시간 내에 구성이 가능하다.	기본적인 보안 장비 및 네트웍이 구성되어 있다.	오토스케일링 플랫폼과 같이 비용 효율적인 상품들이 준비되어 있다.	동일한 성능의 서버를 비교하였을 때 Legacy보다 클라우드가 비용 경쟁력이 높다.
64	72. 네이버 클라우드 플랫폼에서 제공하지 않는 OS는?	CentOS	Oracle Linux	Debian	Ubuntu	Debian
65	73. VPC 플랫폼에서 서버 정지 시 요금 할인이 적용되지 않는 서버 타입은?	Standard	High-CPU	High-Memory	GPU	GPU
66	74. 네이버 클라우드 플랫폼에서 제공하는 시스템 로그 분석 서비스는?	RUA	CLA	ELSA	SENS	CLA
67	75. 오토스케일링을 구성하고자 할 때 오토스케일링 그룹(ASG)을 구성하여야 한다. 오토스케일링 그룹에 대한 설명으로 틀린 것은?	하나의 그룹에서 생성 가능한 최대 서버 대수는 30대이다.	기대 용량은 최소 용량보다 크거나 같아야 한다.	헬스체크 유형에는 서버. 네트워크 트래픽, 로드밸런서가 있다.	하나의 ASG에는 최대 10개의 로드밸런서를 연결할 수 있다.	헬스체크 유형에는 서버. 네트워크 트래픽, 로드밸런서가 있다.
68	77. 오토스케일링의 Launch Configuration 구성 시 구성 가능한 항목이 아닌 것을 고르시오.	생성될 서버의 OS	사전에 만들어놓은 내 서버 이미지	Init Script	로드밸런서	로드밸런서
69	78. 서버 생성시 init script를 통해 서버를 구성할 수 있습니다. CentOS 7.x버전의 서버를 생성하면서 HTTPD를 설치한 후, HTTPD가 자동으로 가동되도록 init script에 명령어를 입력하고자 하는 경우 올바른 명령어는 무엇인가요?	systemctl start httpd	chkconfig start httpd	systemctl enable httpd	chkconfig on httpd	systemctl enable httpd
70	79. 백업 상품 신청서 작성 시 필요한 정보가 아닌 것은?	백업 받을 서버의 호스트명	백업 받을 서버의 비공인 IP	백업 프로세스의 CPU 사용량 제한 여부	데이터 사이즈	백업 프로세스의 CPU 사용량 제한 여부
113	49. 네이버 클라우드 플랫폼 VPC 환경에서 제공하는 로드밸런서 중 SSL인증을 지원하는 로드밸런서는 무엇인가요?	애플리케이션 로드밸런서	네트워크 로드밸런서	하이브리드 로드밸런서	애플리케이션 프록시 로드밸런서	애플리케이션 로드밸런서
56	64. VPC 플랫폼 상의 상품 의존성 관계를 [상품 : 의존성] 형태로 나타냈을 때, 올바르지 않은 관계는?	VPC : 리전	Subnet : Zone	Init Script : Zone	Cloud DB : Multi Zone	Init Script : Zone
71	81. 서버 패스워드에 대한 설명 중 틀린 것은?	초기 패스워드는 서버 생성 시 생성한 인증키를 가지고 확인할 수 있다.	서버에서 패스워드를 변경 후 패스워드를 까먹은 경우 기존에 생성한 인증키를 통해 패스워드를 확인할 수 있다.	서버 생성 시 생성한 인증키는 다른 인증키로 교체할 수 있다.	서버 초기 패스워드는 복잡한 문자열로 부여한다.	서버에서 패스워드를 변경 후 패스워드를 까먹은 경우 기존에 생성한 인증키를 통해 패스워드를 확인할 수 있다.
72	82. SSD 스토리지의 크기가 400GB일 때 MAX IOPS는 얼마인가?	2000	8000	16000	20000	16000
73	84. 서버 생성 시 선택 가능한 스토리지 종류에 대한 설명 중 틀린 것은?	SSD 타입은 저장장치가 SSD인 디스크이다.	HDD 타입은 저장장치가 SATA인 디스크이다.	서버 타입에 따라 NVMe 디스크를 사용할 수 있다.	SSD 타입은 MAS IOPS가 지정된다	HDD 타입은 저장장치가 SATA인 디스크이다.
74	85. VPC 환경 / Classic 2세대 서버의 High CPU 서버 스펙 중 생성 가능한 서버 스펙은 무엇인가요?	vCPU 4개, RAM 8GB	vCPU 8개, RAM 8GB	vCPU 2개, RAM 8GB	vCPU 16개, RAM 128GB	vCPU 4개, RAM 8GB
75	86. VPC 환경에서 사용 중인 VM에 ACG 관리 작업으로 맞는 것을 고르시오.	VM 기동 중에는 ACG 변경이 불가능하므로 VM을 정지시킨 후 ACG를 변경한다.	ACG는 서버 NIC에 매핑된다.	하나의 서버는 최대 2개의 ACG와 매핑될 수 있다.	ACG는 VM당 1개만 선택할 수 있으므로 타 VM과 공유하여 사용하지 않는 것이 좋다.	ACG는 서버 NIC에 매핑된다.
76	87. Linux용 Init Script로 생성 불가능한 스크립트 언어는?	bash	perl	python	php	php
77	88. Bare-Metal 서버 기능 설명으로 맞는 것은?	스토리지 RAID 설정은 RAID 1, RAID 1+0을 제공한다.	운영체제로 Oracle Linux를 지원한다.	로컬 디스크 추가가 가능하다.	서버 정지 시에는 스토리지 사용 요금만 과금한다.	운영체제로 Oracle Linux를 지원한다.
78	89. Object Storage에 대한 설명 중 틀린 것은?	파일 단위의 데이터 저장, 공유, 배포가 가능하여 콘텐츠를 저장하고, 다른 사용자에게공유하거나 배포할 수 있습니다.	대용량 데이터의 저장소로 활용할 수 있습니다.	네이버 클라우드 플랫폼 사용자가 아닌 외부 사용자에게 파일 접근 권한을 제공하기 위해서는 반드시 "폴더 공개하기" 기능을 사용해야 합니다.	CDN 상품과 연동하여 사용할 수 있습니다.	네이버 클라우드 플랫폼 사용자가 아닌 외부 사용자에게 파일 접근 권한을 제공하기 위해서는 반드시 "폴더 공개하기" 기능을 사용해야 합니다.
79	90. 서버 스토리지에 대한 설명으로 맞는 것은?	부팅 스토리지가 HDD인 경우, 추가 스토리지로 HDD만 추가할 수 있다.	VM이 운영 중인 상태에서도 Disk 변경이 가능하다.	디스크의 사이즈를 기존보다 크게만 변경이 가능하다.	High-Memory, Bare-Metal 서버의 경우 스토리지 추가가 지원되지 않는다.	디스크의 사이즈를 기존보다 크게만 변경이 가능하다.
80	91. 백업 서비스 설명 중 틀린 것은?	보관 주기는 백업 주기의 최소 2배 이상이 되어야 합니다.	증분 백업은 전체 백업 이후 백업 디렉토리 내 변경된 데이터만 백업하는 방식이다.	백업된 데이터는 최소 1주부터 50주까지 보관이 가능합니다.	전체 백업은 백업 디렉토리의 모든 데이터를 백업합니다.	백업된 데이터는 최소 1주부터 50주까지 보관이 가능합니다.
81	92. 네이버 클라우드 플랫폼 백업 상품의 경우, 백업 데이터 보관 기간으로 알맞은 것은?	최소 1일부터 최대 4주	최소 7일부터 최대 52주	최소 15일부터 최대 36주	최소 30일부터 최대 1년	최소 7일부터 최대 52주
82	93. 다음 상품 중 Networking 카테고리 상품이 아닌 것은 무엇인가요?	IPSec VPN	Load Balancer	NAT Gateway	Auto Scaling	Auto Scaling
83	94. 다음 중 VPC에서 사용할 수 없는 IP 대역은 무엇인가요?	10.0.0.0/16	192.168.0.0/24	172.16.0.0/16	172.255.0.0/24	172.255.0.0/24
84	95. Classic 환경에서 서버에 부착된 하나의 NIC에 두 개 이상의 IP를 부여하였을 때 발생할수 있는 상황은?	기존 IP로는 통신이 되나 추가된 IP로 통신이 되지 않는다.	추가된 IP 뿐만 아니라 기존 IP도 통신이 되지 않는다.	서버가 강제 정지된다.	기존 IP는 통신이 안되고 추가된 IP로만 통신이 된다.	추가된 IP 뿐만 아니라 기존 IP도 통신이 되지 않는다.
85	96. VOD Transcoder에 대한 설명 중 틀린 것은?	Preser은 1~5까지 설정 가능하다.	Codec는 H.264만 지원한다.	Thumbnail를 자동 생성한다.	Output 경로는 File Storage와 Object Storage에 저장할 수 있다.	Thumbnail를 자동 생성한다.
86	97. 다음 중 VPC에서 사용할 수 없는 IP 대역은 무엇인가요?	10.0.0.0/8	192.168.1.0/16	172.16.0.0/24	192.168.0.0/24	10.0.0.0/8
87	98. VPC 환경에서는 다양한 방식의 로드밸런서를 제공하고 있습니다. 네이버 클라우드 플랫폼에서 제공하고 있지 않은 로드밸런서 방식은 무엇인가요?	애플리케이션 로드밸런서	네트워크 로드밸런서	네트워크 프록시 로드밸런서	애플리케이션 프록시 로드밸런서	애플리케이션 프록시 로드밸런서
88	99. 다음 중 CDN+ 설명 중 틀린 것은?	CDN+는 HTTP/HTTPS 프로토콜을 통해 다양한 원본 서버와의 콘텐츠 연동을 지원합니다.	원본 서버로 고객이 보유 중인 다양한 웹 서버 및 네이버 클라우드 플랫폼의 Storage,Server를 선택할 수 있습니다.	HTTPS로 웹 서비스를 제공하는 경우 콘텐츠가 HTTP로 호출되면 서비스가 불가능합니다.	레퍼러로 등록된 도메인 기준 접근 허용 기능을 제공합니다.	HTTPS로 웹 서비스를 제공하는 경우 콘텐츠가 HTTP로 호출되면 서비스가 불가능합니다.
89	100. 다음에서 설명하는 기능은 어떤 상품을 설명하는 것일까요? 방화벽과 같이 ACL을 설정하는 외부의 네트웍과 연결시 네이버 클라우드 플랫폼내에 있는 다수의 서버들이 하나의 공인 IP로 해당 외부 네트웍에 접근할 수 있게해주며, Private Subnet에서 외부 인터넷으로 연결이 필요할 때 필수적인 상품	Load Balancer	IPSec VPN	NAT Gateway	API Gateway	NAT Gateway
90	101. 네트워크 로드밸런서의 특징으로 틀린 것은 무엇인가요?	별도의 설정 없이 Client IP 확인이 가능하다.	분배 알고리즘은 Source IP Hash와 Round Robin 방식만 제공한다.	로드밸런서를 사용하기 위해 서버에 별도의 설정이 필요하다.	HTTP, HTTPS 프로토콜을 지원하지 않는다.	로드밸런서를 사용하기 위해 서버에 별도의 설정이 필요하다.
91	102. VPC 환경에서 서버를 한 대 생성하였다. 서버 Network Interface에 대한 설명 중 맞는것은?	서버 Network Interface는 최대 3개까지 만들 수 있다.	Network Interface 하나에 여러 개의 IP를 부여할 수 있다.	NIC에는 해당 서버를 처음 생성할 때 선택한 Subnet 범위의 IP만 할당할 수 있다.	원하는 사설IP 설정은 불가능하며, DHCP로 자동 할당만 가능하다.	서버 Network Interface는 최대 3개까지 만들 수 있다.
92	103. 네이버 클라우드 플랫폼 Classic 환경의 로드밸런서와 유사한 VPC 환경에서의 로드밸런서는 어떤 방식인가요?	애플리케이션 로드밸런서	네트워크 로드밸런서	네트워크 프록시 로드밸런서	애플리케이션 프록시 로드밸런서	네트워크 프록시 로드밸런서
93	104. 하나의 VPC에 ACG를 최대 몇 개까지 생성 가능한가요?	5개	100개	300개	500개	500개
94	105. 네이버 클라우드 플랫폼의 VPC 환경에서 ACG에 대한 설명으로 틀린 것은?	서버와 연결되어 있는 맵핑 정보를 변경할 수 있다.	VPC에 의존적이다.	White List 방식의 방화벽이다.	Inbound에 대해서만 룰 적용이 가능하다.	Inbound에 대해서만 룰 적용이 가능하다.
95	106. 네이버 클라우드 플랫폼 VPC 환경의 로드밸런서 상품의 설명 중 틀린 것은?	22번 포트도 로드밸런싱할 수 있다.	VPC 환경에서는 3가지의 로드밸런서가 제공된다.	부하처리 성능에 따라 Small/Medium/Large 중 스펙을 선택할 수있다.	Proxy 방식의 로드밸런서를 사용하면, 별도의 설정없인 클라이언트의 IP를 확인할 수 없다.	Proxy 방식의 로드밸런서를 사용하면, 별도의 설정없인 클라이언트의 IP를 확인할 수 없다.
96	107. 라이브 스트리밍 서비스를 진행하는데 필요한 모든 Back-end 기능을 지원하며, NAVER Cloud Platform CDN 연동을 통해 원활한 라이브 진행을 할 수 있는 상품은?	Clova Face Recognition	Live Station	VOD Transcoder	Image Optimizer	Live Station
97	108. NCA CDN+ 관련 용어 설명 중 틀린 것은?	서비스도메인 : 서비스에서 콘텐츠 전송 시 사용자에게 노출되는 도메인	Ignore Query String : CDN 서비스가 원본 서버에 요청할 떄 "? id=1234"와 같이 URL에 포함된 GET 파라미터를 제거한 후에 요청	Referrer Domain : 콘텐츠가 지정된 도메인에만 제공되게 하여 다른 사이트에서 참조되는 것을 방지	Cache Expiry : 사용자 요청에 의해 요구되는 콘텐츠를 빠르게 제공하기 위해 캐시 서버에 저장	사용자 요청에 의해 요구되는 콘텐츠를 빠르게 제공하기 위해 캐시 서버에 저장
98	109. 비공인 IP를 가진 다수의 서버에게 대표 공인 IP를 이용하여 외부 접속이 가능하게 해주는 상품은?	API Gateway	IP Gateway	NAT Gateway	Global Route Manager	NAT Gateway
99	110. VPC는 하나의 독립된 네트웍을 구성하게 됩니다. 따라서 VPC를 다수 생성하게 되면 VPC간 통신은 되지 않는데 VPC간 통신을 가능하게 해주는 서비스는 무엇인가요?	Private Subnet	Public Subnet	VPC Peering	Route Table	VPC Peering
100	111. 네이버 클라우드 플랫폼 NAS에 대한 설명 중 틀린 것은?	볼륨은 최소 500GB에서 최대 10TB까지이다.	볼륨 크기에 따라 IOPS가 달라진다.	볼륨의 확장 축소는 100GB 단위로 가능하다.	볼륨 개수는 계정 당 20개로 제한된다.	볼륨 개수는 계정 당 20개로 제한된다.
101	112. 오브젝트 스토리지의 설명 중 맞는 것은?	오브젝트 스토리지는 2개의 인증키 사용이 가능합니다.	생성된 버킷 이름은 변경할 수 있습니다.	파일에 대한 공개 여부는 개별 파일에서 설정합니다.	네이버 클라우드 플랫폼의 다른 계정에 공유할 수 없습니다.	파일에 대한 공개 여부는 개별 파일에서 설정합니다.
102	113. 다음 중 클라우드의 비용과 관련이 가장 높은 개념은 무엇인가요?	TCO (총 소요 비용)	ROI (투자 자본 수익률)	CAPEX (자본적 지출)	OPEX (운영 비용)	OPEX (운영 비용)
103	114. Cloud DB 상품에서 제공하고 있지 않은 DBMS는?	Oracle	MS-SQL	MySQL	Redis	Oracle
104	115. 네이버 클라우드 플랫폼의 보안 상품 중 없는 상품은?	App Safer	Web Safer	File Safer	Site Safer	Web Safer
105	116. 네이버 클라우드 플랫폼의 GPU 상품에 대한 설명 중 틀린 것은?	최대 12개의 GPU를 하나의 VM에 할당할 수 있다.	서버를 정지시켜도 요금이 발생한다.	Linux OS를 지원한다.	T4, V100 등의 GPU 카드가 제공된다.	최대 12개의 GPU를 하나의 VM에 할당할 수 있다.
106	117. 다음 중 오브젝트 스토리지 설명 중 틀린 것은?	버킷 공개하기는 버킷 안의 폴더 및 파일 정보 조회 및 업로드가 가능하다.	파일 공개하기는 파일 정보 조회 및 다운로드/업로드가 가능하다.	버킷 권한은 목록 조회, 업로드, ACL 조회, ACL 수정이 가능하다.	파일 권한은 다운로드, ACL 조회, ACL 수정이 가능하다.	파일 공개하기는 파일 정보 조회 및 다운로드/업로드가 가능하다.
107	118. 네이버 클라우드 플랫폼 VPC 환경에서 제공되는 GPU 서버의 특징으로 틀린 것은?	NVDIAT4, V100 이용이 가능하다.	서버 1대당 꽂을 수 있는 T4의 최대 개수는 2개이다.	서버 1대당 꽂을 수 있는 V100의 최대 개수는 4개이다.	Grid 기술을 사용할 수 있다.	Grid 기술을 사용할 수 있다.
108	119. NAS 상품 설명 중 틀린 것은?	자체 스냅샷 기능이 제공된다.	Linux Server와 Windows Server 모두 NAS를 마운트할 수 있습니다.	NAS 볼륨은 네이버 클라우드 플랫폼 인프라 내에 있는 서버에서만 마운트 가능합니다.	NAS는 용량 한도 없이 사용할 수 있다.	NAS는 용량 한도 없이 사용할 수 있다.
109	120. 다음 중 Global Route Manager의 로드밸런싱 타입이 아닌 것은?	Weighted	Round Robin	Geolocation	Source IP Hash	Source IP Hash
110	121. 내 서버 이미지에 대한 설명으로 틀린 것은?	내 서버 이미지가 생성되는 동안 서버는 일시적으로 '복제중' 상태이나 서버는 정상적으로 운영된다.	내 서버 이미지를 다른 리전으로 복제할 수 있다.	내 서버 이미지는 오토스케일링의 Launch Configuration에서도 이용이 가능하다.	내 서버 이미지를 이용해 서버를 생성할 때, 원본 서버의 부팅스토리지 종류와 동일하게 생성된다.	내 서버 이미지를 이용해 서버를 생성할 때, 원본 서버의 부팅스토리지 종류와 동일하게 생성된다.
111	122. 네이버클라우드플랫폼에서 제공하는 GPU 서버는 VM에 최대 몇 개의 GPU를 제공할 수 있는지 올바른 답을 고르시오.	1개	2개	4개	그래픽카드 종류마다 장착할 수 있는 개수가 다르다.	4개
112	123. 네이버 클라우드 플랫폼의 VPC 환경에서 서버 NIC 하나에 적용할 수 있는 ACG의 개수는?	2개	3개	4개	5개	3개
114	50. 다음 로드밸런서 관련 설명 중 틀린 것은?	HTTP Keep-Alive : 연결된 Connection을 일정시간 동안 유지하면서 다시 연결을 요청할 때 기존에 연결된 Connection을 재사용하는 옵션	Connection ilde Timeout : 로드밸런서와 연결된 Connection을 유지하는 시간으로 해당시간이 지나면 Connection이 강제로 Close되어 연결 해제	Proxy Protocol : 로드밸런서에서 TCP, SSL 프로토콜 이용 시, Proxy 환경에서Connection을 요청하는 클라이언트의 IP 주소를 확인할 수 있는 프로토콜	로드밸런서에서 발급된 CNAME을 고객이 보유한 CNAME과 ROOT DOMAIN에 등록가능	로드밸런서에서 발급된 CNAME을 고객이 보유한 CNAME과 ROOT DOMAIN에 등록가능
115	76. VPC 환경 / Classic 2세대 서버의 스펙 중 생성 불가능한 서버 스펙은 무엇인가요?	vCPU 4개, RAM 8GB	vCPU 8개, RAM 8GB	vCPU 2개, RAM 8GB	vCPU 16개, RAM 128GB	vCPU 8개, RAM 8GB
116	80. VPC 환경 / Classic 2세대 서버의 Standard 서버 스펙 중 생성 가능한 서버 스펙은 무엇인가요?	vCPU 2개, RAM 8GB	vCPU 2개, RAM 4GB	vCPU 2개, RAM 16GB	vCPU 4개, RAM 4GB	vCPU 2개, RAM 8GB
117	83. VPC 환경 / Classic 2세대 서버의 High Memory 서버 스펙 중 생성 가능한 서버 스펙은 무엇인가요?	vCPU 4개, RAM 8GB	vCPU 8개, RAM 8GB	vCPU 2개, RAM 8GB	vCPU 16개, RAM 128GB	vCPU 16개, RAM 128GB
16	19. CDN+ 설정 시 설정 항목에 대한 설명 중 올바르지 않은 것은 무엇인가요?	Purge : CDN 캐시 서버에 저장되어 있는 콘텐츠를 삭제하는 기능	Secure Token : 토큰 기반의 인증으로 허용된 접근에만 콘텐츠를 전달	lgnore Query String : 콘텐츠가 지정된 도메인에만 제공되며 다른 사이트에서 참조되는 것을 방지	Access Log : CDN 사용 로그를 확인할 수 있는 기능	lgnore Query String : 콘텐츠가 지정된 도메인에만 제공되며 다른 사이트에서 참조되는 것을 방지
54	62. Application 서비스 각각의 서비스 명과 설명 중 잘못된 것은?	Clova Speech Recognition : 사람의 목소리를 텍스트로 바꿔주어 다양한 음성인식 서비스에 활용 가능한 서버	Clova Face Recognition : 이미지 속의 얼굴을 감지하고 인식하여 얻은 다양한 정보를 제공할 수 있는 서비스	Papago NMT : 입력한 텍스트를 대규모 학습 데이터를 기반으로 여러 나라의 언어로 지동 번역해주는 서비스	Object Detection : 입력한 텍스트를 자연스러운 목소리로 재생해주는 음성 합성 API서비스	Object Detection : 입력한 텍스트를 자연스러운 목소리로 재생해주는 음성 합성 API서비스
\.


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: moon
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: moon
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: moon
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 48, true);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: moon
--

SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 1, false);


--
-- Name: auth_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: moon
--

SELECT pg_catalog.setval('public.auth_user_id_seq', 1, true);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: moon
--

SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 1, false);


--
-- Name: aws_aws_id_seq; Type: SEQUENCE SET; Schema: public; Owner: moon
--

SELECT pg_catalog.setval('public.aws_aws_id_seq', 1547, true);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: moon
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 1357, true);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: moon
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 12, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: moon
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 26, true);


--
-- Name: linux_table12_id_seq; Type: SEQUENCE SET; Schema: public; Owner: moon
--

SELECT pg_catalog.setval('public.linux_table12_id_seq', 100, true);


--
-- Name: linux_table13_id_seq; Type: SEQUENCE SET; Schema: public; Owner: moon
--

SELECT pg_catalog.setval('public.linux_table13_id_seq', 100, true);


--
-- Name: linux_table14_id_seq; Type: SEQUENCE SET; Schema: public; Owner: moon
--

SELECT pg_catalog.setval('public.linux_table14_id_seq', 100, true);


--
-- Name: linux_table15_id_seq; Type: SEQUENCE SET; Schema: public; Owner: moon
--

SELECT pg_catalog.setval('public.linux_table15_id_seq', 100, true);


--
-- Name: nca_nca_id_seq; Type: SEQUENCE SET; Schema: public; Owner: moon
--

SELECT pg_catalog.setval('public.nca_nca_id_seq', 117, true);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: aws_aws aws_aws_pkey; Type: CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.aws_aws
    ADD CONSTRAINT aws_aws_pkey PRIMARY KEY (id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: linux_pdf3 linux_table12_pkey; Type: CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.linux_pdf3
    ADD CONSTRAINT linux_table12_pkey PRIMARY KEY (id);


--
-- Name: linux_pdf1 linux_table13_pkey; Type: CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.linux_pdf1
    ADD CONSTRAINT linux_table13_pkey PRIMARY KEY (id);


--
-- Name: linux_pdf4 linux_table14_pkey; Type: CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.linux_pdf4
    ADD CONSTRAINT linux_table14_pkey PRIMARY KEY (id);


--
-- Name: linux_pdf2 linux_table15_pkey; Type: CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.linux_pdf2
    ADD CONSTRAINT linux_table15_pkey PRIMARY KEY (id);


--
-- Name: nca_nca nca_nca_pkey; Type: CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.nca_nca
    ADD CONSTRAINT nca_nca_pkey PRIMARY KEY (id);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: moon
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: moon
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: moon
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: moon
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: public; Owner: moon
--

CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: public; Owner: moon
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: public; Owner: moon
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: public; Owner: moon
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: public; Owner: moon
--

CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: moon
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: moon
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: moon
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: moon
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: moon
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

